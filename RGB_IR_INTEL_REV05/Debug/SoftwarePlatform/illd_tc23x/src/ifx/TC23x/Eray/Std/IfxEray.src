	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc12964a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\.IfxEray.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c'

	
$TC16X
	.sdecl	'.zrodata.IfxEray..1.cnt',data,rom
	.sect	'.zrodata.IfxEray..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	2139062271
	.sdecl	'.zrodata.IfxEray..2.cnt',data,rom
	.sect	'.zrodata.IfxEray..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	50593791
	.sdecl	'.zrodata.IfxEray..3.cnt',data,rom
	.sect	'.zrodata.IfxEray..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	117903359
	
	.sdecl	'.text.IfxEray.IfxEray_calcHeaderCrc',code,cluster('IfxEray_calcHeaderCrc')
	.sect	'.text.IfxEray.IfxEray_calcHeaderCrc'
	.align	2
	
	.global	IfxEray_calcHeaderCrc

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     2   * \file IfxEray.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     3   * \brief ERAY  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    23   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    24  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    25  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    27  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    28  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    29  #include "IfxEray.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    30  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    31  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    32  /*-------------------------Function Implementations---------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    33  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    34  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    35  uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator)
; Function IfxEray_calcHeaderCrc
.L26:
IfxEray_calcHeaderCrc:	.type	func
	mov	d15,d7
.L216:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    36  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    37      uint32 headerValue = ((syncFrameIndicator & 0x1) << 19) | ((startupFrameIndicator & 0x1) << 18) | ((frameId & 0x7FF) << 7) | (payloadLength &
	and	d15,#1
.L217:
	sha	d0,d15,#19
.L324:
	and	d15,d6,#1
.L325:
	sha	d1,d15,#18
.L326:
	or	d0,d1
.L327:
	insert	d1,d5,#0,#11,#21
.L328:
	and	d15,d4,#127
.L329:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    38                                                                                                                                    0x7F);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    39  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    40      uint32 crcInit = 0x1A;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    41      uint32 length  = 20;
	mov	d2,#20
.L218:
	sha	d1,#7
.L330:
	or	d0,d1
.L331:
	or	d0,d15
.L332:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    42      uint32 crcNext;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    43      uint32 crcPoly = 0x385;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    44      uint32 crcRegX = crcInit;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    45      uint32 headerTemp, regTemp;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    46  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    47      headerValue <<= 11;
	sh	d0,d0,#11
.L219:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    48      crcRegX     <<= 21;
	movh	d1,#832

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    49      crcPoly     <<= 21;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    50  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    51      while (length--)
.L2:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    52      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    53          headerValue <<= 1;
	sh	d0,#1
.L333:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    54          headerTemp    = headerValue & 0x80000000;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    55          regTemp       = crcRegX & 0x80000000;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    56  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    57          if (headerTemp ^ regTemp) // Step 1
	xor	d15,d0,d1
.L334:
	insert	d15,d15,#0,#0,#31
.L335:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    58          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    59              crcNext = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    60          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    61          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    62          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    63              crcNext = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    64          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    65  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    66          crcRegX <<= 1;          // Step 2
	sh	d1,#1
.L336:
	add	d2,#-1
.L337:
	ne	d15,d15,#0
.L220:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    67  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    68          if (crcNext)
	jeq	d15,#0,.L3
.L338:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    69          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    70              crcRegX ^= crcPoly; // Step 3
	movh	d15,#28832
.L221:
	xor	d1,d15
.L3:
	jne	d2,#0,.L2
.L339:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    71          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    72      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    73  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    74      crcRegX >>= 21;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    75  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    76      return (uint16)crcRegX;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    77  }
	sh	d2,d1,#-21
	ret
.L151:
	
__IfxEray_calcHeaderCrc_function_end:
	.size	IfxEray_calcHeaderCrc,__IfxEray_calcHeaderCrc_function_end-IfxEray_calcHeaderCrc
.L92:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_changePocState',code,cluster('IfxEray_changePocState')
	.sect	'.text.IfxEray.IfxEray_changePocState'
	.align	2
	
	.global	IfxEray_changePocState

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    78  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    79  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    80  boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand)
; Function IfxEray_changePocState
IfxEray_changePocState:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    81  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    82      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    83  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    84      // wait if Communication controller is busy
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    85      while (eray->SUCC1.B.PBSY == 1)
.L5:
	ld.bu	d15,[a4]128
.L305:
	jnz.t	d15:7,.L5
.L306:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    86      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    87  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    88      eray->SUCC1.B.CMD = pocCommand;
	ld.bu	d15,[a4]128
.L307:
	insert	d15,d15,d4,#0,#4
	st.b	[a4]128,d15
.L308:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    89  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    90      // if command not accepted, return FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    91      if (eray->SUCC1.B.CMD == 0)
	ld.bu	d15,[a4]128
	and	d15,#15
.L309:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    92      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    93          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    94      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    95      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    96      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    97          result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    98      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	    99  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   100      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   101  }
	ne	d2,d15,#0
	ret
.L144:
	
__IfxEray_changePocState_function_end:
	.size	IfxEray_changePocState,__IfxEray_changePocState_function_end-IfxEray_changePocState
.L82:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_clearAllFlags',code,cluster('IfxEray_clearAllFlags')
	.sect	'.text.IfxEray.IfxEray_clearAllFlags'
	.align	2
	
	.global	IfxEray_clearAllFlags

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   102  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   104  void IfxEray_clearAllFlags(Ifx_ERAY *eray)
; Function IfxEray_clearAllFlags
.L29:
IfxEray_clearAllFlags:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   105  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   106      eray->EIR.U  = 0xFFFFFFFFU;   /* Clear Error Int.                        */
	mov	d15,#-1
	st.w	[a4]32,d15
.L258:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   107      eray->SIR.U  = 0xFFFFFFFFU;   /* Clear Status Int.                       */
	st.w	[a4]36,d15
.L259:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   108      eray->EIER.U = 0xFFFFFFFFU;   /* Disable all Error Int.                  */
	st.w	[a4]52,d15
.L260:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   109      eray->SIER.U = 0xFFFFFFFFU;   /* Disable all Status Int.                 */
	st.w	[a4]60,d15
.L261:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   110      eray->MHDS.U = 0x7F7F7FFFU;   /* Clear Error Int.                        */
	ld.w	d15,.1.cnt
.L262:
	st.w	[a4]784,d15
.L263:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   111  }
	ret
.L118:
	
__IfxEray_clearAllFlags_function_end:
	.size	IfxEray_clearAllFlags,__IfxEray_clearAllFlags_function_end-IfxEray_clearAllFlags
.L57:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_enableInterruptLines',code,cluster('IfxEray_enableInterruptLines')
	.sect	'.text.IfxEray.IfxEray_enableInterruptLines'
	.align	2
	
	.global	IfxEray_enableInterruptLines

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   113  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   114  void IfxEray_enableInterruptLines(Ifx_ERAY *eray)
; Function IfxEray_enableInterruptLines
.L31:
IfxEray_enableInterruptLines:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   115  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   116      eray->ILE.U   = 0x00000003U; //enable both the interrupt lines
	mov	d15,#3
	st.w	[a4]64,d15
.L268:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   117      eray->EILS.U  = 0x00000000U; // all interrupt lines to INT0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   118      eray->SILS.U  = 0x00000800U; // TOBC interrupt line to INT1SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   119      eray->SIES.U  = 0x0303FFFFU; // all status interrupts are enabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   120      eray->EIES.U  = 0x07070FFFU; // all error interrupts are enabled
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   121      eray->NDIC1.U = 0x00000000U; // all interrupt lines to NADT0SRC
	mov	d0,#0
	lea	a15,[a4]936
.L269:
	mov	d15,#2048
	st.w	[a4]40,d0
.L270:
	st.w	[a4]44,d15
.L271:
	lea	a2,7
.L272:
	ld.w	d15,.2.cnt
.L273:
	st.w	[a4]56,d15
.L274:
	ld.w	d15,.3.cnt
.L275:
	st.w	[a4]48,d15
.L24:
	st.w	[a15+],d0
	loop	a2,.L24
.L276:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   122      eray->NDIC2.U = 0x00000000U; // all interrupt lines to NADT0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   123      eray->NDIC3.U = 0x00000000U; // all interrupt lines to NADT0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   124      eray->NDIC4.U = 0x00000000U; // all interrupt lines to NADT0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   125      eray->MSIC1.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   126      eray->MSIC2.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   127      eray->MSIC3.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   128      eray->MSIC4.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   129  }
	ret
.L121:
	
__IfxEray_enableInterruptLines_function_end:
	.size	IfxEray_enableInterruptLines,__IfxEray_enableInterruptLines_function_end-IfxEray_enableInterruptLines
.L62:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_readData',code,cluster('IfxEray_readData')
	.sect	'.text.IfxEray.IfxEray_readData'
	.align	2
	
	.global	IfxEray_readData

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   130  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   131  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   132  void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength)
; Function IfxEray_readData
.L33:
IfxEray_readData:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   133  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   134      if (data != NULL_PTR)
	jz.a	a5,.L7
.L165:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   135      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   136          uint16 length = (payloadLength + 1) / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   137          uint8  index;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   139          for (index = 0; index < length; index++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   140          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   141              *data++ = eray->RDDS_1S[index].U;
	add	d4,#1
	lea	a15,[a4]1536
.L222:
	sha	d4,#-1
.L344:
	mov	d15,#0
	j	.L8
.L9:
	add	d15,#1
	ld.w	d0,[a15+]
.L223:
	extr.u	d15,d15,#0,#8
	st.w	[a5+],d0
.L8:
	jlt.u	d15,d4,.L9
.L7:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   142          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   143      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   144  }
	ret
.L160:
	
__IfxEray_readData_function_end:
	.size	IfxEray_readData,__IfxEray_readData_function_end-IfxEray_readData
.L97:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_readFrame',code,cluster('IfxEray_readFrame')
	.sect	'.text.IfxEray.IfxEray_readFrame'
	.align	2
	
	.global	IfxEray_readFrame

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   145  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   146  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   147  void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength)
; Function IfxEray_readFrame
.L35:
IfxEray_readFrame:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   148  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   149      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   150          Ifx_ERAY_RDHS1 rdhs1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   151          rdhs1.U                          = eray->RDHS1.U;
	ld.w	d15,[a4]1792
.L178:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   152          Ifx_ERAY_RDHS2 rdhs2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   153          rdhs2.U                          = eray->RDHS2.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   154          Ifx_ERAY_RDHS3 rdhs3;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   155          rdhs3.U                          = eray->RDHS3.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   156  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   157          header->frameId                  = rdhs1.B.FID;
	ld.hu	d1,[a5]0
.L349:
	extr.u	d15,d15,#0,#11
	ld.w	d0,[a4]1796
.L226:
	ld.w	d2,[a4]1800
.L228:
	insert	d15,d1,d15,#0,#11
	st.h	[a5],d15
.L350:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   158          header->payloadLength            = rdhs2.B.PLR;
	extr.u	d1,d0,#24,#7
.L351:
	ld.bu	d15,[a5]2
.L352:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   159          header->headerCrc                = rdhs2.B.CRC;
	extr.u	d0,d0,#0,#11
.L227:
	insert	d6,d15,d1,#0,#7
	st.b	[a5]2,d6
.L353:
	ld.hu	d1,[a5]4
.L354:
	insert	d15,d1,d0,#0,#11
	st.h	[a5]4,d15
.L355:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   160          header->reservedBit              = rdhs3.B.RES;
	extr.u	d0,d2,#24,#8
.L356:
	ld.bu	d15,[a5]5
.L357:
	extr.u	d1,d0,#5,#1
.L358:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   161          header->payloadPreambleIndicator = rdhs3.B.PPI;
	extr.u	d3,d0,#4,#1
.L359:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   162          header->nullFrameIndicator       = rdhs3.B.NFI;
	extr.u	d5,d0,#3,#1
.L360:
	insert	d1,d15,d1,#3,#1
	st.b	[a5]5,d1
.L361:
	ld.bu	d15,[a5]6
.L362:
	insert	d1,d1,d5,#4,#1
.L363:
	insert	d3,d15,d3,#7,#1
	st.b	[a5]6,d3
.L364:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   163          header->syncFrame                = rdhs3.B.SYN;
	extr.u	d15,d0,#2,#1
.L365:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   164          header->startupFrame             = rdhs3.B.SFI;
	extr.u	d0,d0,#1,#1
.L366:
	insert	d15,d1,d15,#5,#1
.L367:
	insert	d15,d15,d0,#6,#1
	st.b	[a5]5,d15
.L368:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   165          header->cycleNumber              = rdhs3.B.RCC;
	extr.u	d15,d2,#16,#6
.L369:
	insert	d15,d3,d15,#0,#7
	st.b	[a5]6,d15
.L175:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   166      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   167  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   168      IfxEray_readData(eray, data, (header->payloadLength > maxPayloadLength) ? maxPayloadLength : header->payloadLength);
	mov	d15,d6
	mov.aa	a5,a6
.L224:
	and	d15,#127
.L370:
	min	d15,d15,d4
.L371:
	extr.u	d4,d15,#0,#8
.L225:
	j	IfxEray_readData
.L168:
	
__IfxEray_readFrame_function_end:
	.size	IfxEray_readFrame,__IfxEray_readFrame_function_end-IfxEray_readFrame
.L102:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_resetModule',code,cluster('IfxEray_resetModule')
	.sect	'.text.IfxEray.IfxEray_resetModule'
	.align	2
	
	.global	IfxEray_resetModule

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   169  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   170  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   172  void IfxEray_resetModule(Ifx_ERAY *eray)
; Function IfxEray_resetModule
.L37:
IfxEray_resetModule:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   173  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   174      eray->KRST1.B.RST = 1;      /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a4]2288
.L293:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   175      eray->KRST0.B.RST = 1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   176  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   177      while (eray->KRST0.B.RSTSTAT == 0)
	lea	a15,[a4]2292
.L294:
	or	d15,#1
	st.b	[a4]2288,d15
.L295:
	ld.bu	d15,[a4]2292
.L296:
	or	d15,#1
	st.b	[a4]2292,d15
.L10:
	ld.bu	d15,[a15]
.L297:
	jz.t	d15:1,.L10
.L298:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   178      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   179          /* Wait until reset is executed */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   180      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   181  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   182      eray->KRSTCLR.B.CLR = 1;     /* Clear Kernel reset status bit */
	ld.bu	d15,[a4]2284
.L299:
	or	d15,#1
	st.b	[a4]2284,d15
.L300:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   183  }
	ret
.L142:
	
__IfxEray_resetModule_function_end:
	.size	IfxEray_resetModule,__IfxEray_resetModule_function_end-IfxEray_resetModule
.L77:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_setMessageBufferInterruptDestination',code,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.text.IfxEray.IfxEray_setMessageBufferInterruptDestination'
	.align	2
	
	.global	IfxEray_setMessageBufferInterruptDestination

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   184  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   185  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   186  void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination)
; Function IfxEray_setMessageBufferInterruptDestination
.L39:
IfxEray_setMessageBufferInterruptDestination:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   187  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   188      uint8           ix      = messageBuffer / 32;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   189      uint32          mask    = 1 << (messageBuffer % 32);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   190      Ifx_ERAY_MSIC1 *msicSFR = (Ifx_ERAY_MSIC1 *)((uint32)&eray->MSIC1 + 4 * ix);
	mov	d1,#1
	lea	a15,[a4]952
.L281:
	and	d15,d4,#31
.L282:
	sha	d0,d4,#-5
.L229:
	sha	d1,d1,d15
	fcall	.cocofun_4
.L230:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   191  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   192      if (messageBufferDestination == FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   193      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   194          msicSFR->U &= ~mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   195      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   196      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   197      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   198          msicSFR->U |= mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   199      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   200  }
	ret
.L123:
	
__IfxEray_setMessageBufferInterruptDestination_function_end:
	.size	IfxEray_setMessageBufferInterruptDestination,__IfxEray_setMessageBufferInterruptDestination_function_end-IfxEray_setMessageBufferInterruptDestination
.L67:
	; End of function
	
	.sdecl	'.text.IfxEray..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxEray..cocofun_4'
	.align	2
; Function .cocofun_4
.L41:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	mov.d	d15,a15
.L231:
	sh	d0,#2
.L232:
	add	d15,d0
.L413:
	mov.a	a15,d15
.L235:
	ld.w	d15,[a15]
.L234:
	jne	d5,#0,.L11
.L414:
	mov	d0,#-1
	xor	d1,d0
.L233:
	and	d15,d1
	j	.L12
.L11:
	or	d15,d1
.L12:
	st.w	[a15],d15
.L415:
	fret
.L117:
	; End of function
	.sdecl	'.text.IfxEray.IfxEray_setNewDataInterruptDestination',code,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.text.IfxEray.IfxEray_setNewDataInterruptDestination'
	.align	2
	
	.global	IfxEray_setNewDataInterruptDestination

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   203  void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination)
; Function IfxEray_setNewDataInterruptDestination
.L43:
IfxEray_setNewDataInterruptDestination:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   205      uint8           ix      = ndatDestination / 32;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   206      uint32          mask    = 1 << (ndatDestination % 32);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   207      Ifx_ERAY_NDIC1 *ndicSFR = (Ifx_ERAY_NDIC1 *)((uint32)&eray->NDIC1 + 4 * ix);
	mov	d1,#1
	lea	a15,[a4]936
.L287:
	and	d15,d5,#31
.L288:
	sha	d1,d1,d15
.L236:
	sha	d0,d5,#-5
	fcall	.cocofun_4
.L237:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   208  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   209      if (ndatDestination == FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   210      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   211          ndicSFR->U &= ~mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   212      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   213      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   214      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   215          ndicSFR->U |= mask;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   216      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   217  }
	ret
.L134:
	
__IfxEray_setNewDataInterruptDestination_function_end:
	.size	IfxEray_setNewDataInterruptDestination,__IfxEray_setNewDataInterruptDestination_function_end-IfxEray_setNewDataInterruptDestination
.L72:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_setPocReady',code,cluster('IfxEray_setPocReady')
	.sect	'.text.IfxEray.IfxEray_setPocReady'
	.align	2
	
	.global	IfxEray_setPocReady

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   218  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   219  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   220  void IfxEray_setPocReady(Ifx_ERAY *eray)
; Function IfxEray_setPocReady
IfxEray_setPocReady:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   221  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   222      // wait CC is busy
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   223      while (eray->SUCC1.B.PBSY == 1)
.L15:
	ld.bu	d15,[a4]128
.L314:
	jnz.t	d15:7,.L15
.L315:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   224      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   226      // Ready unlock sequence
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   227      eray->LCK.B.CLK   = 0xCE;
	mov	d15,#206
	st.b	[a4]28,d15
.L316:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   228      eray->LCK.B.CLK   = 0x31;
	mov	d15,#49
	st.b	[a4]28,d15
.L317:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   229      eray->SUCC1.B.CMD = IfxEray_PocCommand_ready;
	ld.bu	d15,[a4]128
.L318:
	insert	d15,d15,#2,#0,#4
	st.b	[a4]128,d15
.L319:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   230  }
	ret
.L148:
	
__IfxEray_setPocReady_function_end:
	.size	IfxEray_setPocReady,__IfxEray_setPocReady_function_end-IfxEray_setPocReady
.L87:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_setSlot',code,cluster('IfxEray_setSlot')
	.sect	'.text.IfxEray.IfxEray_setSlot'
	.align	2
	
	.global	IfxEray_setSlot

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   231  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   232  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   233  void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig)
; Function IfxEray_setSlot
.L46:
IfxEray_setSlot:	.type	func
	mov.aa	a12,a4
.L239:
	mov.aa	a15,a5
.L240:
	mov.aa	a13,a6
.L241:
	mov.aa	a14,a7
.L242:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    24   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    25   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    26   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    27   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    28   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    29   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    30   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    31   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    32   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    33   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    34   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    35   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    36   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    37   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    38   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    39   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    40   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    42  #ifndef IFXERAY_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    43  #define IFXERAY_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    45  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    46  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    47  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    48  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    49  #include "_Impl/IfxEray_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    50  #include "_PinMap/IfxEray_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    51  #include "IfxEray_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    52  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    55  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    56  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    57  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    58  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    59   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    60  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    61   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    62  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    63  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    64      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    65      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    66      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    67  } IfxEray_Baudrate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    68  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    69  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    70   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    71  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    72  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    73      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    74      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    75  } IfxEray_BufferDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    77  /** \brief Channel Id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    78   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    79  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    80  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    81      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    82      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    83  } IfxEray_Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    84  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    85  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    86   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    87  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    88  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    89      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    90      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    91      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    92      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    93      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    94      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    95      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    96      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    97      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    98      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    99      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   100      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   101      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   102      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   103      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   104      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   105      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   106      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   107  } IfxEray_ClearErrorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   109  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   111  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   112  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   113      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   114      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   115      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   116      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   117      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   118      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   119      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   120      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   121      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   122      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   123      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   124      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   125      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   126      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   127      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   128      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   129      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   130      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   131      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   132      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   133  } IfxEray_ClearStatusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   135  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   136   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   137  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   139      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   140      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   141      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   142      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   143      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   144      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   145      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   146      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   147  } IfxEray_ClockDivider;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   149  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   150   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   151  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   153      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   154      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   155      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   156  } IfxEray_ExternalOffset;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   158  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   159   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   160  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   161  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   162      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   163      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   164      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   165      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   166      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   167      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   168      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   169      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   170  } IfxEray_ExternalOffsetCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   172  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   173   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   174  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   175  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   176      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   177      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   178      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   179  } IfxEray_ExternalRate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   181  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   182   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   183  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   184  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   185      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   186      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   187      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   188      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   189      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   190      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   191      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   192      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   193  } IfxEray_ExternalRateCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   195  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   196   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   197  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   199      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   200      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   201      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   202  } IfxEray_IdleDynamicSlots;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   204  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   205   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   206  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   207  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   208      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   209      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   210      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   211      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   212      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   213      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   214      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   215      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   216      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   217      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   218      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   219      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   220      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   221      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   222      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   223  } IfxEray_ListenTimeOutNoise;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   225  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   226   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   227  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   229      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   230      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   231      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   232      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   233      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   234      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   235      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   236      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   237      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   238      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   239      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   240      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   241      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   242      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   243  } IfxEray_MaxSynchFrames;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   245  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   246   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   247  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   248  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   249      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   250      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   251      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   252      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   253      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   254      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   255      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   256      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   257      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   258      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   259      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   260      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   261      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   262  } IfxEray_PocCommand;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   264  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   265   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   266  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   267  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   268      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   269      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   270      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   271      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   272      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   273      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   274      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   275      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   276      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   277      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   278      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   279      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   280      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   281      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   282      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   283      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   284      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   285      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   286      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   287      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   288      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   289      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   290      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   291  } IfxEray_PocState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   293  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   294   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   295  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   296  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   297      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   298      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   299      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   300      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   301  } IfxEray_ReceiveChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   303  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   304   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   305   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   306  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   307  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   308      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   309      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   310  } IfxEray_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   312  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   314  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   315  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   316      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   317      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   318      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   319  } IfxEray_StrobePosition;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   321  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   322   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   323  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   325      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   326      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   327  } IfxEray_TransmissionMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   329  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   333      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   334      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   335  } IfxEray_TransmissionSlotMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   337  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   338   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   339  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   340  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   341      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   342      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   343  } IfxEray_WakeupChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   345  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   347  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   348  /*-----------------------------Data Structures--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   349  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   351  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   352   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   353  /** \brief Header section in  a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   355  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   357      uint16                   frameId;                       /**< \brief slot ID of the selected Message Buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   358      uint8                    cycleCode;                     /**< \brief the cycle set used for cycle counter filtering. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   359      boolean                  channelAFiltered;              /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   360      boolean                  channelBFiltered;              /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   361      IfxEray_BufferDirection  bufferDirection;               /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   362      boolean                  transmitPayloadIndicatior;     /**< \brief weather payload indicator is set or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionMode transmissionMode;              /**< \brief transmission mode of Header. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   364      boolean                  bufferServiceEnabled;          /**< \brief wether buffer service request is enabled or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   365      uint8                    payloadLength;                 /**< \brief length of data section. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   366      uint16                   dataPointer;                   /**< \brief pointer to the data section of message buffer in RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   367      boolean                  startupFrameIndicator;         /**< \brief whether startup frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   368      boolean                  syncFrameIndicator;            /**< \brief whether sync frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   369  } IfxEray_Header;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   371  /** \brief Received header in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   372   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   373  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   374  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   375      uint16 frameId : 11;                   /**< \brief received frame id. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   376      uint8  payloadLength : 7;              /**< \brief received payload length. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   377      uint16 headerCrc : 11;                 /**< \brief received header crc. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   378      uint8  reservedBit : 1;                /**< \brief state of the received reserved bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   379      uint8  nullFrameIndicator : 1;         /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   380      uint8  syncFrame : 1;                  /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   381      uint8  startupFrame : 1;               /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   382      uint8  cycleNumber : 7;                /**< \brief cycle number in which frame is received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   383      uint8  payloadPreambleIndicator : 1;   /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   384  } IfxEray_ReceivedHeader;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   386  /** \brief Transmit control structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   387   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   388  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   389  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   390      boolean headerTransfered;      /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   391      boolean dataTransfered;        /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   392      boolean transferRequested;     /**< \brief transmit buffer released for transmission or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   393      uint8   bufferIndex;           /**< \brief buffer index in the Message RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   394  } IfxEray_SlotConfig;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   396  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   398  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   399   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   400  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   401  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   402  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   403  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   404  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   405  /** \brief Clears the error flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   406   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   407   * \param errorFlag error flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   408   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   409   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   410  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   411  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   412  /** \brief Clears the status flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   413   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   414   * \param statusFlag status flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   415   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   416   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   417  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   418  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   419  /** \brief Gets the error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   420   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   421   * \return error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   422   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   423  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   424  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   425  /** \brief Gets the IBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   426   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   427   * \return address of IBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   428   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   429  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   431  /** \brief Gets the INT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   432   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   433   * \return address of INT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   434   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   435  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   437  /** \brief Gets the INT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   438   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   439   * \return address of INT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   440   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   441  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   443  /** \brief Gets the message buffers interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   444   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   445   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   446   * \return message buffer interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   447   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   448  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   450  /** \brief Gets the MBSC0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   451   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   452   * \return address of MBSC0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   454  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   456  /** \brief Gets the MBSC1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   457   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   458   * \return address of MBSC1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   459   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   460  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   462  /** \brief Gets the NDAT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   463   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   464   * \return address of NDAT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   465   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   466  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   467  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   468  /** \brief Gets the NDAT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   469   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   470   * \return address of NDAT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   472  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   474  /** \brief Gets the new data interrupt buffers status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   475   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   476   * \param ndat message buffer number configured to which ndat occurs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   477   * \return ndat interrupt buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   479  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   481  /** \brief Gets the OBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   482   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   483   * \return address of OBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   484   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   485  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   486  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   487  /** \brief Gets the status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   488   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   489   * \return status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   490   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   491  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   492  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   493  /** \brief Gets the TINT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   494   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   495   * \return address of TINT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   496   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   497  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   499  /** \brief Gets the TINT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   500   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   501   * \return address of TINT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   503  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   505  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   506  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   507  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   508  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   509  /** \brief Clears all the error flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   511   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   512   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   513  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   514  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   515  /** \brief Enables all the Interrupt lines.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   517   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   518   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   519  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   520  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   521  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   523   * \param messageBuffer message buffer interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   524   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   525   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   526   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   527  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   528  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   529  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   530   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   531   * \param ndat NDAT interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   532   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   533   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   534   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   535  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   536  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   537  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   538  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   539  /** \addtogroup IfxLld_Eray_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   540   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   542  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   543  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   544  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   546  /** \brief Initialises a RX pin.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   547   * \param rx the RX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   548   * \param rxMode the pin input mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   549   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   550   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   551  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   553  /** \brief Initializes a TX Enable output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   554   * \param txEn the TX Enable Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   555   * \param txEnMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   556   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   559  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   561  /** \brief Initializes a TX output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   562   * \param tx the TX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   563   * \param txMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   564   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   565   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   566   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   567  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   568  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   569  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   570  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   571  /** \addtogroup IfxLld_Eray_Std_Module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   572   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   574  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   575  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   576  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   577  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   578  /** \brief Enables the ERAY module.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   579   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   580   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   581   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   582  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   583  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   584  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   585   * \param eray pointer to ERAY registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   586   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   587   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   588   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   589  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   590  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   591  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   592  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   593  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   595  /** \brief Resets the ERAY kernel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   596   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   597   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   598   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   599  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   601  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   603  /** \addtogroup IfxLld_Eray_Std_Status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   604   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   605  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   606  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   607  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   608  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   610  /** \brief Gets the FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   611   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   612   * \return FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   613   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   614  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   616  /** \brief Gets the Input Buffer Host Busy status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   617   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   618   * \return TRUE if Host is Busy otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   619   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   620  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   622  /** \brief Gets the Input Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   623   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   624   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   626  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   628  /** \brief Gets the output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   629   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   630   * \return output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   631   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   632  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   633  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   634  /** \brief Gets the Output Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   635   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   636   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   637   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   638  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   639  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   640  /** \brief Gets the current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   641   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   642   * \return current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   643   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   644  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   645  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   646  /** \brief Gets the received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   647   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   648   * \return received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   650  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   652  /** \brief Waits until the controller enters required POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   653   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   654   * \param pocState POC state upto which controller waits.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   657  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   659  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   660  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   661  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   662  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   663  /** \brief Changes the Commmunication Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   664   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   665   * \param pocCommand POC command which triggers the Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   666   * \return TRUE if command accepted otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   667   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   668  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   669  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   670  /** \brief Sets the POC state to Ready state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   672   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   673   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   674  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   675  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   676  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   678  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   679   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   680  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   681  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   683  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   685  /** \brief request to receive header section from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   686   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   687   * \param headerReceived whether header is received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   688   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   689   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   690  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   692  /** \brief sets the bit to send header in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   693   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   694   * \param headerTransfered whether header transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   695   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   696   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   697  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   698  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   699  /** \brief Sets number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   700   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   701   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   702   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   703   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   704  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   705  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   706  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   708   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   709   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   710  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   711  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   712  /** \brief Sets baudrate on Flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   713   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   714   * \param baudrate baudrate on flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   715   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   716   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   717  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   718  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   719  /** \brief Sets secured buffers in message RAM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   720   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   721   * \param secureValue secure value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   722   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   723   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   724  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   726  /** \brief Sets channel A initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   727   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   728   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   729   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   730   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   731   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   732  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   734  /** \brief Sets channel B initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   735   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   736   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   737   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   738   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   739   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   740  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   741  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   742  /** \brief Sets receive delays on channels.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   743   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   744   * \param channelAReceptionDelay reception delay on channel A.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   745   * \param channelBReceptionDelay reception delay on channel B.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   746   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   747   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   748  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   749  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   750  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   751   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   752   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   753   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   754   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   755   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   756  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   757  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   758  /** \brief lead to halt state in clock synch error.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   759   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   760   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   761   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   762   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   763  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   764  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   765  /** \brief Sets cluster drift values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   766   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   767   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   768   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   769   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   770   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   772  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   773  /** \brief Sets cluster startup deviation.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   775   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   776   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   777   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   780  /** \brief Sets CAS symbol window duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   782   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   783   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   785  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   787  /** \brief sets duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   788   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   789   * \param macroticks duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   790   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   791   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   792  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   793  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   794  /** \brief sets duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   795   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   796   * \param microticks duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   797   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   798   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   799  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   801  /** \brief Sets decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   802   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   803   * \param decodingCorrection decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   804   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   805   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   806  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   807  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   808  /** \brief Sets dynamic slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   809   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   810   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   811   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   812   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   813   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   815  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   817  /** \brief Sets external correction controls.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   818   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   819   * \param externalOffset External offset correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   820   * \param externalRate External rate correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   821   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   823  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   825  /** \brief Sets external correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   826   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   827   * \param externalOffsetCorrection external clock offset correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   828   * \param externalRateCorrection external clock rate correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   829   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   830   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   831  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   833  /** \brief Sets FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   834   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   835   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   836   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   837   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   838  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   840  /** \brief Sets FIFO filter configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   841   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   842   * \param rejectedFrameId rejected frameId by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   843   * \param filteredCycleNumber filtered cycle number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   844   * \param fifoNullFramesRejected null frames rejection selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   845   * \param frameIdFilter filtered frameid by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   846   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   847   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   848  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   849  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   850  /** \brief Sets FIFO configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   851   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   852   * \param receiveChannel FIFO receive channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   853   * \param staticFifoDisabled static FIFO selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   854   * \param fifoDepth FIFO depth.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   855   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   856   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   857  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   858  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   859  /** \brief Sets first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   860   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   861   * \param firstDynamicBuffer first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   862   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   863   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   864  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   865  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   866  /** \brief Sets startup or wakeup listen timeouts.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   867   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   868   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   869   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   870   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   871   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   872  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   873  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   874  /** \brief Sets the maximum cold start attempts for active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   875   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   876   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   877   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   878   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   879  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   880  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   881  /** \brief Sets max limit correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   882   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   883   * \param maxOffsetCorrection maximum offset correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   884   * \param maxRateCorrection maximum rate correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   885   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   886   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   887  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   888  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   889  /** \brief Sets maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   890   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   891   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   892   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   893   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   894  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   895  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   896  /** \brief Sets number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   897   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   898   * \param numberOfMessageBuffers number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   899   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   900   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   901  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   902  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   903  /** \brief Sets Message Handler configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   904   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   905   * \param staticFramepayload payload length of static frames in double bytes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   906   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   907   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   908   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   909  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   910  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   911  /** \brief Sets network start Idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   912   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   913   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   914   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   915   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   916  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   917  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   918  /** \brief Sets network management vector length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   919   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   920   * \param networkVectorLength length of network management vector.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   921   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   922   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   923  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   924  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   925  /** \brief Sets channels connected to node.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   926   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   927   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   928   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   929   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   930   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   931  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   932  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   933  /** \brief Sets offset correction starting point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   934   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   935   * \param correctionOffset offset correction start point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   936   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   937   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   938  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   939  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   940  /** \brief requests to receive the frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   941   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   942   * \param receiveRequested whether frame to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   945  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   947  /** \brief Sets receive wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   948   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   949   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   950   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   951   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   952   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   953   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   954  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint8 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   955  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   956  /** \brief sets buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   957   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   958   * \param bufferIndex buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   959   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   960   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   961  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   962  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   963  /** \brief Sets slots action points.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   964   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   965   * \param staticActionPoint static slots and symbol window action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   966   * \param dynamicActionPoint dynamic slots action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   967   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   968   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   969  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   971  /** \brief Sets static slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   972   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   973   * \param staticSlotLength duration of static slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   974   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   975   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   976   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   978  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   979  /** \brief Sets sample point for strobing.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   981   * \param strobePosition strobing sample count.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   982   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   983   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   984  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   985  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   986  /** \brief Sets channels which transmits symbols.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   987   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   988   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   989   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   994  /** \brief Sets the transmit slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   996   * \param transmissionSlotMode transmission slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   997   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   998   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1001  /** \brief Sets transmission start time duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1003   * \param transmissionStartTime transmission start time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1004   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1005   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1006  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint16 transmissionStartTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1007  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1008  /** \brief Sets transfer request to send frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1009   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1010   * \param transferRequested whether transfer requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1011   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1012   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1013  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1014  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1015  /** \brief Sets transmit wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1016   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1017   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1018   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1019   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1020   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1021   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1022  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1023  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1024  /** \brief Configures transmitted frames for startup and synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1025   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1026   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1027   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1028   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1029   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1030  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1032  /** \brief Sets the transmit buffer number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1033   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1034   * \param bufferIndex buffer number in which frame is sent.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1035   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1036   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1037  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1039  /** \brief Swaps the shadow and Host output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1040   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1041   * \param swapRequested whether swap is requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1042   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1043   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1044  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1045  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1046  /** \brief Sets the cluster wakeup channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1047   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1048   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1049   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1050   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1051  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1052  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1053  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1054  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1055  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1056   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1057  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1058  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1059  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1060  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1062  /** \brief requests to receive data from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1064   * \param dataReceived whether data to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1065   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1066   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1069  /** \brief sets the bit to send data in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1071   * \param dataTransfered whether data transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1072   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1073   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1074  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1075  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1076  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1077  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1078  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1080  /** \brief Calculate and returns the CRC for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1081   * \param payloadLength payload length configured for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1082   * \param frameId slot id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1083   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1084   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1085   * \return calculated CRC value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1086   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1087  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1088  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1089  /** \brief Reads the received data from output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1090   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1091   * \param data pointer to received data buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1092   * \param payloadLength payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1095  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1097  /** \brief Reads header and data from output buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1098   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1099   * \param header header received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1100   * \param data data received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1101   * \param maxPayloadLength maximum payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1102   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1103   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1104  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1106  /** \brief Writes header and data to Input buffers and set the slots.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1107   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1108   * \param header Header section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1109   * \param data data section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1110   * \param slotConfig pointer slot allocation configuration structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1111   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1112   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1113  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1115  /** \brief Writes data section of a frame to input data registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1116   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1117   * \param data data segment in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1118   * \param payloadLength payload length configured for slot buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1119   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1120   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1121  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1123  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1125  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1126  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1127  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1129  /** \brief Gets the FIFO index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1130   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1131   * \return FIFO buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1132   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1133  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1135  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1136  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1137  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1139  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1140  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1141      eray->EIR.U = errorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1142  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1145  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1146  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1147      eray->SIR.U = statusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1148  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1151  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1153      // Run Mode Clock divider to 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1154      eray->CLC.U = 0x00000100;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1155  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1156      // ensure that write access finished before leaving this function
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1157      if (eray->CLC.U)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1158      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1159  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1162  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1164      Ifx_ERAY_EIR interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1165      interruptFlags.U = eray->EIR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1166      return interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1167  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1168  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1169  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1170  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1171  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1172      return eray->MRC.B.FFB;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1173  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1176  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1177  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1178      Ifx_ERAY_FSR fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1179      fifoStatus.U = eray->FSR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1180      return fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1181  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1184  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1186      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	lea	a2,[a12]1301

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   234  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   235      // wait if Host is busy with another transfer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   236      while (IfxEray_getInputBufferBusyHostStatus(eray) == TRUE)
.L16:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    24   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    25   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    26   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    27   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    28   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    29   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    30   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    31   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    32   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    33   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    34   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    35   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    36   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    37   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    38   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    39   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    40   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    42  #ifndef IFXERAY_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    43  #define IFXERAY_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    45  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    46  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    47  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    48  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    49  #include "_Impl/IfxEray_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    50  #include "_PinMap/IfxEray_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    51  #include "IfxEray_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    52  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    55  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    56  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    57  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    58  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    59   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    60  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    61   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    62  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    63  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    64      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    65      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    66      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    67  } IfxEray_Baudrate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    68  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    69  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    70   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    71  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    72  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    73      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    74      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    75  } IfxEray_BufferDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    77  /** \brief Channel Id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    78   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    79  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    80  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    81      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    82      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    83  } IfxEray_Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    84  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    85  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    86   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    87  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    88  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    89      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    90      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    91      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    92      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    93      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    94      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    95      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    96      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    97      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    98      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    99      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   100      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   101      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   102      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   103      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   104      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   105      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   106      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   107  } IfxEray_ClearErrorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   109  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   111  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   112  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   113      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   114      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   115      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   116      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   117      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   118      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   119      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   120      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   121      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   122      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   123      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   124      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   125      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   126      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   127      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   128      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   129      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   130      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   131      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   132      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   133  } IfxEray_ClearStatusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   135  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   136   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   137  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   139      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   140      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   141      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   142      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   143      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   144      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   145      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   146      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   147  } IfxEray_ClockDivider;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   149  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   150   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   151  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   153      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   154      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   155      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   156  } IfxEray_ExternalOffset;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   158  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   159   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   160  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   161  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   162      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   163      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   164      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   165      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   166      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   167      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   168      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   169      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   170  } IfxEray_ExternalOffsetCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   172  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   173   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   174  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   175  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   176      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   177      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   178      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   179  } IfxEray_ExternalRate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   181  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   182   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   183  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   184  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   185      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   186      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   187      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   188      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   189      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   190      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   191      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   192      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   193  } IfxEray_ExternalRateCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   195  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   196   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   197  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   199      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   200      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   201      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   202  } IfxEray_IdleDynamicSlots;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   204  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   205   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   206  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   207  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   208      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   209      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   210      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   211      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   212      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   213      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   214      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   215      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   216      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   217      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   218      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   219      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   220      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   221      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   222      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   223  } IfxEray_ListenTimeOutNoise;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   225  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   226   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   227  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   229      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   230      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   231      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   232      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   233      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   234      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   235      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   236      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   237      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   238      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   239      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   240      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   241      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   242      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   243  } IfxEray_MaxSynchFrames;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   245  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   246   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   247  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   248  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   249      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   250      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   251      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   252      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   253      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   254      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   255      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   256      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   257      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   258      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   259      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   260      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   261      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   262  } IfxEray_PocCommand;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   264  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   265   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   266  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   267  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   268      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   269      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   270      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   271      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   272      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   273      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   274      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   275      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   276      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   277      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   278      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   279      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   280      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   281      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   282      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   283      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   284      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   285      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   286      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   287      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   288      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   289      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   290      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   291  } IfxEray_PocState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   293  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   294   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   295  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   296  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   297      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   298      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   299      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   300      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   301  } IfxEray_ReceiveChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   303  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   304   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   305   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   306  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   307  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   308      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   309      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   310  } IfxEray_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   312  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   314  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   315  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   316      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   317      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   318      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   319  } IfxEray_StrobePosition;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   321  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   322   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   323  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   325      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   326      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   327  } IfxEray_TransmissionMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   329  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   333      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   334      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   335  } IfxEray_TransmissionSlotMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   337  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   338   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   339  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   340  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   341      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   342      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   343  } IfxEray_WakeupChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   345  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   347  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   348  /*-----------------------------Data Structures--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   349  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   351  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   352   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   353  /** \brief Header section in  a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   355  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   357      uint16                   frameId;                       /**< \brief slot ID of the selected Message Buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   358      uint8                    cycleCode;                     /**< \brief the cycle set used for cycle counter filtering. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   359      boolean                  channelAFiltered;              /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   360      boolean                  channelBFiltered;              /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   361      IfxEray_BufferDirection  bufferDirection;               /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   362      boolean                  transmitPayloadIndicatior;     /**< \brief weather payload indicator is set or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionMode transmissionMode;              /**< \brief transmission mode of Header. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   364      boolean                  bufferServiceEnabled;          /**< \brief wether buffer service request is enabled or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   365      uint8                    payloadLength;                 /**< \brief length of data section. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   366      uint16                   dataPointer;                   /**< \brief pointer to the data section of message buffer in RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   367      boolean                  startupFrameIndicator;         /**< \brief whether startup frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   368      boolean                  syncFrameIndicator;            /**< \brief whether sync frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   369  } IfxEray_Header;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   371  /** \brief Received header in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   372   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   373  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   374  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   375      uint16 frameId : 11;                   /**< \brief received frame id. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   376      uint8  payloadLength : 7;              /**< \brief received payload length. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   377      uint16 headerCrc : 11;                 /**< \brief received header crc. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   378      uint8  reservedBit : 1;                /**< \brief state of the received reserved bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   379      uint8  nullFrameIndicator : 1;         /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   380      uint8  syncFrame : 1;                  /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   381      uint8  startupFrame : 1;               /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   382      uint8  cycleNumber : 7;                /**< \brief cycle number in which frame is received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   383      uint8  payloadPreambleIndicator : 1;   /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   384  } IfxEray_ReceivedHeader;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   386  /** \brief Transmit control structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   387   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   388  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   389  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   390      boolean headerTransfered;      /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   391      boolean dataTransfered;        /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   392      boolean transferRequested;     /**< \brief transmit buffer released for transmission or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   393      uint8   bufferIndex;           /**< \brief buffer index in the Message RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   394  } IfxEray_SlotConfig;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   396  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   398  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   399   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   400  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   401  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   402  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   403  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   404  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   405  /** \brief Clears the error flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   406   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   407   * \param errorFlag error flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   408   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   409   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   410  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   411  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   412  /** \brief Clears the status flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   413   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   414   * \param statusFlag status flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   415   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   416   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   417  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   418  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   419  /** \brief Gets the error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   420   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   421   * \return error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   422   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   423  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   424  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   425  /** \brief Gets the IBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   426   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   427   * \return address of IBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   428   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   429  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   431  /** \brief Gets the INT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   432   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   433   * \return address of INT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   434   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   435  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   437  /** \brief Gets the INT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   438   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   439   * \return address of INT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   440   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   441  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   443  /** \brief Gets the message buffers interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   444   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   445   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   446   * \return message buffer interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   447   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   448  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   450  /** \brief Gets the MBSC0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   451   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   452   * \return address of MBSC0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   454  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   456  /** \brief Gets the MBSC1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   457   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   458   * \return address of MBSC1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   459   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   460  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   462  /** \brief Gets the NDAT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   463   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   464   * \return address of NDAT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   465   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   466  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   467  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   468  /** \brief Gets the NDAT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   469   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   470   * \return address of NDAT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   472  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   474  /** \brief Gets the new data interrupt buffers status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   475   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   476   * \param ndat message buffer number configured to which ndat occurs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   477   * \return ndat interrupt buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   479  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   481  /** \brief Gets the OBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   482   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   483   * \return address of OBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   484   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   485  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   486  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   487  /** \brief Gets the status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   488   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   489   * \return status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   490   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   491  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   492  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   493  /** \brief Gets the TINT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   494   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   495   * \return address of TINT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   496   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   497  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   499  /** \brief Gets the TINT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   500   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   501   * \return address of TINT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   503  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   505  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   506  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   507  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   508  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   509  /** \brief Clears all the error flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   511   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   512   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   513  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   514  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   515  /** \brief Enables all the Interrupt lines.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   517   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   518   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   519  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   520  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   521  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   523   * \param messageBuffer message buffer interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   524   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   525   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   526   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   527  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   528  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   529  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   530   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   531   * \param ndat NDAT interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   532   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   533   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   534   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   535  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   536  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   537  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   538  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   539  /** \addtogroup IfxLld_Eray_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   540   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   542  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   543  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   544  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   546  /** \brief Initialises a RX pin.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   547   * \param rx the RX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   548   * \param rxMode the pin input mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   549   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   550   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   551  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   553  /** \brief Initializes a TX Enable output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   554   * \param txEn the TX Enable Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   555   * \param txEnMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   556   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   559  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   561  /** \brief Initializes a TX output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   562   * \param tx the TX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   563   * \param txMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   564   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   565   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   566   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   567  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   568  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   569  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   570  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   571  /** \addtogroup IfxLld_Eray_Std_Module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   572   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   574  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   575  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   576  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   577  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   578  /** \brief Enables the ERAY module.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   579   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   580   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   581   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   582  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   583  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   584  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   585   * \param eray pointer to ERAY registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   586   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   587   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   588   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   589  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   590  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   591  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   592  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   593  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   595  /** \brief Resets the ERAY kernel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   596   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   597   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   598   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   599  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   601  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   603  /** \addtogroup IfxLld_Eray_Std_Status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   604   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   605  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   606  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   607  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   608  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   610  /** \brief Gets the FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   611   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   612   * \return FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   613   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   614  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   616  /** \brief Gets the Input Buffer Host Busy status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   617   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   618   * \return TRUE if Host is Busy otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   619   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   620  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   622  /** \brief Gets the Input Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   623   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   624   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   626  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   628  /** \brief Gets the output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   629   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   630   * \return output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   631   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   632  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   633  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   634  /** \brief Gets the Output Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   635   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   636   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   637   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   638  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   639  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   640  /** \brief Gets the current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   641   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   642   * \return current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   643   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   644  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   645  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   646  /** \brief Gets the received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   647   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   648   * \return received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   650  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   652  /** \brief Waits until the controller enters required POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   653   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   654   * \param pocState POC state upto which controller waits.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   657  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   659  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   660  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   661  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   662  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   663  /** \brief Changes the Commmunication Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   664   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   665   * \param pocCommand POC command which triggers the Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   666   * \return TRUE if command accepted otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   667   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   668  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   669  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   670  /** \brief Sets the POC state to Ready state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   672   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   673   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   674  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   675  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   676  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   678  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   679   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   680  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   681  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   683  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   685  /** \brief request to receive header section from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   686   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   687   * \param headerReceived whether header is received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   688   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   689   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   690  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   692  /** \brief sets the bit to send header in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   693   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   694   * \param headerTransfered whether header transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   695   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   696   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   697  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   698  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   699  /** \brief Sets number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   700   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   701   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   702   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   703   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   704  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   705  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   706  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   708   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   709   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   710  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   711  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   712  /** \brief Sets baudrate on Flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   713   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   714   * \param baudrate baudrate on flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   715   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   716   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   717  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   718  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   719  /** \brief Sets secured buffers in message RAM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   720   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   721   * \param secureValue secure value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   722   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   723   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   724  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   726  /** \brief Sets channel A initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   727   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   728   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   729   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   730   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   731   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   732  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   734  /** \brief Sets channel B initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   735   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   736   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   737   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   738   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   739   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   740  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   741  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   742  /** \brief Sets receive delays on channels.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   743   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   744   * \param channelAReceptionDelay reception delay on channel A.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   745   * \param channelBReceptionDelay reception delay on channel B.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   746   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   747   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   748  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   749  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   750  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   751   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   752   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   753   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   754   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   755   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   756  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   757  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   758  /** \brief lead to halt state in clock synch error.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   759   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   760   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   761   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   762   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   763  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   764  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   765  /** \brief Sets cluster drift values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   766   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   767   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   768   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   769   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   770   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   772  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   773  /** \brief Sets cluster startup deviation.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   775   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   776   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   777   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   780  /** \brief Sets CAS symbol window duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   782   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   783   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   785  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   787  /** \brief sets duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   788   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   789   * \param macroticks duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   790   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   791   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   792  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   793  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   794  /** \brief sets duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   795   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   796   * \param microticks duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   797   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   798   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   799  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   801  /** \brief Sets decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   802   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   803   * \param decodingCorrection decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   804   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   805   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   806  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   807  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   808  /** \brief Sets dynamic slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   809   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   810   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   811   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   812   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   813   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   815  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   817  /** \brief Sets external correction controls.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   818   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   819   * \param externalOffset External offset correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   820   * \param externalRate External rate correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   821   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   823  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   825  /** \brief Sets external correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   826   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   827   * \param externalOffsetCorrection external clock offset correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   828   * \param externalRateCorrection external clock rate correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   829   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   830   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   831  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   833  /** \brief Sets FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   834   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   835   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   836   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   837   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   838  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   840  /** \brief Sets FIFO filter configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   841   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   842   * \param rejectedFrameId rejected frameId by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   843   * \param filteredCycleNumber filtered cycle number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   844   * \param fifoNullFramesRejected null frames rejection selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   845   * \param frameIdFilter filtered frameid by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   846   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   847   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   848  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   849  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   850  /** \brief Sets FIFO configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   851   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   852   * \param receiveChannel FIFO receive channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   853   * \param staticFifoDisabled static FIFO selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   854   * \param fifoDepth FIFO depth.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   855   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   856   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   857  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   858  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   859  /** \brief Sets first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   860   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   861   * \param firstDynamicBuffer first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   862   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   863   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   864  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   865  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   866  /** \brief Sets startup or wakeup listen timeouts.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   867   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   868   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   869   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   870   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   871   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   872  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   873  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   874  /** \brief Sets the maximum cold start attempts for active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   875   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   876   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   877   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   878   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   879  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   880  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   881  /** \brief Sets max limit correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   882   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   883   * \param maxOffsetCorrection maximum offset correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   884   * \param maxRateCorrection maximum rate correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   885   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   886   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   887  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   888  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   889  /** \brief Sets maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   890   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   891   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   892   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   893   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   894  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   895  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   896  /** \brief Sets number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   897   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   898   * \param numberOfMessageBuffers number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   899   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   900   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   901  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   902  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   903  /** \brief Sets Message Handler configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   904   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   905   * \param staticFramepayload payload length of static frames in double bytes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   906   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   907   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   908   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   909  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   910  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   911  /** \brief Sets network start Idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   912   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   913   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   914   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   915   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   916  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   917  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   918  /** \brief Sets network management vector length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   919   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   920   * \param networkVectorLength length of network management vector.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   921   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   922   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   923  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   924  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   925  /** \brief Sets channels connected to node.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   926   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   927   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   928   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   929   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   930   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   931  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   932  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   933  /** \brief Sets offset correction starting point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   934   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   935   * \param correctionOffset offset correction start point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   936   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   937   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   938  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   939  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   940  /** \brief requests to receive the frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   941   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   942   * \param receiveRequested whether frame to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   945  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   947  /** \brief Sets receive wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   948   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   949   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   950   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   951   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   952   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   953   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   954  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint8 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   955  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   956  /** \brief sets buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   957   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   958   * \param bufferIndex buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   959   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   960   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   961  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   962  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   963  /** \brief Sets slots action points.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   964   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   965   * \param staticActionPoint static slots and symbol window action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   966   * \param dynamicActionPoint dynamic slots action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   967   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   968   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   969  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   971  /** \brief Sets static slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   972   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   973   * \param staticSlotLength duration of static slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   974   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   975   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   976   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   978  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   979  /** \brief Sets sample point for strobing.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   981   * \param strobePosition strobing sample count.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   982   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   983   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   984  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   985  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   986  /** \brief Sets channels which transmits symbols.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   987   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   988   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   989   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   994  /** \brief Sets the transmit slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   996   * \param transmissionSlotMode transmission slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   997   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   998   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1001  /** \brief Sets transmission start time duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1003   * \param transmissionStartTime transmission start time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1004   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1005   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1006  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint16 transmissionStartTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1007  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1008  /** \brief Sets transfer request to send frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1009   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1010   * \param transferRequested whether transfer requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1011   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1012   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1013  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1014  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1015  /** \brief Sets transmit wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1016   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1017   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1018   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1019   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1020   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1021   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1022  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1023  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1024  /** \brief Configures transmitted frames for startup and synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1025   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1026   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1027   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1028   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1029   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1030  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1032  /** \brief Sets the transmit buffer number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1033   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1034   * \param bufferIndex buffer number in which frame is sent.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1035   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1036   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1037  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1039  /** \brief Swaps the shadow and Host output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1040   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1041   * \param swapRequested whether swap is requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1042   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1043   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1044  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1045  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1046  /** \brief Sets the cluster wakeup channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1047   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1048   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1049   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1050   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1051  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1052  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1053  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1054  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1055  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1056   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1057  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1058  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1059  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1060  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1062  /** \brief requests to receive data from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1064   * \param dataReceived whether data to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1065   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1066   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1069  /** \brief sets the bit to send data in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1071   * \param dataTransfered whether data transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1072   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1073   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1074  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1075  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1076  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1077  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1078  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1080  /** \brief Calculate and returns the CRC for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1081   * \param payloadLength payload length configured for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1082   * \param frameId slot id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1083   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1084   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1085   * \return calculated CRC value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1086   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1087  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1088  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1089  /** \brief Reads the received data from output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1090   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1091   * \param data pointer to received data buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1092   * \param payloadLength payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1095  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1097  /** \brief Reads header and data from output buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1098   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1099   * \param header header received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1100   * \param data data received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1101   * \param maxPayloadLength maximum payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1102   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1103   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1104  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1106  /** \brief Writes header and data to Input buffers and set the slots.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1107   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1108   * \param header Header section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1109   * \param data data section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1110   * \param slotConfig pointer slot allocation configuration structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1111   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1112   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1113  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1115  /** \brief Writes data section of a frame to input data registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1116   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1117   * \param data data segment in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1118   * \param payloadLength payload length configured for slot buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1119   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1120   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1121  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1123  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1125  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1126  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1127  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1129  /** \brief Gets the FIFO index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1130   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1131   * \return FIFO buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1132   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1133  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1135  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1136  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1137  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1139  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1140  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1141      eray->EIR.U = errorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1142  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1145  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1146  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1147      eray->SIR.U = statusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1148  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1151  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1153      // Run Mode Clock divider to 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1154      eray->CLC.U = 0x00000100;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1155  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1156      // ensure that write access finished before leaving this function
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1157      if (eray->CLC.U)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1158      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1159  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1162  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1164      Ifx_ERAY_EIR interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1165      interruptFlags.U = eray->EIR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1166      return interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1167  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1168  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1169  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1170  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1171  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1172      return eray->MRC.B.FFB;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1173  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1176  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1177  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1178      Ifx_ERAY_FSR fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1179      fifoStatus.U = eray->FSR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1180      return fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1181  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1184  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1186      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	ld.bu	d15,[a2]
.L192:
	jnz.t	d15:7,.L16
.L376:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   237      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   239      if (header != NULL_PTR)
	jz.a	a15,.L17
.L196:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   240      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   241          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   242              Ifx_ERAY_WRHS1 wrhs1;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   243              wrhs1.U       = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   244              wrhs1.B.FID   = header->frameId;
	mov	d0,#0
	ld.hu	d15,[a15]0
.L243:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   245              wrhs1.B.CYC   = header->cycleCode;
	insert	d0,d0,d15,#0,#11
	ld.bu	d15,[a15]2
.L377:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   246              wrhs1.B.CHA   = header->channelAFiltered;
	insert	d0,d0,d15,#16,#7
	ld.bu	d15,[a15]3
.L378:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   247              wrhs1.B.CHB   = header->channelBFiltered;
	insert	d0,d0,d15,#24,#1
	ld.bu	d15,[a15]4
.L379:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   248              wrhs1.B.CFG   = header->bufferDirection;
	insert	d0,d0,d15,#25,#1
	ld.bu	d15,[a15]5
.L380:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   249              wrhs1.B.PPIT  = header->transmitPayloadIndicatior;
	insert	d0,d0,d15,#26,#1
	ld.bu	d15,[a15]6
.L381:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   250              wrhs1.B.TXM   = header->transmissionMode;
	insert	d0,d0,d15,#27,#1
	ld.bu	d15,[a15]7
.L382:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   251              wrhs1.B.MBI   = header->bufferServiceEnabled;
	insert	d0,d0,d15,#28,#1
	ld.bu	d15,[a15]8
.L383:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   252              eray->WRHS1.U = wrhs1.U;
	insert	d0,d0,d15,#29,#1
	st.w	[a12]1280,d0
.L197:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   253          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   254          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   255              Ifx_ERAY_WRHS2 wrhs2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   256              wrhs2.U = 0;
	mov	d8,#0
.L244:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   257  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   258              if (header->bufferDirection == IfxEray_BufferDirection_transmit)
	ld.bu	d15,[a15]5
.L384:
	jne	d15,#1,.L18
.L385:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   259              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   260                  wrhs2.B.CRC = IfxEray_calcHeaderCrc(header->payloadLength, header->frameId, header->startupFrameIndicator, header->syncFrameIndicator);
	ld.bu	d4,[a15]9
.L386:
	ld.hu	d5,[a15]0
.L387:
	ld.bu	d6,[a15]12
.L388:
	ld.bu	d7,[a15]13
	call	IfxEray_calcHeaderCrc
.L238:
	insert	d8,d8,d2,#0,#11
.L18:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   261              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   262  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   263              wrhs2.B.PLC   = header->payloadLength;
	ld.bu	d15,[a15]9
.L389:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   264              eray->WRHS2.U = wrhs2.U;
	insert	d8,d8,d15,#16,#7
	st.w	[a12]1284,d8
.L200:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   265          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   267          eray->WRHS3.U = header->dataPointer;
	ld.hu	d15,[a15]10
.L390:
	st.w	[a12]1288,d15
.L17:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   268      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   269  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   270      IfxEray_writeData(eray, data, header->payloadLength);
	ld.bu	d4,[a15]9
	mov.aa	a4,a12
.L245:
	mov.aa	a5,a13
.L247:
	call	IfxEray_writeData
.L246:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   271  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   272      eray->IBCM.B.LHSH  = slotConfig->headerTransfered;
	ld.bu	d15,[a12]1296
.L391:
	ld.bu	d0,[a14]
.L392:
	insert	d15,d15,d0,#0,#1
	st.b	[a12]1296,d15
.L393:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   273      eray->IBCM.B.LDSH  = slotConfig->dataTransfered;
	ld.bu	d0,[a12]1296
.L394:
	ld.bu	d15,[a14]1
.L395:
	insert	d15,d0,d15,#1,#1
	st.b	[a12]1296,d15
.L396:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   274      eray->IBCM.B.STXRH = slotConfig->transferRequested;
	ld.bu	d0,[a12]1296
.L397:
	ld.bu	d15,[a14]2
.L398:
	insert	d15,d0,d15,#2,#1
	st.b	[a12]1296,d15
.L399:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   275      eray->IBCR.B.IBRH  = slotConfig->bufferIndex;
	ld.bu	d0,[a12]1300
.L400:
	ld.bu	d15,[a14]3
.L401:
	insert	d15,d0,d15,#0,#7
	st.b	[a12]1300,d15

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   276  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   277      // wait if Shadow is busy with another transfer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   278      while (IfxEray_getInputBufferBusyShadowStatus(eray) == TRUE)
.L19:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    24   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    25   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    26   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    27   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    28   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    29   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    30   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    31   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    32   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    33   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    34   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    35   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    36   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    37   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    38   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    39   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    40   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    42  #ifndef IFXERAY_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    43  #define IFXERAY_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    45  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    46  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    47  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    48  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    49  #include "_Impl/IfxEray_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    50  #include "_PinMap/IfxEray_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    51  #include "IfxEray_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    52  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    55  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    56  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    57  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    58  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    59   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    60  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    61   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    62  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    63  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    64      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    65      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    66      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    67  } IfxEray_Baudrate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    68  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    69  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    70   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    71  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    72  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    73      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    74      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    75  } IfxEray_BufferDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    77  /** \brief Channel Id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    78   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    79  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    80  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    81      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    82      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    83  } IfxEray_Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    84  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    85  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    86   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    87  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    88  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    89      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    90      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    91      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    92      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    93      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    94      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    95      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    96      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    97      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    98      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    99      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   100      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   101      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   102      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   103      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   104      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   105      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   106      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   107  } IfxEray_ClearErrorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   109  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   111  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   112  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   113      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   114      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   115      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   116      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   117      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   118      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   119      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   120      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   121      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   122      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   123      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   124      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   125      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   126      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   127      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   128      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   129      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   130      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   131      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   132      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   133  } IfxEray_ClearStatusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   135  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   136   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   137  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   139      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   140      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   141      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   142      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   143      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   144      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   145      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   146      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   147  } IfxEray_ClockDivider;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   149  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   150   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   151  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   153      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   154      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   155      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   156  } IfxEray_ExternalOffset;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   158  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   159   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   160  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   161  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   162      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   163      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   164      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   165      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   166      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   167      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   168      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   169      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   170  } IfxEray_ExternalOffsetCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   172  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   173   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   174  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   175  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   176      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   177      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   178      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   179  } IfxEray_ExternalRate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   181  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   182   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   183  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   184  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   185      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   186      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   187      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   188      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   189      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   190      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   191      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   192      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   193  } IfxEray_ExternalRateCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   195  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   196   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   197  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   199      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   200      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   201      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   202  } IfxEray_IdleDynamicSlots;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   204  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   205   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   206  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   207  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   208      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   209      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   210      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   211      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   212      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   213      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   214      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   215      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   216      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   217      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   218      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   219      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   220      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   221      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   222      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   223  } IfxEray_ListenTimeOutNoise;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   225  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   226   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   227  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   229      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   230      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   231      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   232      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   233      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   234      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   235      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   236      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   237      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   238      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   239      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   240      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   241      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   242      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   243  } IfxEray_MaxSynchFrames;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   245  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   246   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   247  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   248  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   249      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   250      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   251      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   252      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   253      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   254      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   255      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   256      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   257      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   258      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   259      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   260      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   261      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   262  } IfxEray_PocCommand;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   264  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   265   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   266  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   267  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   268      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   269      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   270      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   271      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   272      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   273      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   274      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   275      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   276      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   277      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   278      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   279      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   280      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   281      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   282      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   283      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   284      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   285      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   286      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   287      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   288      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   289      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   290      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   291  } IfxEray_PocState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   293  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   294   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   295  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   296  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   297      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   298      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   299      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   300      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   301  } IfxEray_ReceiveChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   303  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   304   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   305   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   306  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   307  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   308      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   309      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   310  } IfxEray_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   312  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   314  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   315  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   316      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   317      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   318      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   319  } IfxEray_StrobePosition;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   321  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   322   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   323  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   325      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   326      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   327  } IfxEray_TransmissionMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   329  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   333      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   334      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   335  } IfxEray_TransmissionSlotMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   337  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   338   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   339  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   340  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   341      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   342      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   343  } IfxEray_WakeupChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   345  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   347  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   348  /*-----------------------------Data Structures--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   349  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   351  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   352   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   353  /** \brief Header section in  a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   355  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   357      uint16                   frameId;                       /**< \brief slot ID of the selected Message Buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   358      uint8                    cycleCode;                     /**< \brief the cycle set used for cycle counter filtering. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   359      boolean                  channelAFiltered;              /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   360      boolean                  channelBFiltered;              /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   361      IfxEray_BufferDirection  bufferDirection;               /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   362      boolean                  transmitPayloadIndicatior;     /**< \brief weather payload indicator is set or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionMode transmissionMode;              /**< \brief transmission mode of Header. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   364      boolean                  bufferServiceEnabled;          /**< \brief wether buffer service request is enabled or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   365      uint8                    payloadLength;                 /**< \brief length of data section. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   366      uint16                   dataPointer;                   /**< \brief pointer to the data section of message buffer in RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   367      boolean                  startupFrameIndicator;         /**< \brief whether startup frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   368      boolean                  syncFrameIndicator;            /**< \brief whether sync frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   369  } IfxEray_Header;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   371  /** \brief Received header in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   372   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   373  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   374  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   375      uint16 frameId : 11;                   /**< \brief received frame id. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   376      uint8  payloadLength : 7;              /**< \brief received payload length. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   377      uint16 headerCrc : 11;                 /**< \brief received header crc. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   378      uint8  reservedBit : 1;                /**< \brief state of the received reserved bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   379      uint8  nullFrameIndicator : 1;         /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   380      uint8  syncFrame : 1;                  /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   381      uint8  startupFrame : 1;               /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   382      uint8  cycleNumber : 7;                /**< \brief cycle number in which frame is received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   383      uint8  payloadPreambleIndicator : 1;   /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   384  } IfxEray_ReceivedHeader;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   386  /** \brief Transmit control structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   387   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   388  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   389  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   390      boolean headerTransfered;      /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   391      boolean dataTransfered;        /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   392      boolean transferRequested;     /**< \brief transmit buffer released for transmission or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   393      uint8   bufferIndex;           /**< \brief buffer index in the Message RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   394  } IfxEray_SlotConfig;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   396  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   398  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   399   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   400  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   401  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   402  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   403  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   404  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   405  /** \brief Clears the error flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   406   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   407   * \param errorFlag error flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   408   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   409   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   410  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   411  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   412  /** \brief Clears the status flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   413   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   414   * \param statusFlag status flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   415   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   416   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   417  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   418  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   419  /** \brief Gets the error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   420   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   421   * \return error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   422   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   423  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   424  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   425  /** \brief Gets the IBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   426   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   427   * \return address of IBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   428   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   429  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   431  /** \brief Gets the INT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   432   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   433   * \return address of INT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   434   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   435  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   437  /** \brief Gets the INT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   438   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   439   * \return address of INT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   440   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   441  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   443  /** \brief Gets the message buffers interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   444   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   445   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   446   * \return message buffer interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   447   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   448  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   450  /** \brief Gets the MBSC0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   451   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   452   * \return address of MBSC0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   454  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   456  /** \brief Gets the MBSC1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   457   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   458   * \return address of MBSC1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   459   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   460  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   462  /** \brief Gets the NDAT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   463   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   464   * \return address of NDAT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   465   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   466  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   467  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   468  /** \brief Gets the NDAT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   469   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   470   * \return address of NDAT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   472  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   474  /** \brief Gets the new data interrupt buffers status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   475   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   476   * \param ndat message buffer number configured to which ndat occurs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   477   * \return ndat interrupt buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   479  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   481  /** \brief Gets the OBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   482   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   483   * \return address of OBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   484   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   485  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   486  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   487  /** \brief Gets the status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   488   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   489   * \return status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   490   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   491  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   492  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   493  /** \brief Gets the TINT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   494   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   495   * \return address of TINT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   496   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   497  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   499  /** \brief Gets the TINT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   500   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   501   * \return address of TINT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   503  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   505  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   506  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   507  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   508  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   509  /** \brief Clears all the error flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   511   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   512   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   513  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   514  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   515  /** \brief Enables all the Interrupt lines.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   517   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   518   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   519  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   520  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   521  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   523   * \param messageBuffer message buffer interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   524   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   525   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   526   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   527  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   528  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   529  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   530   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   531   * \param ndat NDAT interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   532   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   533   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   534   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   535  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   536  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   537  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   538  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   539  /** \addtogroup IfxLld_Eray_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   540   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   542  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   543  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   544  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   546  /** \brief Initialises a RX pin.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   547   * \param rx the RX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   548   * \param rxMode the pin input mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   549   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   550   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   551  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   553  /** \brief Initializes a TX Enable output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   554   * \param txEn the TX Enable Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   555   * \param txEnMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   556   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   559  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   561  /** \brief Initializes a TX output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   562   * \param tx the TX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   563   * \param txMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   564   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   565   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   566   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   567  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   568  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   569  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   570  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   571  /** \addtogroup IfxLld_Eray_Std_Module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   572   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   574  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   575  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   576  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   577  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   578  /** \brief Enables the ERAY module.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   579   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   580   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   581   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   582  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   583  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   584  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   585   * \param eray pointer to ERAY registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   586   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   587   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   588   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   589  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   590  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   591  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   592  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   593  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   595  /** \brief Resets the ERAY kernel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   596   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   597   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   598   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   599  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   601  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   603  /** \addtogroup IfxLld_Eray_Std_Status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   604   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   605  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   606  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   607  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   608  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   610  /** \brief Gets the FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   611   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   612   * \return FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   613   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   614  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   616  /** \brief Gets the Input Buffer Host Busy status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   617   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   618   * \return TRUE if Host is Busy otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   619   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   620  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   622  /** \brief Gets the Input Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   623   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   624   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   626  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   628  /** \brief Gets the output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   629   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   630   * \return output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   631   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   632  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   633  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   634  /** \brief Gets the Output Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   635   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   636   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   637   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   638  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   639  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   640  /** \brief Gets the current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   641   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   642   * \return current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   643   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   644  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   645  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   646  /** \brief Gets the received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   647   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   648   * \return received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   650  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   652  /** \brief Waits until the controller enters required POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   653   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   654   * \param pocState POC state upto which controller waits.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   657  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   659  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   660  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   661  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   662  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   663  /** \brief Changes the Commmunication Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   664   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   665   * \param pocCommand POC command which triggers the Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   666   * \return TRUE if command accepted otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   667   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   668  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   669  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   670  /** \brief Sets the POC state to Ready state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   672   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   673   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   674  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   675  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   676  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   678  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   679   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   680  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   681  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   683  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   685  /** \brief request to receive header section from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   686   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   687   * \param headerReceived whether header is received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   688   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   689   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   690  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   692  /** \brief sets the bit to send header in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   693   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   694   * \param headerTransfered whether header transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   695   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   696   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   697  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   698  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   699  /** \brief Sets number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   700   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   701   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   702   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   703   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   704  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   705  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   706  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   708   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   709   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   710  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   711  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   712  /** \brief Sets baudrate on Flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   713   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   714   * \param baudrate baudrate on flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   715   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   716   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   717  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   718  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   719  /** \brief Sets secured buffers in message RAM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   720   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   721   * \param secureValue secure value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   722   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   723   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   724  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   726  /** \brief Sets channel A initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   727   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   728   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   729   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   730   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   731   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   732  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   734  /** \brief Sets channel B initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   735   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   736   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   737   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   738   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   739   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   740  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   741  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   742  /** \brief Sets receive delays on channels.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   743   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   744   * \param channelAReceptionDelay reception delay on channel A.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   745   * \param channelBReceptionDelay reception delay on channel B.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   746   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   747   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   748  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   749  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   750  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   751   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   752   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   753   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   754   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   755   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   756  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   757  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   758  /** \brief lead to halt state in clock synch error.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   759   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   760   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   761   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   762   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   763  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   764  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   765  /** \brief Sets cluster drift values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   766   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   767   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   768   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   769   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   770   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   772  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   773  /** \brief Sets cluster startup deviation.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   775   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   776   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   777   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   780  /** \brief Sets CAS symbol window duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   782   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   783   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   785  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   787  /** \brief sets duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   788   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   789   * \param macroticks duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   790   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   791   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   792  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   793  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   794  /** \brief sets duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   795   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   796   * \param microticks duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   797   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   798   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   799  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   801  /** \brief Sets decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   802   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   803   * \param decodingCorrection decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   804   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   805   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   806  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   807  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   808  /** \brief Sets dynamic slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   809   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   810   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   811   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   812   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   813   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   815  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   817  /** \brief Sets external correction controls.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   818   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   819   * \param externalOffset External offset correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   820   * \param externalRate External rate correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   821   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   823  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   825  /** \brief Sets external correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   826   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   827   * \param externalOffsetCorrection external clock offset correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   828   * \param externalRateCorrection external clock rate correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   829   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   830   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   831  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   833  /** \brief Sets FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   834   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   835   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   836   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   837   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   838  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   840  /** \brief Sets FIFO filter configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   841   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   842   * \param rejectedFrameId rejected frameId by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   843   * \param filteredCycleNumber filtered cycle number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   844   * \param fifoNullFramesRejected null frames rejection selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   845   * \param frameIdFilter filtered frameid by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   846   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   847   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   848  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   849  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   850  /** \brief Sets FIFO configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   851   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   852   * \param receiveChannel FIFO receive channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   853   * \param staticFifoDisabled static FIFO selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   854   * \param fifoDepth FIFO depth.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   855   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   856   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   857  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   858  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   859  /** \brief Sets first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   860   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   861   * \param firstDynamicBuffer first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   862   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   863   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   864  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   865  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   866  /** \brief Sets startup or wakeup listen timeouts.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   867   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   868   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   869   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   870   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   871   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   872  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   873  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   874  /** \brief Sets the maximum cold start attempts for active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   875   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   876   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   877   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   878   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   879  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   880  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   881  /** \brief Sets max limit correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   882   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   883   * \param maxOffsetCorrection maximum offset correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   884   * \param maxRateCorrection maximum rate correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   885   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   886   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   887  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   888  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   889  /** \brief Sets maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   890   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   891   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   892   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   893   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   894  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   895  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   896  /** \brief Sets number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   897   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   898   * \param numberOfMessageBuffers number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   899   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   900   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   901  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   902  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   903  /** \brief Sets Message Handler configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   904   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   905   * \param staticFramepayload payload length of static frames in double bytes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   906   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   907   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   908   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   909  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   910  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   911  /** \brief Sets network start Idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   912   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   913   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   914   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   915   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   916  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   917  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   918  /** \brief Sets network management vector length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   919   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   920   * \param networkVectorLength length of network management vector.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   921   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   922   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   923  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   924  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   925  /** \brief Sets channels connected to node.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   926   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   927   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   928   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   929   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   930   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   931  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   932  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   933  /** \brief Sets offset correction starting point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   934   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   935   * \param correctionOffset offset correction start point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   936   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   937   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   938  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   939  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   940  /** \brief requests to receive the frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   941   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   942   * \param receiveRequested whether frame to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   945  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   947  /** \brief Sets receive wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   948   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   949   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   950   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   951   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   952   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   953   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   954  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint8 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   955  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   956  /** \brief sets buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   957   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   958   * \param bufferIndex buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   959   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   960   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   961  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   962  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   963  /** \brief Sets slots action points.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   964   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   965   * \param staticActionPoint static slots and symbol window action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   966   * \param dynamicActionPoint dynamic slots action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   967   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   968   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   969  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   971  /** \brief Sets static slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   972   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   973   * \param staticSlotLength duration of static slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   974   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   975   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   976   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   978  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   979  /** \brief Sets sample point for strobing.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   981   * \param strobePosition strobing sample count.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   982   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   983   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   984  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   985  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   986  /** \brief Sets channels which transmits symbols.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   987   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   988   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   989   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   994  /** \brief Sets the transmit slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   996   * \param transmissionSlotMode transmission slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   997   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   998   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1001  /** \brief Sets transmission start time duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1003   * \param transmissionStartTime transmission start time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1004   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1005   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1006  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint16 transmissionStartTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1007  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1008  /** \brief Sets transfer request to send frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1009   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1010   * \param transferRequested whether transfer requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1011   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1012   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1013  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1014  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1015  /** \brief Sets transmit wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1016   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1017   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1018   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1019   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1020   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1021   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1022  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1023  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1024  /** \brief Configures transmitted frames for startup and synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1025   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1026   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1027   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1028   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1029   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1030  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1032  /** \brief Sets the transmit buffer number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1033   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1034   * \param bufferIndex buffer number in which frame is sent.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1035   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1036   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1037  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1039  /** \brief Swaps the shadow and Host output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1040   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1041   * \param swapRequested whether swap is requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1042   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1043   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1044  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1045  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1046  /** \brief Sets the cluster wakeup channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1047   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1048   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1049   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1050   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1051  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1052  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1053  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1054  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1055  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1056   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1057  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1058  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1059  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1060  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1062  /** \brief requests to receive data from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1064   * \param dataReceived whether data to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1065   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1066   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1069  /** \brief sets the bit to send data in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1071   * \param dataTransfered whether data transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1072   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1073   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1074  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1075  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1076  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1077  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1078  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1080  /** \brief Calculate and returns the CRC for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1081   * \param payloadLength payload length configured for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1082   * \param frameId slot id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1083   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1084   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1085   * \return calculated CRC value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1086   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1087  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1088  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1089  /** \brief Reads the received data from output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1090   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1091   * \param data pointer to received data buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1092   * \param payloadLength payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1095  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1097  /** \brief Reads header and data from output buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1098   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1099   * \param header header received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1100   * \param data data received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1101   * \param maxPayloadLength maximum payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1102   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1103   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1104  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1106  /** \brief Writes header and data to Input buffers and set the slots.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1107   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1108   * \param header Header section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1109   * \param data data section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1110   * \param slotConfig pointer slot allocation configuration structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1111   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1112   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1113  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1115  /** \brief Writes data section of a frame to input data registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1116   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1117   * \param data data segment in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1118   * \param payloadLength payload length configured for slot buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1119   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1120   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1121  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1123  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1125  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1126  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1127  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1129  /** \brief Gets the FIFO index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1130   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1131   * \return FIFO buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1132   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1133  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1135  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1136  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1137  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1139  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1140  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1141      eray->EIR.U = errorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1142  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1145  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1146  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1147      eray->SIR.U = statusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1148  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1151  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1153      // Run Mode Clock divider to 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1154      eray->CLC.U = 0x00000100;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1155  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1156      // ensure that write access finished before leaving this function
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1157      if (eray->CLC.U)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1158      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1159  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1162  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1164      Ifx_ERAY_EIR interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1165      interruptFlags.U = eray->EIR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1166      return interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1167  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1168  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1169  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1170  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1171  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1172      return eray->MRC.B.FFB;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1173  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1176  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1177  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1178      Ifx_ERAY_FSR fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1179      fifoStatus.U = eray->FSR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1180      return fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1181  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1184  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1186      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1187  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1188  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1189  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1190  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1191  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1192      return (eray->IBCR.B.IBSYS == 1) ? TRUE : FALSE;
	ld.bu	d15,[a12]1303
.L204:
	jnz.t	d15:7,.L19
.L402:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    24   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    25   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    26   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    27   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    28   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    29   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    30   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    31   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    32   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    33   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    34   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    35   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    36   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    37   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    38   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    39   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    40   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    42  #ifndef IFXERAY_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    43  #define IFXERAY_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    45  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    46  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    47  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    48  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    49  #include "_Impl/IfxEray_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    50  #include "_PinMap/IfxEray_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    51  #include "IfxEray_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    52  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    55  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    56  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    57  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    58  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    59   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    60  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    61   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    62  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    63  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    64      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    65      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    66      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    67  } IfxEray_Baudrate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    68  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    69  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    70   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    71  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    72  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    73      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    74      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    75  } IfxEray_BufferDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    77  /** \brief Channel Id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    78   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    79  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    80  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    81      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    82      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    83  } IfxEray_Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    84  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    85  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    86   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    87  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    88  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    89      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    90      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    91      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    92      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    93      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    94      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    95      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    96      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    97      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    98      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    99      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   100      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   101      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   102      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   103      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   104      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   105      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   106      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   107  } IfxEray_ClearErrorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   109  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   111  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   112  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   113      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   114      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   115      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   116      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   117      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   118      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   119      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   120      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   121      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   122      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   123      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   124      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   125      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   126      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   127      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   128      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   129      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   130      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   131      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   132      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   133  } IfxEray_ClearStatusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   135  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   136   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   137  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   139      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   140      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   141      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   142      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   143      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   144      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   145      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   146      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   147  } IfxEray_ClockDivider;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   149  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   150   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   151  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   153      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   154      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   155      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   156  } IfxEray_ExternalOffset;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   158  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   159   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   160  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   161  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   162      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   163      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   164      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   165      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   166      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   167      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   168      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   169      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   170  } IfxEray_ExternalOffsetCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   172  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   173   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   174  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   175  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   176      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   177      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   178      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   179  } IfxEray_ExternalRate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   181  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   182   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   183  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   184  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   185      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   186      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   187      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   188      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   189      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   190      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   191      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   192      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   193  } IfxEray_ExternalRateCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   195  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   196   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   197  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   199      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   200      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   201      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   202  } IfxEray_IdleDynamicSlots;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   204  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   205   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   206  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   207  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   208      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   209      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   210      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   211      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   212      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   213      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   214      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   215      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   216      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   217      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   218      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   219      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   220      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   221      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   222      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   223  } IfxEray_ListenTimeOutNoise;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   225  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   226   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   227  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   229      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   230      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   231      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   232      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   233      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   234      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   235      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   236      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   237      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   238      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   239      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   240      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   241      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   242      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   243  } IfxEray_MaxSynchFrames;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   245  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   246   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   247  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   248  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   249      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   250      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   251      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   252      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   253      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   254      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   255      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   256      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   257      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   258      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   259      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   260      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   261      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   262  } IfxEray_PocCommand;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   264  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   265   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   266  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   267  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   268      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   269      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   270      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   271      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   272      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   273      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   274      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   275      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   276      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   277      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   278      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   279      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   280      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   281      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   282      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   283      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   284      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   285      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   286      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   287      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   288      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   289      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   290      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   291  } IfxEray_PocState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   293  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   294   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   295  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   296  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   297      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   298      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   299      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   300      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   301  } IfxEray_ReceiveChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   303  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   304   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   305   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   306  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   307  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   308      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   309      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   310  } IfxEray_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   312  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   314  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   315  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   316      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   317      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   318      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   319  } IfxEray_StrobePosition;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   321  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   322   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   323  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   325      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   326      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   327  } IfxEray_TransmissionMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   329  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   333      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   334      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   335  } IfxEray_TransmissionSlotMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   337  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   338   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   339  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   340  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   341      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   342      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   343  } IfxEray_WakeupChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   345  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   347  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   348  /*-----------------------------Data Structures--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   349  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   351  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   352   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   353  /** \brief Header section in  a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   355  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   357      uint16                   frameId;                       /**< \brief slot ID of the selected Message Buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   358      uint8                    cycleCode;                     /**< \brief the cycle set used for cycle counter filtering. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   359      boolean                  channelAFiltered;              /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   360      boolean                  channelBFiltered;              /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   361      IfxEray_BufferDirection  bufferDirection;               /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   362      boolean                  transmitPayloadIndicatior;     /**< \brief weather payload indicator is set or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionMode transmissionMode;              /**< \brief transmission mode of Header. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   364      boolean                  bufferServiceEnabled;          /**< \brief wether buffer service request is enabled or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   365      uint8                    payloadLength;                 /**< \brief length of data section. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   366      uint16                   dataPointer;                   /**< \brief pointer to the data section of message buffer in RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   367      boolean                  startupFrameIndicator;         /**< \brief whether startup frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   368      boolean                  syncFrameIndicator;            /**< \brief whether sync frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   369  } IfxEray_Header;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   371  /** \brief Received header in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   372   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   373  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   374  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   375      uint16 frameId : 11;                   /**< \brief received frame id. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   376      uint8  payloadLength : 7;              /**< \brief received payload length. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   377      uint16 headerCrc : 11;                 /**< \brief received header crc. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   378      uint8  reservedBit : 1;                /**< \brief state of the received reserved bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   379      uint8  nullFrameIndicator : 1;         /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   380      uint8  syncFrame : 1;                  /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   381      uint8  startupFrame : 1;               /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   382      uint8  cycleNumber : 7;                /**< \brief cycle number in which frame is received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   383      uint8  payloadPreambleIndicator : 1;   /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   384  } IfxEray_ReceivedHeader;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   386  /** \brief Transmit control structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   387   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   388  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   389  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   390      boolean headerTransfered;      /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   391      boolean dataTransfered;        /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   392      boolean transferRequested;     /**< \brief transmit buffer released for transmission or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   393      uint8   bufferIndex;           /**< \brief buffer index in the Message RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   394  } IfxEray_SlotConfig;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   396  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   398  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   399   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   400  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   401  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   402  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   403  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   404  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   405  /** \brief Clears the error flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   406   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   407   * \param errorFlag error flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   408   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   409   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   410  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   411  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   412  /** \brief Clears the status flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   413   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   414   * \param statusFlag status flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   415   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   416   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   417  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   418  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   419  /** \brief Gets the error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   420   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   421   * \return error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   422   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   423  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   424  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   425  /** \brief Gets the IBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   426   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   427   * \return address of IBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   428   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   429  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   431  /** \brief Gets the INT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   432   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   433   * \return address of INT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   434   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   435  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   437  /** \brief Gets the INT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   438   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   439   * \return address of INT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   440   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   441  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   443  /** \brief Gets the message buffers interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   444   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   445   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   446   * \return message buffer interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   447   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   448  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   450  /** \brief Gets the MBSC0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   451   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   452   * \return address of MBSC0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   454  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   456  /** \brief Gets the MBSC1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   457   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   458   * \return address of MBSC1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   459   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   460  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   462  /** \brief Gets the NDAT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   463   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   464   * \return address of NDAT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   465   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   466  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   467  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   468  /** \brief Gets the NDAT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   469   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   470   * \return address of NDAT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   472  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   474  /** \brief Gets the new data interrupt buffers status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   475   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   476   * \param ndat message buffer number configured to which ndat occurs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   477   * \return ndat interrupt buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   479  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   481  /** \brief Gets the OBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   482   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   483   * \return address of OBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   484   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   485  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   486  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   487  /** \brief Gets the status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   488   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   489   * \return status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   490   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   491  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   492  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   493  /** \brief Gets the TINT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   494   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   495   * \return address of TINT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   496   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   497  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   499  /** \brief Gets the TINT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   500   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   501   * \return address of TINT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   503  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   505  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   506  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   507  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   508  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   509  /** \brief Clears all the error flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   511   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   512   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   513  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   514  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   515  /** \brief Enables all the Interrupt lines.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   517   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   518   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   519  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   520  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   521  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   523   * \param messageBuffer message buffer interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   524   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   525   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   526   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   527  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   528  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   529  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   530   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   531   * \param ndat NDAT interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   532   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   533   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   534   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   535  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   536  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   537  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   538  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   539  /** \addtogroup IfxLld_Eray_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   540   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   542  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   543  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   544  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   546  /** \brief Initialises a RX pin.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   547   * \param rx the RX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   548   * \param rxMode the pin input mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   549   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   550   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   551  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   553  /** \brief Initializes a TX Enable output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   554   * \param txEn the TX Enable Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   555   * \param txEnMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   556   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   559  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   561  /** \brief Initializes a TX output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   562   * \param tx the TX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   563   * \param txMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   564   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   565   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   566   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   567  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   568  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   569  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   570  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   571  /** \addtogroup IfxLld_Eray_Std_Module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   572   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   574  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   575  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   576  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   577  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   578  /** \brief Enables the ERAY module.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   579   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   580   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   581   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   582  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   583  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   584  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   585   * \param eray pointer to ERAY registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   586   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   587   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   588   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   589  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   590  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   591  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   592  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   593  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   595  /** \brief Resets the ERAY kernel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   596   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   597   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   598   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   599  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   601  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   603  /** \addtogroup IfxLld_Eray_Std_Status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   604   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   605  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   606  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   607  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   608  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   610  /** \brief Gets the FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   611   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   612   * \return FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   613   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   614  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   616  /** \brief Gets the Input Buffer Host Busy status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   617   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   618   * \return TRUE if Host is Busy otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   619   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   620  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   622  /** \brief Gets the Input Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   623   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   624   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   626  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   628  /** \brief Gets the output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   629   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   630   * \return output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   631   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   632  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   633  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   634  /** \brief Gets the Output Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   635   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   636   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   637   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   638  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   639  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   640  /** \brief Gets the current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   641   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   642   * \return current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   643   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   644  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   645  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   646  /** \brief Gets the received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   647   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   648   * \return received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   650  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   652  /** \brief Waits until the controller enters required POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   653   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   654   * \param pocState POC state upto which controller waits.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   657  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   659  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   660  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   661  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   662  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   663  /** \brief Changes the Commmunication Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   664   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   665   * \param pocCommand POC command which triggers the Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   666   * \return TRUE if command accepted otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   667   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   668  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   669  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   670  /** \brief Sets the POC state to Ready state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   672   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   673   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   674  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   675  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   676  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   678  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   679   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   680  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   681  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   683  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   685  /** \brief request to receive header section from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   686   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   687   * \param headerReceived whether header is received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   688   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   689   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   690  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   692  /** \brief sets the bit to send header in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   693   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   694   * \param headerTransfered whether header transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   695   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   696   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   697  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   698  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   699  /** \brief Sets number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   700   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   701   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   702   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   703   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   704  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   705  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   706  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   708   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   709   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   710  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   711  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   712  /** \brief Sets baudrate on Flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   713   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   714   * \param baudrate baudrate on flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   715   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   716   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   717  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   718  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   719  /** \brief Sets secured buffers in message RAM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   720   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   721   * \param secureValue secure value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   722   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   723   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   724  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   726  /** \brief Sets channel A initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   727   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   728   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   729   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   730   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   731   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   732  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   734  /** \brief Sets channel B initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   735   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   736   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   737   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   738   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   739   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   740  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   741  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   742  /** \brief Sets receive delays on channels.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   743   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   744   * \param channelAReceptionDelay reception delay on channel A.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   745   * \param channelBReceptionDelay reception delay on channel B.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   746   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   747   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   748  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   749  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   750  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   751   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   752   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   753   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   754   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   755   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   756  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   757  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   758  /** \brief lead to halt state in clock synch error.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   759   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   760   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   761   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   762   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   763  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   764  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   765  /** \brief Sets cluster drift values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   766   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   767   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   768   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   769   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   770   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   772  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   773  /** \brief Sets cluster startup deviation.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   775   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   776   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   777   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   780  /** \brief Sets CAS symbol window duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   782   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   783   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   785  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   787  /** \brief sets duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   788   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   789   * \param macroticks duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   790   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   791   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   792  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   793  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   794  /** \brief sets duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   795   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   796   * \param microticks duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   797   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   798   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   799  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   801  /** \brief Sets decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   802   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   803   * \param decodingCorrection decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   804   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   805   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   806  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   807  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   808  /** \brief Sets dynamic slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   809   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   810   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   811   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   812   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   813   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   815  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   817  /** \brief Sets external correction controls.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   818   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   819   * \param externalOffset External offset correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   820   * \param externalRate External rate correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   821   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   823  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   825  /** \brief Sets external correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   826   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   827   * \param externalOffsetCorrection external clock offset correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   828   * \param externalRateCorrection external clock rate correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   829   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   830   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   831  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   833  /** \brief Sets FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   834   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   835   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   836   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   837   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   838  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   840  /** \brief Sets FIFO filter configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   841   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   842   * \param rejectedFrameId rejected frameId by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   843   * \param filteredCycleNumber filtered cycle number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   844   * \param fifoNullFramesRejected null frames rejection selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   845   * \param frameIdFilter filtered frameid by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   846   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   847   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   848  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   849  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   850  /** \brief Sets FIFO configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   851   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   852   * \param receiveChannel FIFO receive channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   853   * \param staticFifoDisabled static FIFO selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   854   * \param fifoDepth FIFO depth.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   855   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   856   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   857  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   858  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   859  /** \brief Sets first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   860   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   861   * \param firstDynamicBuffer first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   862   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   863   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   864  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   865  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   866  /** \brief Sets startup or wakeup listen timeouts.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   867   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   868   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   869   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   870   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   871   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   872  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   873  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   874  /** \brief Sets the maximum cold start attempts for active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   875   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   876   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   877   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   878   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   879  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   880  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   881  /** \brief Sets max limit correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   882   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   883   * \param maxOffsetCorrection maximum offset correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   884   * \param maxRateCorrection maximum rate correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   885   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   886   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   887  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   888  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   889  /** \brief Sets maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   890   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   891   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   892   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   893   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   894  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   895  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   896  /** \brief Sets number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   897   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   898   * \param numberOfMessageBuffers number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   899   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   900   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   901  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   902  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   903  /** \brief Sets Message Handler configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   904   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   905   * \param staticFramepayload payload length of static frames in double bytes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   906   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   907   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   908   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   909  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   910  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   911  /** \brief Sets network start Idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   912   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   913   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   914   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   915   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   916  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   917  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   918  /** \brief Sets network management vector length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   919   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   920   * \param networkVectorLength length of network management vector.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   921   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   922   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   923  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   924  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   925  /** \brief Sets channels connected to node.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   926   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   927   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   928   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   929   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   930   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   931  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   932  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   933  /** \brief Sets offset correction starting point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   934   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   935   * \param correctionOffset offset correction start point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   936   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   937   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   938  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   939  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   940  /** \brief requests to receive the frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   941   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   942   * \param receiveRequested whether frame to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   945  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   947  /** \brief Sets receive wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   948   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   949   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   950   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   951   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   952   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   953   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   954  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint8 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   955  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   956  /** \brief sets buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   957   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   958   * \param bufferIndex buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   959   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   960   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   961  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   962  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   963  /** \brief Sets slots action points.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   964   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   965   * \param staticActionPoint static slots and symbol window action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   966   * \param dynamicActionPoint dynamic slots action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   967   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   968   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   969  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   971  /** \brief Sets static slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   972   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   973   * \param staticSlotLength duration of static slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   974   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   975   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   976   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   978  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   979  /** \brief Sets sample point for strobing.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   981   * \param strobePosition strobing sample count.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   982   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   983   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   984  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   985  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   986  /** \brief Sets channels which transmits symbols.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   987   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   988   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   989   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   994  /** \brief Sets the transmit slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   996   * \param transmissionSlotMode transmission slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   997   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   998   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1001  /** \brief Sets transmission start time duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1003   * \param transmissionStartTime transmission start time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1004   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1005   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1006  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint16 transmissionStartTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1007  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1008  /** \brief Sets transfer request to send frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1009   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1010   * \param transferRequested whether transfer requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1011   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1012   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1013  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1014  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1015  /** \brief Sets transmit wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1016   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1017   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1018   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1019   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1020   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1021   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1022  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1023  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1024  /** \brief Configures transmitted frames for startup and synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1025   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1026   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1027   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1028   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1029   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1030  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1032  /** \brief Sets the transmit buffer number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1033   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1034   * \param bufferIndex buffer number in which frame is sent.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1035   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1036   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1037  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1039  /** \brief Swaps the shadow and Host output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1040   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1041   * \param swapRequested whether swap is requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1042   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1043   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1044  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1045  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1046  /** \brief Sets the cluster wakeup channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1047   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1048   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1049   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1050   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1051  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1052  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1053  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1054  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1055  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1056   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1057  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1058  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1059  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1060  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1062  /** \brief requests to receive data from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1064   * \param dataReceived whether data to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1065   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1066   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1069  /** \brief sets the bit to send data in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1071   * \param dataTransfered whether data transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1072   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1073   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1074  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1075  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1076  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1077  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1078  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1080  /** \brief Calculate and returns the CRC for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1081   * \param payloadLength payload length configured for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1082   * \param frameId slot id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1083   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1084   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1085   * \return calculated CRC value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1086   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1087  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1088  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1089  /** \brief Reads the received data from output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1090   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1091   * \param data pointer to received data buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1092   * \param payloadLength payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1095  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1097  /** \brief Reads header and data from output buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1098   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1099   * \param header header received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1100   * \param data data received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1101   * \param maxPayloadLength maximum payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1102   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1103   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1104  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1106  /** \brief Writes header and data to Input buffers and set the slots.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1107   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1108   * \param header Header section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1109   * \param data data section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1110   * \param slotConfig pointer slot allocation configuration structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1111   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1112   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1113  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1115  /** \brief Writes data section of a frame to input data registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1116   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1117   * \param data data segment in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1118   * \param payloadLength payload length configured for slot buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1119   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1120   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1121  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1123  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1125  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1126  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1127  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1129  /** \brief Gets the FIFO index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1130   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1131   * \return FIFO buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1132   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1133  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1135  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1136  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1137  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1139  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1140  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1141      eray->EIR.U = errorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1142  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1145  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1146  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1147      eray->SIR.U = statusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1148  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1151  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1153      // Run Mode Clock divider to 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1154      eray->CLC.U = 0x00000100;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1155  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1156      // ensure that write access finished before leaving this function
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1157      if (eray->CLC.U)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1158      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1159  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1162  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1164      Ifx_ERAY_EIR interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1165      interruptFlags.U = eray->EIR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1166      return interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1167  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1168  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1169  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1170  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1171  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1172      return eray->MRC.B.FFB;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1173  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1176  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1177  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1178      Ifx_ERAY_FSR fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1179      fifoStatus.U = eray->FSR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1180      return fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1181  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1184  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1186      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	lea	a15,[a12]1301

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   279      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   280  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   281      while (IfxEray_getInputBufferBusyHostStatus(eray) == TRUE)
.L20:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    24   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    25   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    26   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    27   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    28   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    29   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    30   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    31   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    32   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    33   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    34   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    35   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    36   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    37   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    38   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    39   * \ingroup IfxLld_Eray_Std
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    40   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    42  #ifndef IFXERAY_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    43  #define IFXERAY_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    45  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    46  /*----------------------------------Includes----------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    47  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    48  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    49  #include "_Impl/IfxEray_cfg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    50  #include "_PinMap/IfxEray_PinMap.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    51  #include "IfxEray_reg.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    52  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    54  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    55  /*--------------------------------Enumerations--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    56  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    57  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    58  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    59   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    60  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    61   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    62  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    63  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    64      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    65      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    66      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    67  } IfxEray_Baudrate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    68  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    69  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    70   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    71  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    72  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    73      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    74      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    75  } IfxEray_BufferDirection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    76  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    77  /** \brief Channel Id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    78   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    79  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    80  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    81      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    82      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    83  } IfxEray_Channel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    84  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    85  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    86   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    87  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    88  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    89      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    90      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    91      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    92      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    93      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    94      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    95      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    96      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    97      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    98      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	    99      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   100      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   101      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   102      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   103      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   104      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   105      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   106      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   107  } IfxEray_ClearErrorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   108  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   109  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   110   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   111  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   112  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   113      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   114      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   115      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   116      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   117      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   118      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   119      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   120      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   121      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   122      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   123      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   124      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   125      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   126      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   127      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   128      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   129      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   130      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   131      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   132      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   133  } IfxEray_ClearStatusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   135  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   136   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   137  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   138  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   139      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   140      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   141      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   142      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   143      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   144      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   145      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   146      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   147  } IfxEray_ClockDivider;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   148  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   149  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   150   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   151  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   153      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   154      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   155      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   156  } IfxEray_ExternalOffset;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   158  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   159   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   160  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   161  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   162      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   163      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   164      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   165      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   166      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   167      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   168      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   169      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   170  } IfxEray_ExternalOffsetCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   172  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   173   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   174  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   175  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   176      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   177      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   178      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   179  } IfxEray_ExternalRate;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   180  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   181  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   182   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   183  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   184  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   185      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   186      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   187      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   188      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   189      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   190      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   191      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   192      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   193  } IfxEray_ExternalRateCorrection;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   194  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   195  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   196   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   197  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   198  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   199      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   200      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   201      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   202  } IfxEray_IdleDynamicSlots;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   203  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   204  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   205   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   206  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   207  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   208      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   209      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   210      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   211      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   212      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   213      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   214      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   215      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   216      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   217      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   218      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   219      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   220      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   221      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   222      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   223  } IfxEray_ListenTimeOutNoise;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   224  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   225  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   226   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   227  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   228  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   229      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   230      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   231      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   232      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   233      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   234      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   235      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   236      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   237      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   238      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   239      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   240      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   241      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   242      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   243  } IfxEray_MaxSynchFrames;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   244  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   245  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   246   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   247  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   248  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   249      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   250      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   251      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   252      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   253      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   254      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   255      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   256      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   257      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   258      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   259      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   260      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   261      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   262  } IfxEray_PocCommand;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   263  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   264  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   265   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   266  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   267  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   268      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   269      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   270      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   271      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   272      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   273      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   274      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   275      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   276      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   277      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   278      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   279      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   280      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   281      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   282      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   283      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   284      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   285      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   286      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   287      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   288      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   289      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   290      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   291  } IfxEray_PocState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   293  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   294   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   295  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   296  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   297      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   298      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   299      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   300      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   301  } IfxEray_ReceiveChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   303  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   304   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   305   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   306  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   307  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   308      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   309      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   310  } IfxEray_SleepMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   312  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   313   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   314  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   315  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   316      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   317      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   318      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   319  } IfxEray_StrobePosition;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   320  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   321  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   322   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   323  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   324  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   325      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   326      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   327  } IfxEray_TransmissionMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   328  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   329  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   330   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   331  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   332  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   333      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   334      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   335  } IfxEray_TransmissionSlotMode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   336  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   337  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   338   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   339  typedef enum
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   340  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   341      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   342      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   343  } IfxEray_WakeupChannel;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   344  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   345  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   346  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   347  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   348  /*-----------------------------Data Structures--------------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   349  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   350  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   351  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   352   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   353  /** \brief Header section in  a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   354   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   355  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   356  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   357      uint16                   frameId;                       /**< \brief slot ID of the selected Message Buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   358      uint8                    cycleCode;                     /**< \brief the cycle set used for cycle counter filtering. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   359      boolean                  channelAFiltered;              /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   360      boolean                  channelBFiltered;              /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   361      IfxEray_BufferDirection  bufferDirection;               /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   362      boolean                  transmitPayloadIndicatior;     /**< \brief weather payload indicator is set or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionMode transmissionMode;              /**< \brief transmission mode of Header. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   364      boolean                  bufferServiceEnabled;          /**< \brief wether buffer service request is enabled or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   365      uint8                    payloadLength;                 /**< \brief length of data section. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   366      uint16                   dataPointer;                   /**< \brief pointer to the data section of message buffer in RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   367      boolean                  startupFrameIndicator;         /**< \brief whether startup frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   368      boolean                  syncFrameIndicator;            /**< \brief whether sync frame is indicated or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   369  } IfxEray_Header;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   370  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   371  /** \brief Received header in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   372   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   373  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   374  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   375      uint16 frameId : 11;                   /**< \brief received frame id. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   376      uint8  payloadLength : 7;              /**< \brief received payload length. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   377      uint16 headerCrc : 11;                 /**< \brief received header crc. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   378      uint8  reservedBit : 1;                /**< \brief state of the received reserved bit. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   379      uint8  nullFrameIndicator : 1;         /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   380      uint8  syncFrame : 1;                  /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   381      uint8  startupFrame : 1;               /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   382      uint8  cycleNumber : 7;                /**< \brief cycle number in which frame is received. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   383      uint8  payloadPreambleIndicator : 1;   /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   384  } IfxEray_ReceivedHeader;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   385  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   386  /** \brief Transmit control structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   387   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   388  typedef struct
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   389  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   390      boolean headerTransfered;      /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   391      boolean dataTransfered;        /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   392      boolean transferRequested;     /**< \brief transmit buffer released for transmission or not. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   393      uint8   bufferIndex;           /**< \brief buffer index in the Message RAM. */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   394  } IfxEray_SlotConfig;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   396  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   397  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   398  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   399   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   400  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   401  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   402  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   403  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   404  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   405  /** \brief Clears the error flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   406   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   407   * \param errorFlag error flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   408   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   409   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   410  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   411  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   412  /** \brief Clears the status flag requested.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   413   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   414   * \param statusFlag status flag to be cleared.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   415   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   416   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   417  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   418  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   419  /** \brief Gets the error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   420   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   421   * \return error interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   422   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   423  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   424  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   425  /** \brief Gets the IBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   426   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   427   * \return address of IBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   428   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   429  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   430  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   431  /** \brief Gets the INT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   432   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   433   * \return address of INT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   434   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   435  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   437  /** \brief Gets the INT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   438   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   439   * \return address of INT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   440   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   441  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   443  /** \brief Gets the message buffers interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   444   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   445   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   446   * \return message buffer interrupt status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   447   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   448  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   449  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   450  /** \brief Gets the MBSC0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   451   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   452   * \return address of MBSC0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   453   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   454  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   456  /** \brief Gets the MBSC1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   457   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   458   * \return address of MBSC1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   459   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   460  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   461  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   462  /** \brief Gets the NDAT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   463   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   464   * \return address of NDAT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   465   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   466  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   467  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   468  /** \brief Gets the NDAT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   469   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   470   * \return address of NDAT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   471   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   472  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   474  /** \brief Gets the new data interrupt buffers status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   475   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   476   * \param ndat message buffer number configured to which ndat occurs.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   477   * \return ndat interrupt buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   478   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   479  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   480  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   481  /** \brief Gets the OBUSY service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   482   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   483   * \return address of OBUSY service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   484   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   485  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   486  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   487  /** \brief Gets the status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   488   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   489   * \return status interrupt flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   490   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   491  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   492  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   493  /** \brief Gets the TINT0 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   494   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   495   * \return address of TINT0 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   496   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   497  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   499  /** \brief Gets the TINT1 service request.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   500   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   501   * \return address of TINT1 service request value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   502   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   503  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   504  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   505  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   506  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   507  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   508  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   509  /** \brief Clears all the error flags.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   511   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   512   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   513  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   514  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   515  /** \brief Enables all the Interrupt lines.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   517   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   518   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   519  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   520  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   521  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   523   * \param messageBuffer message buffer interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   524   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   525   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   526   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   527  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   528  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   529  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   530   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   531   * \param ndat NDAT interrupt which should be configured
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   532   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   533   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   534   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   535  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   536  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   537  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   538  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   539  /** \addtogroup IfxLld_Eray_Std_IO
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   540   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   541  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   542  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   543  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   544  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   545  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   546  /** \brief Initialises a RX pin.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   547   * \param rx the RX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   548   * \param rxMode the pin input mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   549   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   550   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   551  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   552  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   553  /** \brief Initializes a TX Enable output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   554   * \param txEn the TX Enable Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   555   * \param txEnMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   556   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   557   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   558   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   559  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   561  /** \brief Initializes a TX output.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   562   * \param tx the TX Pin which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   563   * \param txMode the pin output mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   564   * \param padDriver the pad driver mode which should be configured.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   565   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   566   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   567  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   568  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   569  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   570  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   571  /** \addtogroup IfxLld_Eray_Std_Module
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   572   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   573  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   574  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   575  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   576  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   577  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   578  /** \brief Enables the ERAY module.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   579   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   580   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   581   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   582  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   583  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   584  /** \brief Sets the sensitivity of the module to sleep signal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   585   * \param eray pointer to ERAY registers
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   586   * \param mode mode selection (enable/disable)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   587   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   588   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   589  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   590  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   591  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   592  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   593  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   594  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   595  /** \brief Resets the ERAY kernel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   596   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   597   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   598   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   599  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   600  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   601  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   602  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   603  /** \addtogroup IfxLld_Eray_Std_Status
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   604   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   605  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   606  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   607  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   608  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   609  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   610  /** \brief Gets the FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   611   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   612   * \return FIFO status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   613   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   614  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   615  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   616  /** \brief Gets the Input Buffer Host Busy status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   617   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   618   * \return TRUE if Host is Busy otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   619   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   620  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   621  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   622  /** \brief Gets the Input Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   623   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   624   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   625   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   626  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   627  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   628  /** \brief Gets the output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   629   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   630   * \return output buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   631   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   632  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   633  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   634  /** \brief Gets the Output Buffer Shadow status.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   635   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   636   * \return TRUE if busy otherwise FALSE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   637   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   638  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   639  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   640  /** \brief Gets the current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   641   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   642   * \return current POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   643   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   644  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   645  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   646  /** \brief Gets the received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   647   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   648   * \return received wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   649   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   650  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   651  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   652  /** \brief Waits until the controller enters required POC state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   653   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   654   * \param pocState POC state upto which controller waits.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   655   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   656   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   657  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   659  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   660  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   661  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   662  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   663  /** \brief Changes the Commmunication Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   664   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   665   * \param pocCommand POC command which triggers the Controller state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   666   * \return TRUE if command accepted otherwise FALSE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   667   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   668  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   669  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   670  /** \brief Sets the POC state to Ready state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   672   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   673   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   674  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   675  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   676  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   677  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   678  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   679   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   680  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   681  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   682  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   683  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   685  /** \brief request to receive header section from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   686   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   687   * \param headerReceived whether header is received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   688   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   689   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   690  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   691  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   692  /** \brief sets the bit to send header in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   693   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   694   * \param headerTransfered whether header transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   695   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   696   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   697  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   698  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   699  /** \brief Sets number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   700   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   701   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   702   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   703   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   704  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   705  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   706  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   708   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   709   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   710  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   711  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   712  /** \brief Sets baudrate on Flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   713   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   714   * \param baudrate baudrate on flexray bus.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   715   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   716   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   717  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   718  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   719  /** \brief Sets secured buffers in message RAM.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   720   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   721   * \param secureValue secure value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   722   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   723   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   724  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   725  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   726  /** \brief Sets channel A initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   727   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   728   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   729   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   730   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   731   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   732  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   733  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   734  /** \brief Sets channel B initial offstes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   735   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   736   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   737   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   738   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   739   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   740  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   741  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   742  /** \brief Sets receive delays on channels.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   743   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   744   * \param channelAReceptionDelay reception delay on channel A.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   745   * \param channelBReceptionDelay reception delay on channel B.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   746   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   747   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   748  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   749  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   750  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   751   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   752   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   753   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   754   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   755   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   756  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   757  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   758  /** \brief lead to halt state in clock synch error.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   759   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   760   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   761   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   762   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   763  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   764  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   765  /** \brief Sets cluster drift values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   766   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   767   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   768   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   769   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   770   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   772  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   773  /** \brief Sets cluster startup deviation.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   775   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   776   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   777   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   779  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   780  /** \brief Sets CAS symbol window duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   782   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   783   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   784   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   785  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   786  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   787  /** \brief sets duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   788   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   789   * \param macroticks duration of the communication cycle in Macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   790   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   791   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   792  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   793  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   794  /** \brief sets duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   795   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   796   * \param microticks duration of the communication cycle in Microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   797   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   798   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   799  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   800  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   801  /** \brief Sets decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   802   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   803   * \param decodingCorrection decoding correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   804   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   805   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   806  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   807  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   808  /** \brief Sets dynamic slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   809   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   810   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   811   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   812   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   813   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   814   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   815  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   817  /** \brief Sets external correction controls.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   818   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   819   * \param externalOffset External offset correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   820   * \param externalRate External rate correction control.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   821   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   822   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   823  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   824  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   825  /** \brief Sets external correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   826   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   827   * \param externalOffsetCorrection external clock offset correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   828   * \param externalRateCorrection external clock rate correction value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   829   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   830   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   831  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   832  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   833  /** \brief Sets FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   834   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   835   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   836   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   837   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   838  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   839  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   840  /** \brief Sets FIFO filter configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   841   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   842   * \param rejectedFrameId rejected frameId by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   843   * \param filteredCycleNumber filtered cycle number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   844   * \param fifoNullFramesRejected null frames rejection selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   845   * \param frameIdFilter filtered frameid by FIFO.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   846   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   847   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   848  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   849  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   850  /** \brief Sets FIFO configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   851   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   852   * \param receiveChannel FIFO receive channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   853   * \param staticFifoDisabled static FIFO selection.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   854   * \param fifoDepth FIFO depth.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   855   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   856   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   857  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   858  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   859  /** \brief Sets first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   860   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   861   * \param firstDynamicBuffer first dynamic buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   862   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   863   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   864  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   865  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   866  /** \brief Sets startup or wakeup listen timeouts.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   867   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   868   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   869   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   870   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   871   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   872  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   873  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   874  /** \brief Sets the maximum cold start attempts for active state.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   875   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   876   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   877   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   878   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   879  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   880  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   881  /** \brief Sets max limit correction values.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   882   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   883   * \param maxOffsetCorrection maximum offset correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   884   * \param maxRateCorrection maximum rate correction.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   885   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   886   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   887  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   888  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   889  /** \brief Sets maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   890   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   891   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   892   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   893   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   894  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   895  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   896  /** \brief Sets number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   897   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   898   * \param numberOfMessageBuffers number of message buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   899   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   900   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   901  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   902  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   903  /** \brief Sets Message Handler configurations.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   904   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   905   * \param staticFramepayload payload length of static frames in double bytes.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   906   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   907   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   908   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   909  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   910  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   911  /** \brief Sets network start Idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   912   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   913   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   914   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   915   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   916  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   917  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   918  /** \brief Sets network management vector length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   919   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   920   * \param networkVectorLength length of network management vector.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   921   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   922   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   923  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   924  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   925  /** \brief Sets channels connected to node.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   926   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   927   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   928   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   929   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   930   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   931  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   932  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   933  /** \brief Sets offset correction starting point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   934   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   935   * \param correctionOffset offset correction start point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   936   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   937   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   938  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   939  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   940  /** \brief requests to receive the frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   941   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   942   * \param receiveRequested whether frame to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   943   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   944   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   945  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   946  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   947  /** \brief Sets receive wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   948   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   949   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   950   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   951   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   952   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   953   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   954  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint8 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   955  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   956  /** \brief sets buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   957   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   958   * \param bufferIndex buffer number in which frame is received.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   959   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   960   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   961  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   962  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   963  /** \brief Sets slots action points.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   964   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   965   * \param staticActionPoint static slots and symbol window action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   966   * \param dynamicActionPoint dynamic slots action point.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   967   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   968   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   969  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   970  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   971  /** \brief Sets static slots count and length.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   972   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   973   * \param staticSlotLength duration of static slot in macroticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   974   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   975   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   976   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   978  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   979  /** \brief Sets sample point for strobing.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   981   * \param strobePosition strobing sample count.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   982   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   983   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   984  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   985  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   986  /** \brief Sets channels which transmits symbols.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   987   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   988   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   989   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   990   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   991   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   993  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   994  /** \brief Sets the transmit slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   996   * \param transmissionSlotMode transmission slot mode.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   997   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   998   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1001  /** \brief Sets transmission start time duration.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1003   * \param transmissionStartTime transmission start time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1004   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1005   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1006  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint16 transmissionStartTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1007  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1008  /** \brief Sets transfer request to send frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1009   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1010   * \param transferRequested whether transfer requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1011   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1012   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1013  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1014  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1015  /** \brief Sets transmit wakeup times.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1016   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1017   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1018   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1019   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1020   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1021   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1022  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1023  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1024  /** \brief Configures transmitted frames for startup and synchronization.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1025   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1026   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1027   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1028   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1029   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1030  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1031  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1032  /** \brief Sets the transmit buffer number.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1033   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1034   * \param bufferIndex buffer number in which frame is sent.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1035   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1036   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1037  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1038  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1039  /** \brief Swaps the shadow and Host output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1040   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1041   * \param swapRequested whether swap is requested or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1042   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1043   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1044  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1045  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1046  /** \brief Sets the cluster wakeup channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1047   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1048   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1049   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1050   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1051  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1052  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1053  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1054  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1055  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1056   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1057  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1058  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1059  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1060  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1061  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1062  /** \brief requests to receive data from message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1064   * \param dataReceived whether data to be received or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1065   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1066   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1068  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1069  /** \brief sets the bit to send data in  frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1071   * \param dataTransfered whether data transfered or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1072   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1073   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1074  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1075  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1076  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1077  /*-------------------------Global Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1078  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1079  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1080  /** \brief Calculate and returns the CRC for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1081   * \param payloadLength payload length configured for frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1082   * \param frameId slot id
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1083   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1084   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1085   * \return calculated CRC value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1086   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1087  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1088  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1089  /** \brief Reads the received data from output registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1090   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1091   * \param data pointer to received data buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1092   * \param payloadLength payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1093   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1094   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1095  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1096  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1097  /** \brief Reads header and data from output buffers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1098   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1099   * \param header header received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1100   * \param data data received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1101   * \param maxPayloadLength maximum payload length received in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1102   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1103   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1104  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1106  /** \brief Writes header and data to Input buffers and set the slots.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1107   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1108   * \param header Header section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1109   * \param data data section of message buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1110   * \param slotConfig pointer slot allocation configuration structure.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1111   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1112   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1113  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1114  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1115  /** \brief Writes data section of a frame to input data registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1116   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1117   * \param data data segment in a frame.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1118   * \param payloadLength payload length configured for slot buffer.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1119   * \return None
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1120   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1121  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1123  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1125  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1126  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1127  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1129  /** \brief Gets the FIFO index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1130   * \param eray pointer to ERAY module registers.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1131   * \return FIFO buffer index.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1132   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1133  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1134  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1135  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1136  /*---------------------Inline Function Implementations------------------------*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1137  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1138  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1139  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1140  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1141      eray->EIR.U = errorFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1142  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1145  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1146  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1147      eray->SIR.U = statusFlag;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1148  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1150  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1151  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1152  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1153      // Run Mode Clock divider to 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1154      eray->CLC.U = 0x00000100;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1155  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1156      // ensure that write access finished before leaving this function
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1157      if (eray->CLC.U)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1158      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1159  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1160  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1161  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1162  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1163  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1164      Ifx_ERAY_EIR interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1165      interruptFlags.U = eray->EIR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1166      return interruptFlags;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1167  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1168  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1169  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1170  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1171  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1172      return eray->MRC.B.FFB;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1173  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1175  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1176  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1177  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1178      Ifx_ERAY_FSR fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1179      fifoStatus.U = eray->FSR.U;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1180      return fifoStatus;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1181  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1182  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1184  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1185  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.h	  1186      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	ld.bu	d15,[a15]
.L208:
	jnz.t	d15:7,.L20
.L403:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   282      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   283  }
	ret
.L183:
	
__IfxEray_setSlot_function_end:
	.size	IfxEray_setSlot,__IfxEray_setSlot_function_end-IfxEray_setSlot
.L107:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_writeData',code,cluster('IfxEray_writeData')
	.sect	'.text.IfxEray.IfxEray_writeData'
	.align	2
	
	.global	IfxEray_writeData

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   284  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   285  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   286  void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength)
; Function IfxEray_writeData
.L48:
IfxEray_writeData:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   287  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   288      if (data != NULL_PTR)
	jz.a	a5,.L21
.L213:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   289      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   290          uint16 length = (payloadLength + 1) / 2;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   291          uint8  index;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   292  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   293          for (index = 0; index < length; index++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   294          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   295              eray->WRDS_1S[index].U = *data++;
	add	d4,#1
	lea	a15,[a4]1024
.L248:
	sha	d4,#-1
.L408:
	mov	d15,#0
	j	.L22
.L23:
	add	d15,#1
	ld.w	d0,[a5+]
.L249:
	extr.u	d15,d15,#0,#8
	st.w	[a15+],d0
.L22:
	jlt.u	d15,d4,.L23
.L21:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   296          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   297      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Eray\Std\IfxEray.c	   298  }
	ret
.L209:
	
__IfxEray_writeData_function_end:
	.size	IfxEray_writeData,__IfxEray_writeData_function_end-IfxEray_writeData
.L112:
	; End of function
	
	.calls	'IfxEray_readFrame','IfxEray_readData'
	.calls	'IfxEray_setSlot','IfxEray_calcHeaderCrc'
	.calls	'IfxEray_setSlot','IfxEray_writeData'
	.calls	'IfxEray_setMessageBufferInterruptDestination','.cocofun_4'
	.calls	'IfxEray_setNewDataInterruptDestination','.cocofun_4'
	.calls	'IfxEray_calcHeaderCrc','',0
	.calls	'IfxEray_changePocState','',0
	.calls	'IfxEray_clearAllFlags','',0
	.calls	'IfxEray_enableInterruptLines','',0
	.calls	'IfxEray_readData','',0
	.calls	'IfxEray_readFrame','',0
	.calls	'IfxEray_resetModule','',0
	.calls	'IfxEray_setMessageBufferInterruptDestination','',0
	.calls	'.cocofun_4','',0
	.calls	'IfxEray_setNewDataInterruptDestination','',0
	.calls	'IfxEray_setPocReady','',0
	.calls	'IfxEray_setSlot','',0
	.calls	'IfxEray_writeData','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L50:
	.word	80974
	.half	3
	.word	.L51
	.byte	4
.L49:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L52
	.byte	2
	.byte	'unsigned long long int',0,8,7,3
	.byte	'void',0,4
	.word	212
	.byte	5
	.byte	'__ld64',0,3,1,110,19
	.word	186
	.byte	1,1,6
	.byte	'addr',0,1,110,32
	.word	218
	.byte	7,0,8
	.byte	'__st64',0,3,1,118,17,1,1,6
	.byte	'addr',0,1,118,30
	.word	218
	.byte	6
	.byte	'value',0,1,118,43
	.word	186
	.byte	7,0,2
	.byte	'unsigned int',0,4,7,2
	.byte	'int',0,4,5
.L125:
	.byte	2
	.byte	'unsigned char',0,1,8
.L150:
	.byte	2
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_P_OUT_Bits',0,3,231,2,16,4,10
	.byte	'P0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,239,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	361
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,3,129,2,16,4,10
	.byte	'PS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,191,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	677
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,3,110,16,4,10
	.byte	'MODREV',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,231,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1248
	.byte	4,2,35,0,0,13,4
	.word	322
	.byte	14,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,3,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	322
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,3,247,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1376
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,3,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	322
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,3,135,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1591
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,3,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	322
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,3,143,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1806
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,3,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	322
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,3,255,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2023
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,3,118,16,4,10
	.byte	'P0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,239,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2243
	.byte	4,2,35,0,0,13,24
	.word	322
	.byte	14,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,3,160,3,16,4,10
	.byte	'PD0',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	322
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	322
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	322
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	322
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,135,5,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2566
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,3,181,3,16,4,10
	.byte	'PD8',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	322
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	322
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	322
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	322
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,143,5,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2870
	.byte	4,2,35,0,0,13,8
	.word	322
	.byte	14,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,3,88,16,4,10
	.byte	'EN0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,223,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3195
	.byte	4,2,35,0,0,13,12
	.word	322
	.byte	14,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,3,138,3,16,4,10
	.byte	'PDIS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,255,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3535
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,3,253,2,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	339
	.byte	6,7,2,35,0,10
	.byte	'SEL9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'SEL10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	299
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,247,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3901
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,3,166,2,16,4,10
	.byte	'PS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,11,3,207,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4112
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,3,187,2,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,11,3,223,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4259
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,3,198,2,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,11,3,231,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4428
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,3,176,2,16,4,10
	.byte	'reserved_0',0,2
	.word	339
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,215,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4600
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,3,192,1,16,4,10
	.byte	'reserved_0',0,2
	.word	339
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	339
	.byte	12,0,2,35,2,0,11,3,159,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4775
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,3,213,1,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	8,0,2,35,3,0,11,3,175,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4949
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,3,224,1,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	4,0,2,35,3,0,11,3,183,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5123
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,3,203,1,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,167,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5299
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,3,209,2,16,4,10
	.byte	'PS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,3,199,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5455
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,3,235,1,16,4,10
	.byte	'reserved_0',0,2
	.word	339
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,151,4,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5788
	.byte	4,2,35,0,0,13,96
	.word	322
	.byte	14,95,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,3,82,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,11,3,215,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6145
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,3,45,16,4,10
	.byte	'EN0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,3,207,3,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6232
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,3,159,5,25,128,2,12
	.byte	'OUT',0
	.word	637
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	1208
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	1327
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	1367
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	1551
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	1766
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	1983
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	2203
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	1367
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	2517
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	2557
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	2830
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	3146
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	3186
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	3486
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	3526
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	3861
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	4072
	.byte	4,2,35,100,12
	.byte	'reserved_64',0
	.word	3186
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	4219
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	4388
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	4560
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	4735
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	4909
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	5083
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	5259
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	5415
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	5748
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	6096
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	6136
	.byte	96,3,35,152,1,12
	.byte	'ACCEN1',0
	.word	6192
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	6759
	.byte	4,3,35,252,1,0,15
	.word	6799
	.byte	4
	.word	7332
	.byte	16,2,54,9,1,17
	.byte	'IfxPort_InputMode_undefined',0,127,17
	.byte	'IfxPort_InputMode_noPullDevice',0,0,17
	.byte	'IfxPort_InputMode_pullDown',0,8,17
	.byte	'IfxPort_InputMode_pullUp',0,16,0,8
	.byte	'IfxPort_setPinModeInput',0,3,2,131,4,17,1,1,6
	.byte	'port',0,2,131,4,48
	.word	7337
	.byte	6
	.byte	'pinIndex',0,2,131,4,60
	.word	322
	.byte	6
	.byte	'mode',0,2,131,4,88
	.word	7342
	.byte	7,0,16,2,105,9,1,17
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,17
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,16,2,91,9,1,17
	.byte	'IfxPort_OutputIdx_general',0,128,1,17
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,17
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,17
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,17
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,17
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,17
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,17
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,8
	.byte	'IfxPort_setPinModeOutput',0,3,2,137,4,17,1,1,6
	.byte	'port',0,2,137,4,49
	.word	7337
	.byte	6
	.byte	'pinIndex',0,2,137,4,61
	.word	322
	.byte	6
	.byte	'mode',0,2,137,4,90
	.word	7547
	.byte	6
	.byte	'index',0,2,137,4,114
	.word	7616
	.byte	7,0,16,2,131,1,9,4,17
	.byte	'IfxPort_State_notChanged',0,0,17
	.byte	'IfxPort_State_high',0,1,17
	.byte	'IfxPort_State_low',0,128,128,4,17
	.byte	'IfxPort_State_toggled',0,129,128,4,0,8
	.byte	'IfxPort_setPinState',0,3,2,143,4,17,1,1,6
	.byte	'port',0,2,143,4,44
	.word	7337
	.byte	6
	.byte	'pinIndex',0,2,143,4,56
	.word	322
	.byte	6
	.byte	'action',0,2,143,4,80
	.word	7929
	.byte	7,0,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,5,45,16,4,10
	.byte	'SRPN',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'ECC',0,1
	.word	322
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	3,0,2,35,2,10
	.byte	'SRR',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,5,70,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8110
	.byte	4,2,35,0,0,15
	.word	8400
	.byte	4
	.word	8439
	.byte	8
	.byte	'IfxSrc_clearRequest',0,3,4,230,1,17,1,1,6
	.byte	'src',0,4,230,1,60
	.word	8444
	.byte	7,0,9
	.byte	'_Ifx_ERAY_CLC_Bits',0,7,133,1,16,4,10
	.byte	'DISR',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'RMC',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,11,7,204,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8492
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_CUST1_Bits',0,7,156,1,16,4,10
	.byte	'INT0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'OEN',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'IEN',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'IBFS',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'IBF1PAG',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	322
	.byte	2,1,2,35,0,10
	.byte	'IBF2PAG',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'RISA',0,1
	.word	322
	.byte	2,4,2,35,1,10
	.byte	'RISB',0,1
	.word	322
	.byte	2,2,2,35,1,10
	.byte	'STPWTS',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,7,220,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8688
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ID_Bits',0,7,211,3,16,4,10
	.byte	'MODREV',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,7,164,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8973
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_CUST3_Bits',0,7,173,1,16,4,10
	.byte	'TO',0,4
	.word	299
	.byte	32,0,2,35,0,0,11,7,228,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9096
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_TEST1_Bits',0,7,193,12,16,4,10
	.byte	'WRTEN',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ELBE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'TMC',0,1
	.word	322
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'AOA',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'AOB',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	6,0,2,35,1,10
	.byte	'RXA',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'RXB',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TXA',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'TXB',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'TXENA',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'TXENB',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'CERA',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'CERB',0,1
	.word	322
	.byte	4,0,2,35,3,0,11,7,244,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9178
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_TEST2_Bits',0,7,215,12,16,4,10
	.byte	'RS',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'SSEL',0,1
	.word	322
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	339
	.byte	7,2,2,35,0,10
	.byte	'WRECC',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	299
	.byte	17,0,2,35,0,0,11,7,252,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9540
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_LCK_Bits',0,7,249,3,16,4,10
	.byte	'CLK',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'TMK',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,7,204,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9722
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_EIR_Bits',0,7,129,2,16,4,10
	.byte	'PEMC',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CNA',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SFBM',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SFO',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'CCF',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CCL',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EERR',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'RFO',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EFA',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'IIBA',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'IOBA',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MHF',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'EDA',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'LTVA',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TABA',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'EDB',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'LTVB',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TABB',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,132,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9841
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SIR_Bits',0,7,190,11,16,4,10
	.byte	'WST',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CAS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'CYCS',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXI',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'RXI',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'RFNE',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'RFCL',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NMVC',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TI0',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TI1',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TIBC',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TOBC',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SWE',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'SUCS',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBSI',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'SDS',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'WUPA',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MTSA',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	6,0,2,35,2,10
	.byte	'WUPB',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MTSB',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	6,0,2,35,3,0,11,7,172,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10255
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_EILS_Bits',0,7,231,1,16,4,10
	.byte	'PEMCL',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CNAL',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SFBML',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SFOL',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'CCFL',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CCLL',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EERRL',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'RFOL',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EFAL',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'IIBAL',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'IOBAL',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MHFL',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'EDAL',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'LTVAL',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TABAL',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'EDBL',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'LTVBL',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TABBL',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,252,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10679
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SILS_Bits',0,7,163,11,16,4,10
	.byte	'WSTL',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CASL',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'CYCSL',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXIL',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'RXIL',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'RFNEL',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'RFCLL',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NMVCL',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TI0L',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TI1L',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TIBCL',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TOBCL',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SWEL',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'SUCSL',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBSIL',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'SDSL',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'WUPAL',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MTSAL',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	6,0,2,35,2,10
	.byte	'WUPBL',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MTSBL',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	6,0,2,35,3,0,11,7,164,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11112
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_EIES_Bits',0,7,205,1,16,4,10
	.byte	'PEMCE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CNAE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SFBME',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SFOE',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'CCFE',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CCLE',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EERRE',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'RFOE',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EFAE',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'IIBAE',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'IOBAE',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MHFE',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'EDAE',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'LTVAE',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TABAE',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'EDBE',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'LTVBE',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TABBE',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,244,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11557
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_EIER_Bits',0,7,179,1,16,4,10
	.byte	'PEMCE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CNAE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SFBME',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SFOE',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'CCFE',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CCLE',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EERRE',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'RFOE',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EFAE',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'IIBAE',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'IOBAE',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MHFE',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'EDAE',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'LTVAE',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TABAE',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'EDBE',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'LTVBE',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TABBE',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,236,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11990
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SIES_Bits',0,7,136,11,16,4,10
	.byte	'WSTE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CASE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'CYCSE',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXIE',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'RXIE',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'RFNEE',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'RFCLE',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NMVCE',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TI0E',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TI1E',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TIBCE',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TOBCE',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SWEE',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'SUCSE',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBSIE',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'SDSE',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'WUPAE',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MTSAE',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	6,0,2,35,2,10
	.byte	'WUPBE',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MTSBE',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	6,0,2,35,3,0,11,7,156,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12423
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SIER_Bits',0,7,237,10,16,4,10
	.byte	'WSTE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CASE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'CYCSE',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXIE',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'RXIE',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'RFNEE',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'RFCLE',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NMVCE',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TI0E',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TI1E',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TIBCE',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TOBCE',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SWEE',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'SUCSE',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBSIE',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'SDSE',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'WUPAE',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MTSAE',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	6,0,2,35,2,10
	.byte	'WUPBE',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MTSBE',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	6,0,2,35,3,0,11,7,148,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12868
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ILE_Bits',0,7,219,3,16,4,10
	.byte	'EINT0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'EINT1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,11,7,172,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13313
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_T0C_Bits',0,7,171,12,16,4,10
	.byte	'T0RC',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'T0MS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	6,0,2,35,0,10
	.byte	'T0CC',0,1
	.word	322
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'T0MO',0,2
	.word	339
	.byte	14,2,2,35,2,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,228,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13435
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_T1C_Bits',0,7,183,12,16,4,10
	.byte	'T1RC',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'T1MS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	339
	.byte	14,0,2,35,0,10
	.byte	'T1MC',0,2
	.word	339
	.byte	14,2,2,35,2,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,236,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13633
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_STPW1_Bits',0,7,217,11,16,4,10
	.byte	'ESWT',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'SWMS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'EDGE',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SSWT',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'EETP',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'EINT0',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EINT1',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'SCCV',0,1
	.word	322
	.byte	6,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'SMTV',0,2
	.word	339
	.byte	14,2,2,35,2,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,180,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13792
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_STPW2_Bits',0,7,234,11,16,4,10
	.byte	'SSCVA',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'SSCVB',0,2
	.word	339
	.byte	11,5,2,35,2,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,188,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14074
	.byte	4,2,35,0,0,13,44
	.word	322
	.byte	14,43,0,9
	.byte	'_Ifx_ERAY_SUCC1_Bits',0,7,243,11,16,4,10
	.byte	'CMD',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	3,1,2,35,0,10
	.byte	'PBSY',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TXST',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TXSY',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'CSA',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'PTA',0,1
	.word	322
	.byte	5,3,2,35,2,10
	.byte	'WUCS',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'TSM',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'HCSE',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MTSA',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MTSB',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'CCHA',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'CCHB',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	4,0,2,35,3,0,11,7,196,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14231
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SUCC2_Bits',0,7,136,12,16,4,10
	.byte	'LT',0,4
	.word	299
	.byte	21,11,2,35,0,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	3,0,2,35,2,10
	.byte	'LTN',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	4,0,2,35,3,0,11,7,204,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14571
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SUCC3_Bits',0,7,145,12,16,4,10
	.byte	'WCP',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'WCF',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,11,7,212,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14714
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NEMC_Bits',0,7,183,9,16,4,10
	.byte	'NML',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,11,7,140,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14834
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_PRTC1_Bits',0,7,130,10,16,4,10
	.byte	'TSST',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'CASM',0,2
	.word	339
	.byte	7,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SPP',0,1
	.word	322
	.byte	2,2,2,35,1,10
	.byte	'BRP',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'RXW',0,2
	.word	339
	.byte	9,7,2,35,2,10
	.byte	'reserved_25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'RWP',0,1
	.word	322
	.byte	6,0,2,35,3,0,11,7,204,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14938
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_PRTC2_Bits',0,7,143,10,16,4,10
	.byte	'RXI',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'RXL',0,1
	.word	322
	.byte	6,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'TXI',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'TXL',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,212,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15144
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MHDC_Bits',0,7,188,5,16,4,10
	.byte	'SFDL',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	339
	.byte	9,0,2,35,0,10
	.byte	'SLT',0,2
	.word	339
	.byte	13,3,2,35,2,10
	.byte	'reserved_29',0,1
	.word	322
	.byte	3,0,2,35,3,0,11,7,132,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15340
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC01_Bits',0,7,209,2,16,4,10
	.byte	'UT',0,4
	.word	299
	.byte	20,12,2,35,0,10
	.byte	'reserved_20',0,2
	.word	339
	.byte	12,0,2,35,2,0,11,7,188,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15483
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC02_Bits',0,7,216,2,16,4,10
	.byte	'MPC',0,2
	.word	339
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'SNM',0,1
	.word	322
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	339
	.byte	12,0,2,35,2,0,11,7,196,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15589
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC03_Bits',0,7,225,2,16,4,10
	.byte	'UIOA',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'UIOB',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'MIOA',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MIOB',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,204,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15734
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC04_Bits',0,7,236,2,16,4,10
	.byte	'NIT',0,2
	.word	339
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'OCS',0,2
	.word	339
	.byte	14,2,2,35,2,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,212,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15913
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC05_Bits',0,7,245,2,16,4,10
	.byte	'DCA',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'DCB',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'CDD',0,1
	.word	322
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	3,0,2,35,2,10
	.byte	'DEC',0,1
	.word	322
	.byte	8,0,2,35,3,0,11,7,220,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16058
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC06_Bits',0,7,255,2,16,4,10
	.byte	'ASR',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'MOD',0,2
	.word	339
	.byte	11,5,2,35,2,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,228,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16210
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC07_Bits',0,7,136,3,16,4,10
	.byte	'SSL',0,2
	.word	339
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	6,0,2,35,1,10
	.byte	'NSS',0,2
	.word	339
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	6,0,2,35,3,0,11,7,236,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16355
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC08_Bits',0,7,145,3,16,4,10
	.byte	'MSL',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	339
	.byte	10,0,2,35,0,10
	.byte	'NMS',0,2
	.word	339
	.byte	13,3,2,35,2,10
	.byte	'reserved_29',0,1
	.word	322
	.byte	3,0,2,35,3,0,11,7,244,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16500
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC09_Bits',0,7,154,3,16,4,10
	.byte	'APO',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'MAPO',0,1
	.word	322
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	322
	.byte	3,0,2,35,1,10
	.byte	'DSI',0,1
	.word	322
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	339
	.byte	14,0,2,35,2,0,11,7,252,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16644
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC10_Bits',0,7,165,3,16,4,10
	.byte	'MOC',0,2
	.word	339
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'MRC',0,2
	.word	339
	.byte	11,5,2,35,2,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,132,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16827
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_GTUC11_Bits',0,7,174,3,16,4,10
	.byte	'EOCC',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	6,0,2,35,0,10
	.byte	'ERCC',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	6,0,2,35,1,10
	.byte	'EOC',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'ERC',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,140,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16972
	.byte	4,2,35,0,0,13,52
	.word	322
	.byte	14,51,0,9
	.byte	'_Ifx_ERAY_CCSV_Bits',0,7,115,16,4,10
	.byte	'POCS',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'FSI',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'HRQ',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'SLM',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	2,4,2,35,1,10
	.byte	'CSNI',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'CSAI',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'CSI',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'WSV',0,1
	.word	322
	.byte	3,5,2,35,2,10
	.byte	'RCA',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'PSL',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,196,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17203
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_CCEV_Bits',0,7,105,16,4,10
	.byte	'CCFC',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	2,2,2,35,0,10
	.byte	'ERRM',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'PTAC',0,1
	.word	322
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	299
	.byte	19,0,2,35,0,0,11,7,188,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17491
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SCV_Bits',0,7,214,10,16,4,10
	.byte	'SCCA',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'SCCB',0,2
	.word	339
	.byte	11,5,2,35,2,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,132,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17650
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MTCCV_Bits',0,7,134,7,16,4,10
	.byte	'MTV',0,2
	.word	339
	.byte	14,2,2,35,0,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'CCV',0,1
	.word	322
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	339
	.byte	10,0,2,35,2,0,11,7,196,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17794
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_RCV_Bits',0,7,155,10,16,4,10
	.byte	'RCV',0,2
	.word	339
	.byte	12,4,2,35,0,10
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,11,7,220,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17938
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_OCV_Bits',0,7,230,9,16,4,10
	.byte	'OCV',0,4
	.word	299
	.byte	19,13,2,35,0,10
	.byte	'reserved_19',0,2
	.word	339
	.byte	13,0,2,35,2,0,11,7,180,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18042
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SFS_Bits',0,7,223,10,16,4,10
	.byte	'VSAE',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'VSAO',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'VSBE',0,1
	.word	322
	.byte	4,4,2,35,1,10
	.byte	'VSBO',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'MOCS',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'OCLR',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MRCS',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'RCLR',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	339
	.byte	12,0,2,35,2,0,11,7,140,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18146
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_SWNIT_Bits',0,7,153,12,16,4,10
	.byte	'SESA',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'SBSA',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'TCSA',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SESB',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'SBSB',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'TCSB',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MTSA',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MTSB',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'SENA',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'SBNA',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'SENB',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'SBNB',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,11,7,220,19,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18363
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ACS_Bits',0,7,88,16,4,10
	.byte	'VFRA',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'SEDA',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'CEDA',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'CIA',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'SBVA',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	322
	.byte	3,0,2,35,0,10
	.byte	'VFRB',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'SEDB',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'CEDB',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'CIB',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SBVB',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	299
	.byte	19,0,2,35,0,0,11,7,180,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18646
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ESID_Bits',0,7,161,2,16,4,10
	.byte	'EID',0,2
	.word	339
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	4,2,2,35,1,10
	.byte	'RXEA',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'RXEB',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,7,148,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18914
	.byte	4,2,35,0,0,13,60
	.word	19034
	.byte	14,14,0,9
	.byte	'_Ifx_ERAY_OSID_Bits',0,7,237,9,16,4,10
	.byte	'OID',0,2
	.word	339
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	4,2,2,35,1,10
	.byte	'RXOA',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'RXOB',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,7,188,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19083
	.byte	4,2,35,0,0,13,60
	.word	19203
	.byte	14,14,0,9
	.byte	'_Ifx_ERAY_NMV_Bits',0,7,190,9,16,4,10
	.byte	'NM',0,4
	.word	299
	.byte	32,0,2,35,0,0,11,7,148,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19252
	.byte	4,2,35,0,0,13,12
	.word	19292
	.byte	14,2,0,13,196,2
	.word	322
	.byte	14,195,2,0,9
	.byte	'_Ifx_ERAY_MRC_Bits',0,7,231,5,16,4,10
	.byte	'FDB',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'FFB',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'LCB',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'SEC',0,1
	.word	322
	.byte	2,6,2,35,3,10
	.byte	'SPLM',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,156,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19352
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_FRF_Bits',0,7,178,2,16,4,10
	.byte	'CH',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'FID',0,2
	.word	339
	.byte	11,3,2,35,0,10
	.byte	'reserved_13',0,1
	.word	322
	.byte	3,0,2,35,1,10
	.byte	'CYF',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'RSS',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'RNF',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	322
	.byte	7,0,2,35,3,0,11,7,164,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19517
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_FRFM_Bits',0,7,190,2,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'MFID',0,2
	.word	339
	.byte	11,3,2,35,0,10
	.byte	'reserved_13',0,4
	.word	299
	.byte	19,0,2,35,0,0,11,7,172,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19703
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_FCL_Bits',0,7,171,2,16,4,10
	.byte	'CL',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,11,7,156,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19831
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MHDS_Bits',0,7,212,5,16,4,10
	.byte	'EIBF',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'EOBF',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'EMR',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ETBF1',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'ETBF2',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'FMBD',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MFMB',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'CRAM',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'FMB',0,1
	.word	322
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MBT',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MBU',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,148,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19933
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_LDTS_Bits',0,7,129,4,16,4,10
	.byte	'LDTA',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'LDTB',0,2
	.word	339
	.byte	11,5,2,35,2,10
	.byte	'reserved_27',0,1
	.word	322
	.byte	5,0,2,35,3,0,11,7,212,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20243
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_FSR_Bits',0,7,198,2,16,4,10
	.byte	'RFNE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'RFCL',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'RFO',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	322
	.byte	5,0,2,35,0,10
	.byte	'RFFL',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,11,7,180,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20388
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MHDF_Bits',0,7,197,5,16,4,10
	.byte	'SNUA',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'SNUB',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'FNFA',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'FNFB',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TBFA',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'TBFB',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'TNSA',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'TNSB',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'WAHP',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	299
	.byte	23,0,2,35,0,0,11,7,140,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20562
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_TXRQ1_Bits',0,7,226,12,16,4,10
	.byte	'TXR0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'TXR1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'TXR2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXR3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TXR4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'TXR5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'TXR6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'TXR7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TXR8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TXR9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TXR10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TXR11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'TXR12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'TXR13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'TXR14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'TXR15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'TXR16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'TXR17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TXR18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'TXR19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'TXR20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'TXR21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'TXR22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'TXR23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'TXR24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'TXR25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TXR26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'TXR27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'TXR28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'TXR29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'TXR30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'TXR31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,132,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20795
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_TXRQ2_Bits',0,7,135,13,16,4,10
	.byte	'TXR32',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'TXR33',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'TXR34',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXR35',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TXR36',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'TXR37',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'TXR38',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'TXR39',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TXR40',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TXR41',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TXR42',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TXR43',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'TXR44',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'TXR45',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'TXR46',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'TXR47',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'TXR48',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'TXR49',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TXR50',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'TXR51',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'TXR52',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'TXR53',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'TXR54',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'TXR55',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'TXR56',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'TXR57',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TXR58',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'TXR59',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'TXR60',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'TXR61',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'TXR62',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'TXR63',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,140,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21397
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_TXRQ3_Bits',0,7,172,13,16,4,10
	.byte	'TXR64',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'TXR65',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'TXR66',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXR67',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TXR68',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'TXR69',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'TXR70',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'TXR71',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TXR72',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TXR73',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TXR74',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TXR75',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'TXR76',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'TXR77',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'TXR78',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'TXR79',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'TXR80',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'TXR81',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TXR82',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'TXR83',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'TXR84',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'TXR85',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'TXR86',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'TXR87',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'TXR88',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'TXR89',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TXR90',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'TXR91',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'TXR92',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'TXR93',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'TXR94',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'TXR95',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,148,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22009
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_TXRQ4_Bits',0,7,209,13,16,4,10
	.byte	'TXR96',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'TXR97',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'TXR98',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'TXR99',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TXR100',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'TXR101',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'TXR102',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'TXR103',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TXR104',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TXR105',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'TXR106',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'TXR107',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'TXR108',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'TXR109',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'TXR110',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'TXR111',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'TXR112',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'TXR113',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'TXR114',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'TXR115',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'TXR116',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'TXR117',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'TXR118',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'TXR119',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'TXR120',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'TXR121',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'TXR122',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'TXR123',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'TXR124',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'TXR125',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'TXR126',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'TXR127',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,156,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22621
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDAT1_Bits',0,7,143,7,16,4,10
	.byte	'ND0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ND1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'ND2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ND3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'ND4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'ND5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'ND6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'ND7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'ND8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'ND9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'ND10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'ND11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'ND12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'ND13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'ND14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'ND15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'ND16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'ND17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'ND18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'ND19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'ND20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'ND21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'ND22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'ND23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'ND24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'ND25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'ND26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'ND27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'ND28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'ND29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'ND30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'ND31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,204,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23261
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDAT2_Bits',0,7,180,7,16,4,10
	.byte	'ND32',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ND33',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'ND34',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ND35',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'ND36',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'ND37',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'ND38',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'ND39',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'ND40',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'ND41',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'ND42',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'ND43',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'ND44',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'ND45',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'ND46',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'ND47',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'ND48',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'ND49',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'ND50',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'ND51',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'ND52',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'ND53',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'ND54',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'ND55',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'ND56',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'ND57',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'ND58',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'ND59',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'ND60',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'ND61',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'ND62',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'ND63',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,212,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23831
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDAT3_Bits',0,7,217,7,16,4,10
	.byte	'ND64',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ND65',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'ND66',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ND67',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'ND68',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'ND69',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'ND70',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'ND71',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'ND72',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'ND73',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'ND74',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'ND75',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'ND76',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'ND77',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'ND78',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'ND79',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'ND80',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'ND81',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'ND82',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'ND83',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'ND84',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'ND85',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'ND86',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'ND87',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'ND88',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'ND89',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'ND90',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'ND91',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'ND92',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'ND93',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'ND94',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'ND95',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,220,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24411
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDAT4_Bits',0,7,254,7,16,4,10
	.byte	'ND96',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ND97',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'ND98',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ND99',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'ND100',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'ND101',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'ND102',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'ND103',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'ND104',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'ND105',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'ND106',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'ND107',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'ND108',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'ND109',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'ND110',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'ND111',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'ND112',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'ND113',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'ND114',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'ND115',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'ND116',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'ND117',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'ND118',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'ND119',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'ND120',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'ND121',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'ND122',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'ND123',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'ND124',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'ND125',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'ND126',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'ND127',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,228,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24991
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MBSC1_Bits',0,7,168,4,16,4,10
	.byte	'MBC0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MBC1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MBC2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MBC3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MBC4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MBC5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MBC6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MBC7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MBC8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MBC9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MBC10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MBC11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MBC12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MBC13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBC14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MBC15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MBC16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MBC17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MBC18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MBC19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MBC20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MBC21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MBC22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MBC23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MBC24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MBC25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MBC26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MBC27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MBC28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MBC29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MBC30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MBC31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,228,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25599
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MBSC2_Bits',0,7,205,4,16,4,10
	.byte	'MBC32',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MBC33',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MBC34',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MBC35',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MBC36',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MBC37',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MBC38',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MBC39',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MBC40',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MBC41',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MBC42',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MBC43',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MBC44',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MBC45',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBC46',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MBC47',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MBC48',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MBC49',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MBC50',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MBC51',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MBC52',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MBC53',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MBC54',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MBC55',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MBC56',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MBC57',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MBC58',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MBC59',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MBC60',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MBC61',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MBC62',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MBC63',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,236,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26201
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MBSC3_Bits',0,7,242,4,16,4,10
	.byte	'MBC64',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MBC65',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MBC66',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MBC67',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MBC68',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MBC69',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MBC70',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MBC71',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MBC72',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MBC73',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MBC74',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MBC75',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MBC76',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MBC77',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBC78',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MBC79',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MBC80',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MBC81',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MBC82',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MBC83',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MBC84',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MBC85',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MBC86',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MBC87',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MBC88',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MBC89',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MBC90',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MBC91',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MBC92',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MBC93',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MBC94',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MBC95',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,244,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26813
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MBSC4_Bits',0,7,151,5,16,4,10
	.byte	'MBC96',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MBC97',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MBC98',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MBC99',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MBC100',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MBC101',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MBC102',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MBC103',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MBC104',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MBC105',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MBC106',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MBC107',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MBC108',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MBC109',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MBC110',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MBC111',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MBC112',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MBC113',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MBC114',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MBC115',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MBC116',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MBC117',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MBC118',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MBC119',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MBC120',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MBC121',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MBC122',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MBC123',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MBC124',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MBC125',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MBC126',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MBC127',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,252,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27425
	.byte	4,2,35,0,0,13,88
	.word	322
	.byte	14,87,0,9
	.byte	'_Ifx_ERAY_NDIC1_Bits',0,7,163,8,16,4,10
	.byte	'NDIP0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'NDIP1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'NDIP2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'NDIP3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'NDIP4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'NDIP5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'NDIP6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NDIP7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'NDIP8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'NDIP9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'NDIP10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'NDIP11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'NDIP12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'NDIP13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'NDIP14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'NDIP15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'NDIP16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'NDIP17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'NDIP18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'NDIP19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'NDIP20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'NDIP21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'NDIP22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'NDIP23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'NDIP24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'NDIP25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'NDIP26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'NDIP27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'NDIP28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'NDIP29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'NDIP30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'NDIP31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,236,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28074
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDIC2_Bits',0,7,200,8,16,4,10
	.byte	'NDIP32',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'NDIP33',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'NDIP34',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'NDIP35',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'NDIP36',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'NDIP37',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'NDIP38',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NDIP39',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'NDIP40',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'NDIP41',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'NDIP42',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'NDIP43',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'NDIP44',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'NDIP45',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'NDIP46',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'NDIP47',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'NDIP48',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'NDIP49',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'NDIP50',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'NDIP51',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'NDIP52',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'NDIP53',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'NDIP54',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'NDIP55',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'NDIP56',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'NDIP57',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'NDIP58',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'NDIP59',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'NDIP60',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'NDIP61',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'NDIP62',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'NDIP63',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,244,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28708
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDIC3_Bits',0,7,237,8,16,4,10
	.byte	'NDIP64',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'NDIP65',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'NDIP66',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'NDIP67',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'NDIP68',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'NDIP69',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'NDIP70',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NDIP71',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'NDIP72',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'NDIP73',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'NDIP74',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'NDIP75',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'NDIP76',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'NDIP77',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'NDIP78',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'NDIP79',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'NDIP80',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'NDIP81',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'NDIP82',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'NDIP83',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'NDIP84',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'NDIP85',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'NDIP86',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'NDIP87',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'NDIP88',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'NDIP89',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'NDIP90',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'NDIP91',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'NDIP92',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'NDIP93',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'NDIP94',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'NDIP95',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,252,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29352
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_NDIC4_Bits',0,7,146,9,16,4,10
	.byte	'NDIP96',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'NDIP97',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'NDIP98',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'NDIP99',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'NDIP100',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'NDIP101',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'NDIP102',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'NDIP103',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'NDIP104',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'NDIP105',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'NDIP106',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'NDIP107',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'NDIP108',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'NDIP109',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'NDIP110',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'NDIP111',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'NDIP112',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'NDIP113',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'NDIP114',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'NDIP115',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'NDIP116',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'NDIP117',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'NDIP118',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'NDIP119',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'NDIP120',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'NDIP121',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'NDIP122',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'NDIP123',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'NDIP124',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'NDIP125',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'NDIP126',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'NDIP127',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,132,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29996
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MSIC1_Bits',0,7,242,5,16,4,10
	.byte	'MSIP0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MSIP1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MSIP2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MSIP3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MSIP4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MSIP5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MSIP6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MSIP7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MSIP8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MSIP9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MSIP10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MSIP11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MSIP12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MSIP13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MSIP14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MSIP15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MSIP16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MSIP17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MSIP18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MSIP19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MSIP20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MSIP21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MSIP22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MSIP23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MSIP24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MSIP25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MSIP26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MSIP27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MSIP28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MSIP29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MSIP30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MSIP31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,164,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30668
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MSIC2_Bits',0,7,151,6,16,4,10
	.byte	'MSIP32',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MSIP33',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MSIP34',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MSIP35',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MSIP36',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MSIP37',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MSIP38',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MSIP39',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MSIP40',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MSIP41',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MSIP42',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MSIP43',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MSIP44',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MSIP45',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MSIP46',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MSIP47',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MSIP48',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MSIP49',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MSIP50',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MSIP51',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MSIP52',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MSIP53',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MSIP54',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MSIP55',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MSIP56',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MSIP57',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MSIP58',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MSIP59',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MSIP60',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MSIP61',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MSIP62',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MSIP63',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,172,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31302
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MSIC3_Bits',0,7,188,6,16,4,10
	.byte	'MSIP64',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MSIP65',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MSIP66',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MSIP67',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MSIP68',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MSIP69',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MSIP70',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MSIP71',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MSIP72',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MSIP73',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MSIP74',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MSIP75',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MSIP76',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MSIP77',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MSIP78',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MSIP79',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MSIP80',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MSIP81',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MSIP82',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MSIP83',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MSIP84',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MSIP85',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MSIP86',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MSIP87',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MSIP88',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MSIP89',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MSIP90',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MSIP91',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MSIP92',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MSIP93',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MSIP94',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MSIP95',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,180,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31946
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MSIC4_Bits',0,7,225,6,16,4,10
	.byte	'MSIP96',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MSIP97',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MSIP98',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'MSIP99',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'MSIP100',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'MSIP101',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'MSIP102',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MSIP103',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MSIP104',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'MSIP105',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'MSIP106',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'MSIP107',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MSIP108',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'MSIP109',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'MSIP110',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'MSIP111',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'MSIP112',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'MSIP113',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'MSIP114',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'MSIP115',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'MSIP116',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'MSIP117',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'MSIP118',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'MSIP119',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'MSIP120',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'MSIP121',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'MSIP122',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'MSIP123',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'MSIP124',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MSIP125',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'MSIP126',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'MSIP127',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,188,17,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32590
	.byte	4,2,35,0,0,13,40
	.word	322
	.byte	14,39,0,9
	.byte	'_Ifx_ERAY_CREL_Bits',0,7,145,1,16,4,10
	.byte	'DAY',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'MON',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'YEAR',0,1
	.word	322
	.byte	4,4,2,35,2,10
	.byte	'SUBSTEP',0,1
	.word	322
	.byte	4,0,2,35,2,10
	.byte	'STEP',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'REL',0,1
	.word	322
	.byte	4,0,2,35,3,0,11,7,212,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33271
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ENDN_Bits',0,7,155,2,16,4,10
	.byte	'ETV',0,4
	.word	299
	.byte	32,0,2,35,0,0,11,7,140,15,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33434
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_WRDS_Bits',0,7,246,13,16,4,10
	.byte	'MDWB0',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'MDWB1',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'MDWB2',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'MDWB3',0,1
	.word	322
	.byte	8,0,2,35,3,0,11,7,164,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33516
	.byte	4,2,35,0,0,13,128,2
	.word	33611
	.byte	14,63,0,9
	.byte	'_Ifx_ERAY_WRHS1_Bits',0,7,255,13,16,4,10
	.byte	'FID',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'CYC',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'CHA',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'CHB',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'CFG',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'PPIT',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'TXM',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MBI',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0
.L198:
	.byte	11,7,172,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33661
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_WRHS2_Bits',0,7,143,14,16,4,10
	.byte	'CRC',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'PLC',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	339
	.byte	9,0,2,35,2,0
.L201:
	.byte	11,7,180,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33919
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_WRHS3_Bits',0,7,152,14,16,4,10
	.byte	'DP',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,11,7,188,20,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34063
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_IBCM_Bits',0,7,187,3,16,4,10
	.byte	'LHSH',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'LDSH',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'STXRH',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	339
	.byte	13,0,2,35,0,10
	.byte	'LHSS',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'LDSS',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'STXRS',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,2
	.word	339
	.byte	13,0,2,35,2,0,11,7,148,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34168
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_IBCR_Bits',0,7,200,3,16,4,10
	.byte	'IBRH',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	339
	.byte	8,1,2,35,0,10
	.byte	'IBSYH',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'IBRS',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	339
	.byte	8,1,2,35,2,10
	.byte	'IBSYS',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,156,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34378
	.byte	4,2,35,0,0,13,232,1
	.word	322
	.byte	14,231,1,0,9
	.byte	'_Ifx_ERAY_RDDS_Bits',0,7,162,10,16,4,10
	.byte	'MDRB0',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'MDRB1',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'MDRB2',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'MDRB3',0,1
	.word	322
	.byte	8,0,2,35,3,0,11,7,228,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34567
	.byte	4,2,35,0,0,13,128,2
	.word	34662
	.byte	14,63,0,9
	.byte	'_Ifx_ERAY_RDHS1_Bits',0,7,171,10,16,4,10
	.byte	'FID',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'CYC',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'CHA',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'CHB',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'CFG',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'PPIT',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'TXM',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'MBI',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0
.L176:
	.byte	11,7,236,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34712
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_RDHS2_Bits',0,7,187,10,16,4,10
	.byte	'CRC',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'PLC',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'PLR',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0
.L179:
	.byte	11,7,244,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34970
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_RDHS3_Bits',0,7,198,10,16,4,10
	.byte	'DP',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	5,0,2,35,1,10
	.byte	'RCC',0,1
	.word	322
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'RCI',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'SFI',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'SYN',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'NFI',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'PPI',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'RES',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0
.L181:
	.byte	11,7,252,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35152
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_MBS_Bits',0,7,138,4,16,4,10
	.byte	'VFRA',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'VFRB',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SEOA',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SEOB',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'CEOA',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CEOB',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'SVOA',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'SVOB',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TCIA',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TCIB',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'ESA',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'ESB',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'MLST',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'FTA',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'FTB',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'CCS',0,1
	.word	322
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'RCIS',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'SFIS',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'SYNS',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'NFIS',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'PPIS',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'RESS',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,220,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35408
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_OBCM_Bits',0,7,196,9,16,4,10
	.byte	'RHSS',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'RDSS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	339
	.byte	14,0,2,35,0,10
	.byte	'RHSH',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'RDSH',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	339
	.byte	14,0,2,35,2,0,11,7,156,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35890
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_OBCR_Bits',0,7,207,9,16,4,10
	.byte	'OBRS',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'VIEW',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'REQ',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	5,1,2,35,1,10
	.byte	'OBSYS',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'OBRH',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	339
	.byte	9,0,2,35,2,0,11,7,164,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36066
	.byte	4,2,35,0,0,13,216,2
	.word	322
	.byte	14,215,2,0,9
	.byte	'_Ifx_ERAY_OTSS_Bits',0,7,247,9,16,4,10
	.byte	'OTGB0',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	6,0,2,35,0,10
	.byte	'OTGB1',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	6,0,2,35,1,10
	.byte	'OTGB2',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	339
	.byte	15,0,2,35,2,0,11,7,196,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36292
	.byte	4,2,35,0,0,13,116
	.word	322
	.byte	14,115,0,9
	.byte	'_Ifx_ERAY_OCS_Bits',0,7,220,9,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	2,0,2,35,3,0,11,7,172,18,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36487
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_KRSTCLR_Bits',0,7,242,3,16,4,10
	.byte	'CLR',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	299
	.byte	31,0,2,35,0,0,11,7,196,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36648
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_KRST1_Bits',0,7,235,3,16,4,10
	.byte	'RST',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	299
	.byte	31,0,2,35,0,0,11,7,188,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36755
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_KRST0_Bits',0,7,227,3,16,4,10
	.byte	'RST',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,11,7,180,16,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36860
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ACCEN1_Bits',0,7,82,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,11,7,172,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36984
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_ERAY_ACCEN0_Bits',0,7,45,16,4,10
	.byte	'EN0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	322
	.byte	1,0,2,35,3,0,11,7,164,14,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37074
	.byte	4,2,35,0,0,13,128,14
	.word	322
	.byte	14,255,13,0,9
	.byte	'_Ifx_ERAY',0,7,204,20,25,128,32,12
	.byte	'CLC',0
	.word	8648
	.byte	4,2,35,0,12
	.byte	'CUST1',0
	.word	8933
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	9056
	.byte	4,2,35,8,12
	.byte	'CUST3',0
	.word	9138
	.byte	4,2,35,12,12
	.byte	'TEST1',0
	.word	9500
	.byte	4,2,35,16,12
	.byte	'TEST2',0
	.word	9682
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	1367
	.byte	4,2,35,24,12
	.byte	'LCK',0
	.word	9801
	.byte	4,2,35,28,12
	.byte	'EIR',0
	.word	10215
	.byte	4,2,35,32,12
	.byte	'SIR',0
	.word	10639
	.byte	4,2,35,36,12
	.byte	'EILS',0
	.word	11072
	.byte	4,2,35,40,12
	.byte	'SILS',0
	.word	11517
	.byte	4,2,35,44,12
	.byte	'EIES',0
	.word	11950
	.byte	4,2,35,48,12
	.byte	'EIER',0
	.word	12383
	.byte	4,2,35,52,12
	.byte	'SIES',0
	.word	12828
	.byte	4,2,35,56,12
	.byte	'SIER',0
	.word	13273
	.byte	4,2,35,60,12
	.byte	'ILE',0
	.word	13395
	.byte	4,2,35,64,12
	.byte	'T0C',0
	.word	13593
	.byte	4,2,35,68,12
	.byte	'T1C',0
	.word	13752
	.byte	4,2,35,72,12
	.byte	'STPW1',0
	.word	14034
	.byte	4,2,35,76,12
	.byte	'STPW2',0
	.word	14182
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	14222
	.byte	44,2,35,84,12
	.byte	'SUCC1',0
	.word	14531
	.byte	4,3,35,128,1,12
	.byte	'SUCC2',0
	.word	14674
	.byte	4,3,35,132,1,12
	.byte	'SUCC3',0
	.word	14794
	.byte	4,3,35,136,1,12
	.byte	'NEMC',0
	.word	14898
	.byte	4,3,35,140,1,12
	.byte	'PRTC1',0
	.word	15104
	.byte	4,3,35,144,1,12
	.byte	'PRTC2',0
	.word	15300
	.byte	4,3,35,148,1,12
	.byte	'MHDC',0
	.word	15443
	.byte	4,3,35,152,1,12
	.byte	'reserved_9C',0
	.word	1367
	.byte	4,3,35,156,1,12
	.byte	'GTUC01',0
	.word	15549
	.byte	4,3,35,160,1,12
	.byte	'GTUC02',0
	.word	15694
	.byte	4,3,35,164,1,12
	.byte	'GTUC03',0
	.word	15873
	.byte	4,3,35,168,1,12
	.byte	'GTUC04',0
	.word	16018
	.byte	4,3,35,172,1,12
	.byte	'GTUC05',0
	.word	16170
	.byte	4,3,35,176,1,12
	.byte	'GTUC06',0
	.word	16315
	.byte	4,3,35,180,1,12
	.byte	'GTUC07',0
	.word	16460
	.byte	4,3,35,184,1,12
	.byte	'GTUC08',0
	.word	16604
	.byte	4,3,35,188,1,12
	.byte	'GTUC09',0
	.word	16787
	.byte	4,3,35,192,1,12
	.byte	'GTUC10',0
	.word	16932
	.byte	4,3,35,196,1,12
	.byte	'GTUC11',0
	.word	17154
	.byte	4,3,35,200,1,12
	.byte	'reserved_CC',0
	.word	17194
	.byte	52,3,35,204,1,12
	.byte	'CCSV',0
	.word	17451
	.byte	4,3,35,128,2,12
	.byte	'CCEV',0
	.word	17610
	.byte	4,3,35,132,2,12
	.byte	'reserved_108',0
	.word	3186
	.byte	8,3,35,136,2,12
	.byte	'SCV',0
	.word	17754
	.byte	4,3,35,144,2,12
	.byte	'MTCCV',0
	.word	17898
	.byte	4,3,35,148,2,12
	.byte	'RCV',0
	.word	18002
	.byte	4,3,35,152,2,12
	.byte	'OCV',0
	.word	18106
	.byte	4,3,35,156,2,12
	.byte	'SFS',0
	.word	18323
	.byte	4,3,35,160,2,12
	.byte	'SWNIT',0
	.word	18606
	.byte	4,3,35,164,2,12
	.byte	'ACS',0
	.word	18874
	.byte	4,3,35,168,2,12
	.byte	'reserved_12C',0
	.word	1367
	.byte	4,3,35,172,2,12
	.byte	'ESID_1S',0
	.word	19074
	.byte	60,3,35,176,2,12
	.byte	'reserved_16C',0
	.word	1367
	.byte	4,3,35,236,2,12
	.byte	'OSID_1S',0
	.word	19243
	.byte	60,3,35,240,2,12
	.byte	'reserved_1AC',0
	.word	1367
	.byte	4,3,35,172,3,12
	.byte	'NMV_1S',0
	.word	19332
	.byte	12,3,35,176,3,12
	.byte	'reserved_1BC',0
	.word	19341
	.byte	196,2,3,35,188,3,12
	.byte	'MRC',0
	.word	19477
	.byte	4,3,35,128,6,12
	.byte	'FRF',0
	.word	19663
	.byte	4,3,35,132,6,12
	.byte	'FRFM',0
	.word	19791
	.byte	4,3,35,136,6,12
	.byte	'FCL',0
	.word	19893
	.byte	4,3,35,140,6,12
	.byte	'MHDS',0
	.word	20203
	.byte	4,3,35,144,6,12
	.byte	'LDTS',0
	.word	20348
	.byte	4,3,35,148,6,12
	.byte	'FSR',0
	.word	20522
	.byte	4,3,35,152,6,12
	.byte	'MHDF',0
	.word	20755
	.byte	4,3,35,156,6,12
	.byte	'TXRQ1',0
	.word	21357
	.byte	4,3,35,160,6,12
	.byte	'TXRQ2',0
	.word	21969
	.byte	4,3,35,164,6,12
	.byte	'TXRQ3',0
	.word	22581
	.byte	4,3,35,168,6,12
	.byte	'TXRQ4',0
	.word	23221
	.byte	4,3,35,172,6,12
	.byte	'NDAT1',0
	.word	23791
	.byte	4,3,35,176,6,12
	.byte	'NDAT2',0
	.word	24371
	.byte	4,3,35,180,6,12
	.byte	'NDAT3',0
	.word	24951
	.byte	4,3,35,184,6,12
	.byte	'NDAT4',0
	.word	25559
	.byte	4,3,35,188,6,12
	.byte	'MBSC1',0
	.word	26161
	.byte	4,3,35,192,6,12
	.byte	'MBSC2',0
	.word	26773
	.byte	4,3,35,196,6,12
	.byte	'MBSC3',0
	.word	27385
	.byte	4,3,35,200,6,12
	.byte	'MBSC4',0
	.word	28025
	.byte	4,3,35,204,6,12
	.byte	'reserved_350',0
	.word	28065
	.byte	88,3,35,208,6,12
	.byte	'NDIC1',0
	.word	28668
	.byte	4,3,35,168,7,12
	.byte	'NDIC2',0
	.word	29312
	.byte	4,3,35,172,7,12
	.byte	'NDIC3',0
	.word	29956
	.byte	4,3,35,176,7,12
	.byte	'NDIC4',0
	.word	30628
	.byte	4,3,35,180,7,12
	.byte	'MSIC1',0
	.word	31262
	.byte	4,3,35,184,7,12
	.byte	'MSIC2',0
	.word	31906
	.byte	4,3,35,188,7,12
	.byte	'MSIC3',0
	.word	32550
	.byte	4,3,35,192,7,12
	.byte	'MSIC4',0
	.word	33222
	.byte	4,3,35,196,7,12
	.byte	'reserved_3C8',0
	.word	33262
	.byte	40,3,35,200,7,12
	.byte	'CREL',0
	.word	33394
	.byte	4,3,35,240,7,12
	.byte	'ENDN',0
	.word	33476
	.byte	4,3,35,244,7,12
	.byte	'reserved_3F8',0
	.word	3186
	.byte	8,3,35,248,7,12
	.byte	'WRDS_1S',0
	.word	33651
	.byte	128,2,3,35,128,8,12
	.byte	'WRHS1',0
	.word	33879
	.byte	4,3,35,128,10,12
	.byte	'WRHS2',0
	.word	34023
	.byte	4,3,35,132,10,12
	.byte	'WRHS3',0
	.word	34128
	.byte	4,3,35,136,10,12
	.byte	'reserved_50C',0
	.word	1367
	.byte	4,3,35,140,10,12
	.byte	'IBCM',0
	.word	34338
	.byte	4,3,35,144,10,12
	.byte	'IBCR',0
	.word	34516
	.byte	4,3,35,148,10,12
	.byte	'reserved_518',0
	.word	34556
	.byte	232,1,3,35,152,10,12
	.byte	'RDDS_1S',0
	.word	34702
	.byte	128,2,3,35,128,12,12
	.byte	'RDHS1',0
	.word	34930
	.byte	4,3,35,128,14,12
	.byte	'RDHS2',0
	.word	35112
	.byte	4,3,35,132,14,12
	.byte	'RDHS3',0
	.word	35368
	.byte	4,3,35,136,14,12
	.byte	'MBS',0
	.word	35850
	.byte	4,3,35,140,14,12
	.byte	'OBCM',0
	.word	36026
	.byte	4,3,35,144,14,12
	.byte	'OBCR',0
	.word	36241
	.byte	4,3,35,148,14,12
	.byte	'reserved_718',0
	.word	36281
	.byte	216,2,3,35,152,14,12
	.byte	'OTSS',0
	.word	36438
	.byte	4,3,35,240,16,12
	.byte	'reserved_874',0
	.word	36478
	.byte	116,3,35,244,16,12
	.byte	'OCS',0
	.word	36608
	.byte	4,3,35,232,17,12
	.byte	'KRSTCLR',0
	.word	36715
	.byte	4,3,35,236,17,12
	.byte	'KRST1',0
	.word	36820
	.byte	4,3,35,240,17,12
	.byte	'KRST0',0
	.word	36944
	.byte	4,3,35,244,17,12
	.byte	'ACCEN1',0
	.word	37034
	.byte	4,3,35,248,17,12
	.byte	'ACCEN0',0
	.word	37604
	.byte	4,3,35,252,17,12
	.byte	'reserved_900',0
	.word	37644
	.byte	128,14,3,35,128,18,0,15
	.word	37655
.L119:
	.byte	4
	.word	39608
.L191:
	.byte	5
	.byte	'IfxEray_getInputBufferBusyHostStatus',0,3,6,160,9,20
	.word	322
	.byte	1,1
.L193:
	.byte	6
	.byte	'eray',0,6,160,9,67
	.word	39613
.L195:
	.byte	7,0
.L203:
	.byte	5
	.byte	'IfxEray_getInputBufferBusyShadowStatus',0,3,6,166,9,18
	.word	322
	.byte	1,1
.L205:
	.byte	6
	.byte	'eray',0,6,166,9,67
	.word	39613
.L207:
	.byte	7,0,18
	.word	223
	.byte	19
	.word	241
	.byte	7,0,18
	.word	256
	.byte	19
	.word	270
	.byte	19
	.word	283
	.byte	7,0,18
	.word	7467
	.byte	19
	.word	7499
	.byte	19
	.word	7513
	.byte	19
	.word	7531
	.byte	7,0,18
	.word	7833
	.byte	19
	.word	7866
	.byte	19
	.word	7880
	.byte	19
	.word	7898
	.byte	19
	.word	7912
	.byte	7,0,18
	.word	8032
	.byte	19
	.word	8060
	.byte	19
	.word	8074
	.byte	19
	.word	8092
	.byte	7,0,18
	.word	8449
	.byte	19
	.word	8477
	.byte	7,0
.L130:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L132:
	.byte	4
	.word	31262
.L140:
	.byte	4
	.word	28668
	.byte	18
	.word	39618
	.byte	19
	.word	39667
	.byte	7,0,18
	.word	39683
	.byte	19
	.word	39734
	.byte	7,0
.L146:
	.byte	16,6,247,1,9,1,17
	.byte	'IfxEray_PocCommand_notAccepted',0,0,17
	.byte	'IfxEray_PocCommand_config',0,1,17
	.byte	'IfxEray_PocCommand_ready',0,2,17
	.byte	'IfxEray_PocCommand_wakeup',0,3,17
	.byte	'IfxEray_PocCommand_run',0,4,17
	.byte	'IfxEray_PocCommand_allSlots',0,5,17
	.byte	'IfxEray_PocCommand_halt',0,6,17
	.byte	'IfxEray_PocCommand_freeze',0,7,17
	.byte	'IfxEray_PocCommand_sendMts',0,8,17
	.byte	'IfxEray_PocCommand_coldStart',0,9,17
	.byte	'IfxEray_PocCommand_reset',0,10,17
	.byte	'IfxEray_PocCommand_monitor',0,11,17
	.byte	'IfxEray_PocCommand_clearRam',0,12,0
.L162:
	.byte	4
	.word	39862
	.byte	20,6,245,2,9,8,10
	.byte	'frameId',0,2
	.word	339
	.byte	11,5,2,35,0,10
	.byte	'payloadLength',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'headerCrc',0,2
	.word	339
	.byte	11,5,2,35,4,10
	.byte	'reservedBit',0,1
	.word	322
	.byte	1,4,2,35,5,10
	.byte	'nullFrameIndicator',0,1
	.word	322
	.byte	1,3,2,35,5,10
	.byte	'syncFrame',0,1
	.word	322
	.byte	1,2,2,35,5,10
	.byte	'startupFrame',0,1
	.word	322
	.byte	1,1,2,35,5,10
	.byte	'cycleNumber',0,1
	.word	322
	.byte	7,1,2,35,6,10
	.byte	'payloadPreambleIndicator',0,1
	.word	322
	.byte	1,0,2,35,6,0
.L170:
	.byte	4
	.word	40300
.L173:
	.byte	2
	.byte	'short int',0,2,5,16,6,71,9,1,17
	.byte	'IfxEray_BufferDirection_receive',0,0,17
	.byte	'IfxEray_BufferDirection_transmit',0,1,0,16,6,195,2,9,1,17
	.byte	'IfxEray_TransmissionMode_continuous',0,0,17
	.byte	'IfxEray_TransmissionMode_singleShot',0,1,0,20,6,227,2,9,16,12
	.byte	'frameId',0
	.word	339
	.byte	2,2,35,0,12
	.byte	'cycleCode',0
	.word	322
	.byte	1,2,35,2,12
	.byte	'channelAFiltered',0
	.word	322
	.byte	1,2,35,3,12
	.byte	'channelBFiltered',0
	.word	322
	.byte	1,2,35,4,12
	.byte	'bufferDirection',0
	.word	40547
	.byte	1,2,35,5,12
	.byte	'transmitPayloadIndicatior',0
	.word	322
	.byte	1,2,35,6,12
	.byte	'transmissionMode',0
	.word	40622
	.byte	1,2,35,7,12
	.byte	'bufferServiceEnabled',0
	.word	322
	.byte	1,2,35,8,12
	.byte	'payloadLength',0
	.word	322
	.byte	1,2,35,9,12
	.byte	'dataPointer',0
	.word	339
	.byte	2,2,35,10,12
	.byte	'startupFrameIndicator',0
	.word	322
	.byte	1,2,35,12,12
	.byte	'syncFrameIndicator',0
	.word	322
	.byte	1,2,35,13,0,21
	.word	40705
.L185:
	.byte	4
	.word	41019
	.byte	21
	.word	39862
.L187:
	.byte	4
	.word	41029
	.byte	20,6,132,3,9,4,12
	.byte	'headerTransfered',0
	.word	322
	.byte	1,2,35,0,12
	.byte	'dataTransfered',0
	.word	322
	.byte	1,2,35,1,12
	.byte	'transferRequested',0
	.word	322
	.byte	1,2,35,2,12
	.byte	'bufferIndex',0
	.word	322
	.byte	1,2,35,3,0,21
	.word	41039
.L189:
	.byte	4
	.word	41144
	.byte	22
	.byte	'__wchar_t',0,8,1,1
	.word	40534
	.byte	22
	.byte	'__size_t',0,8,1,1
	.word	299
	.byte	22
	.byte	'__ptrdiff_t',0,8,1,1
	.word	315
	.byte	23,1,4
	.word	41209
	.byte	22
	.byte	'__codeptr',0,8,1,1
	.word	41211
	.byte	22
	.byte	'__intptr_t',0,8,1,1
	.word	315
	.byte	22
	.byte	'__uintptr_t',0,8,1,1
	.word	299
	.byte	16,9,60,9,1,17
	.byte	'IfxEray_NodeId_none',0,127,17
	.byte	'IfxEray_NodeId_a',0,0,17
	.byte	'IfxEray_NodeId_b',0,1,0,22
	.byte	'IfxEray_NodeId',0,9,65,3
	.word	41273
	.byte	22
	.byte	'Ifx_ERAY_ACCEN0_Bits',0,7,79,3
	.word	37074
	.byte	22
	.byte	'Ifx_ERAY_ACCEN1_Bits',0,7,85,3
	.word	36984
	.byte	22
	.byte	'Ifx_ERAY_ACS_Bits',0,7,102,3
	.word	18646
	.byte	22
	.byte	'Ifx_ERAY_CCEV_Bits',0,7,112,3
	.word	17491
	.byte	22
	.byte	'Ifx_ERAY_CCSV_Bits',0,7,130,1,3
	.word	17203
	.byte	22
	.byte	'Ifx_ERAY_CLC_Bits',0,7,142,1,3
	.word	8492
	.byte	22
	.byte	'Ifx_ERAY_CREL_Bits',0,7,153,1,3
	.word	33271
	.byte	22
	.byte	'Ifx_ERAY_CUST1_Bits',0,7,170,1,3
	.word	8688
	.byte	22
	.byte	'Ifx_ERAY_CUST3_Bits',0,7,176,1,3
	.word	9096
	.byte	22
	.byte	'Ifx_ERAY_EIER_Bits',0,7,202,1,3
	.word	11990
	.byte	22
	.byte	'Ifx_ERAY_EIES_Bits',0,7,228,1,3
	.word	11557
	.byte	22
	.byte	'Ifx_ERAY_EILS_Bits',0,7,254,1,3
	.word	10679
	.byte	22
	.byte	'Ifx_ERAY_EIR_Bits',0,7,152,2,3
	.word	9841
	.byte	22
	.byte	'Ifx_ERAY_ENDN_Bits',0,7,158,2,3
	.word	33434
	.byte	22
	.byte	'Ifx_ERAY_ESID_Bits',0,7,168,2,3
	.word	18914
	.byte	22
	.byte	'Ifx_ERAY_FCL_Bits',0,7,175,2,3
	.word	19831
	.byte	22
	.byte	'Ifx_ERAY_FRF_Bits',0,7,187,2,3
	.word	19517
	.byte	22
	.byte	'Ifx_ERAY_FRFM_Bits',0,7,195,2,3
	.word	19703
	.byte	22
	.byte	'Ifx_ERAY_FSR_Bits',0,7,206,2,3
	.word	20388
	.byte	22
	.byte	'Ifx_ERAY_GTUC01_Bits',0,7,213,2,3
	.word	15483
	.byte	22
	.byte	'Ifx_ERAY_GTUC02_Bits',0,7,222,2,3
	.word	15589
	.byte	22
	.byte	'Ifx_ERAY_GTUC03_Bits',0,7,233,2,3
	.word	15734
	.byte	22
	.byte	'Ifx_ERAY_GTUC04_Bits',0,7,242,2,3
	.word	15913
	.byte	22
	.byte	'Ifx_ERAY_GTUC05_Bits',0,7,252,2,3
	.word	16058
	.byte	22
	.byte	'Ifx_ERAY_GTUC06_Bits',0,7,133,3,3
	.word	16210
	.byte	22
	.byte	'Ifx_ERAY_GTUC07_Bits',0,7,142,3,3
	.word	16355
	.byte	22
	.byte	'Ifx_ERAY_GTUC08_Bits',0,7,151,3,3
	.word	16500
	.byte	22
	.byte	'Ifx_ERAY_GTUC09_Bits',0,7,162,3,3
	.word	16644
	.byte	22
	.byte	'Ifx_ERAY_GTUC10_Bits',0,7,171,3,3
	.word	16827
	.byte	22
	.byte	'Ifx_ERAY_GTUC11_Bits',0,7,184,3,3
	.word	16972
	.byte	22
	.byte	'Ifx_ERAY_IBCM_Bits',0,7,197,3,3
	.word	34168
	.byte	22
	.byte	'Ifx_ERAY_IBCR_Bits',0,7,208,3,3
	.word	34378
	.byte	22
	.byte	'Ifx_ERAY_ID_Bits',0,7,216,3,3
	.word	8973
	.byte	22
	.byte	'Ifx_ERAY_ILE_Bits',0,7,224,3,3
	.word	13313
	.byte	22
	.byte	'Ifx_ERAY_KRST0_Bits',0,7,232,3,3
	.word	36860
	.byte	22
	.byte	'Ifx_ERAY_KRST1_Bits',0,7,239,3,3
	.word	36755
	.byte	22
	.byte	'Ifx_ERAY_KRSTCLR_Bits',0,7,246,3,3
	.word	36648
	.byte	22
	.byte	'Ifx_ERAY_LCK_Bits',0,7,254,3,3
	.word	9722
	.byte	22
	.byte	'Ifx_ERAY_LDTS_Bits',0,7,135,4,3
	.word	20243
	.byte	22
	.byte	'Ifx_ERAY_MBS_Bits',0,7,165,4,3
	.word	35408
	.byte	22
	.byte	'Ifx_ERAY_MBSC1_Bits',0,7,202,4,3
	.word	25599
	.byte	22
	.byte	'Ifx_ERAY_MBSC2_Bits',0,7,239,4,3
	.word	26201
	.byte	22
	.byte	'Ifx_ERAY_MBSC3_Bits',0,7,148,5,3
	.word	26813
	.byte	22
	.byte	'Ifx_ERAY_MBSC4_Bits',0,7,185,5,3
	.word	27425
	.byte	22
	.byte	'Ifx_ERAY_MHDC_Bits',0,7,194,5,3
	.word	15340
	.byte	22
	.byte	'Ifx_ERAY_MHDF_Bits',0,7,209,5,3
	.word	20562
	.byte	22
	.byte	'Ifx_ERAY_MHDS_Bits',0,7,228,5,3
	.word	19933
	.byte	22
	.byte	'Ifx_ERAY_MRC_Bits',0,7,239,5,3
	.word	19352
	.byte	22
	.byte	'Ifx_ERAY_MSIC1_Bits',0,7,148,6,3
	.word	30668
	.byte	22
	.byte	'Ifx_ERAY_MSIC2_Bits',0,7,185,6,3
	.word	31302
	.byte	22
	.byte	'Ifx_ERAY_MSIC3_Bits',0,7,222,6,3
	.word	31946
	.byte	22
	.byte	'Ifx_ERAY_MSIC4_Bits',0,7,131,7,3
	.word	32590
	.byte	22
	.byte	'Ifx_ERAY_MTCCV_Bits',0,7,140,7,3
	.word	17794
	.byte	22
	.byte	'Ifx_ERAY_NDAT1_Bits',0,7,177,7,3
	.word	23261
	.byte	22
	.byte	'Ifx_ERAY_NDAT2_Bits',0,7,214,7,3
	.word	23831
	.byte	22
	.byte	'Ifx_ERAY_NDAT3_Bits',0,7,251,7,3
	.word	24411
	.byte	22
	.byte	'Ifx_ERAY_NDAT4_Bits',0,7,160,8,3
	.word	24991
	.byte	22
	.byte	'Ifx_ERAY_NDIC1_Bits',0,7,197,8,3
	.word	28074
	.byte	22
	.byte	'Ifx_ERAY_NDIC2_Bits',0,7,234,8,3
	.word	28708
	.byte	22
	.byte	'Ifx_ERAY_NDIC3_Bits',0,7,143,9,3
	.word	29352
	.byte	22
	.byte	'Ifx_ERAY_NDIC4_Bits',0,7,180,9,3
	.word	29996
	.byte	22
	.byte	'Ifx_ERAY_NEMC_Bits',0,7,187,9,3
	.word	14834
	.byte	22
	.byte	'Ifx_ERAY_NMV_Bits',0,7,193,9,3
	.word	19252
	.byte	22
	.byte	'Ifx_ERAY_OBCM_Bits',0,7,204,9,3
	.word	35890
	.byte	22
	.byte	'Ifx_ERAY_OBCR_Bits',0,7,217,9,3
	.word	36066
	.byte	22
	.byte	'Ifx_ERAY_OCS_Bits',0,7,227,9,3
	.word	36487
	.byte	22
	.byte	'Ifx_ERAY_OCV_Bits',0,7,234,9,3
	.word	18042
	.byte	22
	.byte	'Ifx_ERAY_OSID_Bits',0,7,244,9,3
	.word	19083
	.byte	22
	.byte	'Ifx_ERAY_OTSS_Bits',0,7,255,9,3
	.word	36292
	.byte	22
	.byte	'Ifx_ERAY_PRTC1_Bits',0,7,140,10,3
	.word	14938
	.byte	22
	.byte	'Ifx_ERAY_PRTC2_Bits',0,7,152,10,3
	.word	15144
	.byte	22
	.byte	'Ifx_ERAY_RCV_Bits',0,7,159,10,3
	.word	17938
	.byte	22
	.byte	'Ifx_ERAY_RDDS_Bits',0,7,168,10,3
	.word	34567
	.byte	22
	.byte	'Ifx_ERAY_RDHS1_Bits',0,7,184,10,3
	.word	34712
	.byte	22
	.byte	'Ifx_ERAY_RDHS2_Bits',0,7,195,10,3
	.word	34970
	.byte	22
	.byte	'Ifx_ERAY_RDHS3_Bits',0,7,211,10,3
	.word	35152
	.byte	22
	.byte	'Ifx_ERAY_SCV_Bits',0,7,220,10,3
	.word	17650
	.byte	22
	.byte	'Ifx_ERAY_SFS_Bits',0,7,234,10,3
	.word	18146
	.byte	22
	.byte	'Ifx_ERAY_SIER_Bits',0,7,133,11,3
	.word	12868
	.byte	22
	.byte	'Ifx_ERAY_SIES_Bits',0,7,160,11,3
	.word	12423
	.byte	22
	.byte	'Ifx_ERAY_SILS_Bits',0,7,187,11,3
	.word	11112
	.byte	22
	.byte	'Ifx_ERAY_SIR_Bits',0,7,214,11,3
	.word	10255
	.byte	22
	.byte	'Ifx_ERAY_STPW1_Bits',0,7,231,11,3
	.word	13792
	.byte	22
	.byte	'Ifx_ERAY_STPW2_Bits',0,7,240,11,3
	.word	14074
	.byte	22
	.byte	'Ifx_ERAY_SUCC1_Bits',0,7,133,12,3
	.word	14231
	.byte	22
	.byte	'Ifx_ERAY_SUCC2_Bits',0,7,142,12,3
	.word	14571
	.byte	22
	.byte	'Ifx_ERAY_SUCC3_Bits',0,7,150,12,3
	.word	14714
	.byte	22
	.byte	'Ifx_ERAY_SWNIT_Bits',0,7,168,12,3
	.word	18363
	.byte	22
	.byte	'Ifx_ERAY_T0C_Bits',0,7,180,12,3
	.word	13435
	.byte	22
	.byte	'Ifx_ERAY_T1C_Bits',0,7,190,12,3
	.word	13633
	.byte	22
	.byte	'Ifx_ERAY_TEST1_Bits',0,7,212,12,3
	.word	9178
	.byte	22
	.byte	'Ifx_ERAY_TEST2_Bits',0,7,223,12,3
	.word	9540
	.byte	22
	.byte	'Ifx_ERAY_TXRQ1_Bits',0,7,132,13,3
	.word	20795
	.byte	22
	.byte	'Ifx_ERAY_TXRQ2_Bits',0,7,169,13,3
	.word	21397
	.byte	22
	.byte	'Ifx_ERAY_TXRQ3_Bits',0,7,206,13,3
	.word	22009
	.byte	22
	.byte	'Ifx_ERAY_TXRQ4_Bits',0,7,243,13,3
	.word	22621
	.byte	22
	.byte	'Ifx_ERAY_WRDS_Bits',0,7,252,13,3
	.word	33516
	.byte	22
	.byte	'Ifx_ERAY_WRHS1_Bits',0,7,140,14,3
	.word	33661
	.byte	22
	.byte	'Ifx_ERAY_WRHS2_Bits',0,7,149,14,3
	.word	33919
	.byte	22
	.byte	'Ifx_ERAY_WRHS3_Bits',0,7,156,14,3
	.word	34063
	.byte	22
	.byte	'Ifx_ERAY_ACCEN0',0,7,169,14,3
	.word	37604
	.byte	22
	.byte	'Ifx_ERAY_ACCEN1',0,7,177,14,3
	.word	37034
	.byte	22
	.byte	'Ifx_ERAY_ACS',0,7,185,14,3
	.word	18874
	.byte	22
	.byte	'Ifx_ERAY_CCEV',0,7,193,14,3
	.word	17610
	.byte	22
	.byte	'Ifx_ERAY_CCSV',0,7,201,14,3
	.word	17451
	.byte	22
	.byte	'Ifx_ERAY_CLC',0,7,209,14,3
	.word	8648
	.byte	22
	.byte	'Ifx_ERAY_CREL',0,7,217,14,3
	.word	33394
	.byte	22
	.byte	'Ifx_ERAY_CUST1',0,7,225,14,3
	.word	8933
	.byte	22
	.byte	'Ifx_ERAY_CUST3',0,7,233,14,3
	.word	9138
	.byte	22
	.byte	'Ifx_ERAY_EIER',0,7,241,14,3
	.word	12383
	.byte	22
	.byte	'Ifx_ERAY_EIES',0,7,249,14,3
	.word	11950
	.byte	22
	.byte	'Ifx_ERAY_EILS',0,7,129,15,3
	.word	11072
	.byte	22
	.byte	'Ifx_ERAY_EIR',0,7,137,15,3
	.word	10215
	.byte	22
	.byte	'Ifx_ERAY_ENDN',0,7,145,15,3
	.word	33476
	.byte	22
	.byte	'Ifx_ERAY_ESID',0,7,153,15,3
	.word	19034
	.byte	22
	.byte	'Ifx_ERAY_FCL',0,7,161,15,3
	.word	19893
	.byte	22
	.byte	'Ifx_ERAY_FRF',0,7,169,15,3
	.word	19663
	.byte	22
	.byte	'Ifx_ERAY_FRFM',0,7,177,15,3
	.word	19791
	.byte	22
	.byte	'Ifx_ERAY_FSR',0,7,185,15,3
	.word	20522
	.byte	22
	.byte	'Ifx_ERAY_GTUC01',0,7,193,15,3
	.word	15549
	.byte	22
	.byte	'Ifx_ERAY_GTUC02',0,7,201,15,3
	.word	15694
	.byte	22
	.byte	'Ifx_ERAY_GTUC03',0,7,209,15,3
	.word	15873
	.byte	22
	.byte	'Ifx_ERAY_GTUC04',0,7,217,15,3
	.word	16018
	.byte	22
	.byte	'Ifx_ERAY_GTUC05',0,7,225,15,3
	.word	16170
	.byte	22
	.byte	'Ifx_ERAY_GTUC06',0,7,233,15,3
	.word	16315
	.byte	22
	.byte	'Ifx_ERAY_GTUC07',0,7,241,15,3
	.word	16460
	.byte	22
	.byte	'Ifx_ERAY_GTUC08',0,7,249,15,3
	.word	16604
	.byte	22
	.byte	'Ifx_ERAY_GTUC09',0,7,129,16,3
	.word	16787
	.byte	22
	.byte	'Ifx_ERAY_GTUC10',0,7,137,16,3
	.word	16932
	.byte	22
	.byte	'Ifx_ERAY_GTUC11',0,7,145,16,3
	.word	17154
	.byte	22
	.byte	'Ifx_ERAY_IBCM',0,7,153,16,3
	.word	34338
	.byte	22
	.byte	'Ifx_ERAY_IBCR',0,7,161,16,3
	.word	34516
	.byte	22
	.byte	'Ifx_ERAY_ID',0,7,169,16,3
	.word	9056
	.byte	22
	.byte	'Ifx_ERAY_ILE',0,7,177,16,3
	.word	13395
	.byte	22
	.byte	'Ifx_ERAY_KRST0',0,7,185,16,3
	.word	36944
	.byte	22
	.byte	'Ifx_ERAY_KRST1',0,7,193,16,3
	.word	36820
	.byte	22
	.byte	'Ifx_ERAY_KRSTCLR',0,7,201,16,3
	.word	36715
	.byte	22
	.byte	'Ifx_ERAY_LCK',0,7,209,16,3
	.word	9801
	.byte	22
	.byte	'Ifx_ERAY_LDTS',0,7,217,16,3
	.word	20348
	.byte	22
	.byte	'Ifx_ERAY_MBS',0,7,225,16,3
	.word	35850
	.byte	22
	.byte	'Ifx_ERAY_MBSC1',0,7,233,16,3
	.word	26161
	.byte	22
	.byte	'Ifx_ERAY_MBSC2',0,7,241,16,3
	.word	26773
	.byte	22
	.byte	'Ifx_ERAY_MBSC3',0,7,249,16,3
	.word	27385
	.byte	22
	.byte	'Ifx_ERAY_MBSC4',0,7,129,17,3
	.word	28025
	.byte	22
	.byte	'Ifx_ERAY_MHDC',0,7,137,17,3
	.word	15443
	.byte	22
	.byte	'Ifx_ERAY_MHDF',0,7,145,17,3
	.word	20755
	.byte	22
	.byte	'Ifx_ERAY_MHDS',0,7,153,17,3
	.word	20203
	.byte	22
	.byte	'Ifx_ERAY_MRC',0,7,161,17,3
	.word	19477
	.byte	22
	.byte	'Ifx_ERAY_MSIC1',0,7,169,17,3
	.word	31262
	.byte	22
	.byte	'Ifx_ERAY_MSIC2',0,7,177,17,3
	.word	31906
	.byte	22
	.byte	'Ifx_ERAY_MSIC3',0,7,185,17,3
	.word	32550
	.byte	22
	.byte	'Ifx_ERAY_MSIC4',0,7,193,17,3
	.word	33222
	.byte	22
	.byte	'Ifx_ERAY_MTCCV',0,7,201,17,3
	.word	17898
	.byte	22
	.byte	'Ifx_ERAY_NDAT1',0,7,209,17,3
	.word	23791
	.byte	22
	.byte	'Ifx_ERAY_NDAT2',0,7,217,17,3
	.word	24371
	.byte	22
	.byte	'Ifx_ERAY_NDAT3',0,7,225,17,3
	.word	24951
	.byte	22
	.byte	'Ifx_ERAY_NDAT4',0,7,233,17,3
	.word	25559
	.byte	22
	.byte	'Ifx_ERAY_NDIC1',0,7,241,17,3
	.word	28668
	.byte	22
	.byte	'Ifx_ERAY_NDIC2',0,7,249,17,3
	.word	29312
	.byte	22
	.byte	'Ifx_ERAY_NDIC3',0,7,129,18,3
	.word	29956
	.byte	22
	.byte	'Ifx_ERAY_NDIC4',0,7,137,18,3
	.word	30628
	.byte	22
	.byte	'Ifx_ERAY_NEMC',0,7,145,18,3
	.word	14898
	.byte	22
	.byte	'Ifx_ERAY_NMV',0,7,153,18,3
	.word	19292
	.byte	22
	.byte	'Ifx_ERAY_OBCM',0,7,161,18,3
	.word	36026
	.byte	22
	.byte	'Ifx_ERAY_OBCR',0,7,169,18,3
	.word	36241
	.byte	22
	.byte	'Ifx_ERAY_OCS',0,7,177,18,3
	.word	36608
	.byte	22
	.byte	'Ifx_ERAY_OCV',0,7,185,18,3
	.word	18106
	.byte	22
	.byte	'Ifx_ERAY_OSID',0,7,193,18,3
	.word	19203
	.byte	22
	.byte	'Ifx_ERAY_OTSS',0,7,201,18,3
	.word	36438
	.byte	22
	.byte	'Ifx_ERAY_PRTC1',0,7,209,18,3
	.word	15104
	.byte	22
	.byte	'Ifx_ERAY_PRTC2',0,7,217,18,3
	.word	15300
	.byte	22
	.byte	'Ifx_ERAY_RCV',0,7,225,18,3
	.word	18002
	.byte	22
	.byte	'Ifx_ERAY_RDDS',0,7,233,18,3
	.word	34662
	.byte	22
	.byte	'Ifx_ERAY_RDHS1',0,7,241,18,3
	.word	34930
	.byte	22
	.byte	'Ifx_ERAY_RDHS2',0,7,249,18,3
	.word	35112
	.byte	22
	.byte	'Ifx_ERAY_RDHS3',0,7,129,19,3
	.word	35368
	.byte	22
	.byte	'Ifx_ERAY_SCV',0,7,137,19,3
	.word	17754
	.byte	22
	.byte	'Ifx_ERAY_SFS',0,7,145,19,3
	.word	18323
	.byte	22
	.byte	'Ifx_ERAY_SIER',0,7,153,19,3
	.word	13273
	.byte	22
	.byte	'Ifx_ERAY_SIES',0,7,161,19,3
	.word	12828
	.byte	22
	.byte	'Ifx_ERAY_SILS',0,7,169,19,3
	.word	11517
	.byte	22
	.byte	'Ifx_ERAY_SIR',0,7,177,19,3
	.word	10639
	.byte	22
	.byte	'Ifx_ERAY_STPW1',0,7,185,19,3
	.word	14034
	.byte	22
	.byte	'Ifx_ERAY_STPW2',0,7,193,19,3
	.word	14182
	.byte	22
	.byte	'Ifx_ERAY_SUCC1',0,7,201,19,3
	.word	14531
	.byte	22
	.byte	'Ifx_ERAY_SUCC2',0,7,209,19,3
	.word	14674
	.byte	22
	.byte	'Ifx_ERAY_SUCC3',0,7,217,19,3
	.word	14794
	.byte	22
	.byte	'Ifx_ERAY_SWNIT',0,7,225,19,3
	.word	18606
	.byte	22
	.byte	'Ifx_ERAY_T0C',0,7,233,19,3
	.word	13593
	.byte	22
	.byte	'Ifx_ERAY_T1C',0,7,241,19,3
	.word	13752
	.byte	22
	.byte	'Ifx_ERAY_TEST1',0,7,249,19,3
	.word	9500
	.byte	22
	.byte	'Ifx_ERAY_TEST2',0,7,129,20,3
	.word	9682
	.byte	22
	.byte	'Ifx_ERAY_TXRQ1',0,7,137,20,3
	.word	21357
	.byte	22
	.byte	'Ifx_ERAY_TXRQ2',0,7,145,20,3
	.word	21969
	.byte	22
	.byte	'Ifx_ERAY_TXRQ3',0,7,153,20,3
	.word	22581
	.byte	22
	.byte	'Ifx_ERAY_TXRQ4',0,7,161,20,3
	.word	23221
	.byte	22
	.byte	'Ifx_ERAY_WRDS',0,7,169,20,3
	.word	33611
	.byte	22
	.byte	'Ifx_ERAY_WRHS1',0,7,177,20,3
	.word	33879
	.byte	22
	.byte	'Ifx_ERAY_WRHS2',0,7,185,20,3
	.word	34023
	.byte	22
	.byte	'Ifx_ERAY_WRHS3',0,7,193,20,3
	.word	34128
	.byte	15
	.word	37655
	.byte	22
	.byte	'Ifx_ERAY',0,7,195,21,3
	.word	46556
	.byte	22
	.byte	'_iob_flag_t',0,10,82,25
	.word	339
	.byte	22
	.byte	'uint8',0,11,89,24
	.word	322
	.byte	22
	.byte	'sint16',0,11,90,24
	.word	40534
	.byte	22
	.byte	'uint16',0,11,91,24
	.word	339
	.byte	2
	.byte	'long int',0,4,5,22
	.byte	'sint32',0,11,92,24
	.word	46643
	.byte	22
	.byte	'uint32',0,11,93,24
	.word	39862
	.byte	2
	.byte	'float',0,4,4,22
	.byte	'float32',0,11,94,24
	.word	46685
	.byte	22
	.byte	'boolean',0,11,104,24
	.word	322
	.byte	2
	.byte	'long long int',0,8,5,22
	.byte	'sint64',0,12,36,28
	.word	46726
	.byte	22
	.byte	'uint64',0,12,37,28
	.word	186
	.byte	22
	.byte	'pvoid',0,12,40,28
	.word	218
	.byte	22
	.byte	'Ifx_TickTime',0,12,43,28
	.word	46726
	.byte	22
	.byte	'Ifx_SizeT',0,12,56,16
	.word	40534
	.byte	22
	.byte	'Ifx_Priority',0,12,67,16
	.word	339
	.byte	16,12,94,9,1,17
	.byte	'Ifx_RxSel_a',0,0,17
	.byte	'Ifx_RxSel_b',0,1,17
	.byte	'Ifx_RxSel_c',0,2,17
	.byte	'Ifx_RxSel_d',0,3,17
	.byte	'Ifx_RxSel_e',0,4,17
	.byte	'Ifx_RxSel_f',0,5,17
	.byte	'Ifx_RxSel_g',0,6,17
	.byte	'Ifx_RxSel_h',0,7,0,22
	.byte	'Ifx_RxSel',0,12,104,3
	.word	46847
	.byte	22
	.byte	'Ifx_P_ACCEN0_Bits',0,3,79,3
	.word	6232
	.byte	22
	.byte	'Ifx_P_ACCEN1_Bits',0,3,85,3
	.word	6145
	.byte	22
	.byte	'Ifx_P_ESR_Bits',0,3,107,3
	.word	3195
	.byte	22
	.byte	'Ifx_P_ID_Bits',0,3,115,3
	.word	1248
	.byte	22
	.byte	'Ifx_P_IN_Bits',0,3,137,1,3
	.word	2243
	.byte	22
	.byte	'Ifx_P_IOCR0_Bits',0,3,150,1,3
	.word	1376
	.byte	22
	.byte	'Ifx_P_IOCR12_Bits',0,3,163,1,3
	.word	2023
	.byte	22
	.byte	'Ifx_P_IOCR4_Bits',0,3,176,1,3
	.word	1591
	.byte	22
	.byte	'Ifx_P_IOCR8_Bits',0,3,189,1,3
	.word	1806
	.byte	22
	.byte	'Ifx_P_OMCR0_Bits',0,3,200,1,3
	.word	4775
	.byte	22
	.byte	'Ifx_P_OMCR12_Bits',0,3,210,1,3
	.word	5299
	.byte	22
	.byte	'Ifx_P_OMCR4_Bits',0,3,221,1,3
	.word	4949
	.byte	22
	.byte	'Ifx_P_OMCR8_Bits',0,3,232,1,3
	.word	5123
	.byte	22
	.byte	'Ifx_P_OMCR_Bits',0,3,254,1,3
	.word	5788
	.byte	22
	.byte	'Ifx_P_OMR_Bits',0,3,163,2,3
	.word	677
	.byte	22
	.byte	'Ifx_P_OMSR0_Bits',0,3,173,2,3
	.word	4112
	.byte	22
	.byte	'Ifx_P_OMSR12_Bits',0,3,184,2,3
	.word	4600
	.byte	22
	.byte	'Ifx_P_OMSR4_Bits',0,3,195,2,3
	.word	4259
	.byte	22
	.byte	'Ifx_P_OMSR8_Bits',0,3,206,2,3
	.word	4428
	.byte	22
	.byte	'Ifx_P_OMSR_Bits',0,3,228,2,3
	.word	5455
	.byte	22
	.byte	'Ifx_P_OUT_Bits',0,3,250,2,3
	.word	361
	.byte	22
	.byte	'Ifx_P_PCSR_Bits',0,3,135,3,3
	.word	3901
	.byte	22
	.byte	'Ifx_P_PDISC_Bits',0,3,157,3,3
	.word	3535
	.byte	22
	.byte	'Ifx_P_PDR0_Bits',0,3,178,3,3
	.word	2566
	.byte	22
	.byte	'Ifx_P_PDR1_Bits',0,3,199,3,3
	.word	2870
	.byte	22
	.byte	'Ifx_P_ACCEN0',0,3,212,3,3
	.word	6759
	.byte	22
	.byte	'Ifx_P_ACCEN1',0,3,220,3,3
	.word	6192
	.byte	22
	.byte	'Ifx_P_ESR',0,3,228,3,3
	.word	3486
	.byte	22
	.byte	'Ifx_P_ID',0,3,236,3,3
	.word	1327
	.byte	22
	.byte	'Ifx_P_IN',0,3,244,3,3
	.word	2517
	.byte	22
	.byte	'Ifx_P_IOCR0',0,3,252,3,3
	.word	1551
	.byte	22
	.byte	'Ifx_P_IOCR12',0,3,132,4,3
	.word	2203
	.byte	22
	.byte	'Ifx_P_IOCR4',0,3,140,4,3
	.word	1766
	.byte	22
	.byte	'Ifx_P_IOCR8',0,3,148,4,3
	.word	1983
	.byte	22
	.byte	'Ifx_P_OMCR',0,3,156,4,3
	.word	6096
	.byte	22
	.byte	'Ifx_P_OMCR0',0,3,164,4,3
	.word	4909
	.byte	22
	.byte	'Ifx_P_OMCR12',0,3,172,4,3
	.word	5415
	.byte	22
	.byte	'Ifx_P_OMCR4',0,3,180,4,3
	.word	5083
	.byte	22
	.byte	'Ifx_P_OMCR8',0,3,188,4,3
	.word	5259
	.byte	22
	.byte	'Ifx_P_OMR',0,3,196,4,3
	.word	1208
	.byte	22
	.byte	'Ifx_P_OMSR',0,3,204,4,3
	.word	5748
	.byte	22
	.byte	'Ifx_P_OMSR0',0,3,212,4,3
	.word	4219
	.byte	22
	.byte	'Ifx_P_OMSR12',0,3,220,4,3
	.word	4735
	.byte	22
	.byte	'Ifx_P_OMSR4',0,3,228,4,3
	.word	4388
	.byte	22
	.byte	'Ifx_P_OMSR8',0,3,236,4,3
	.word	4560
	.byte	22
	.byte	'Ifx_P_OUT',0,3,244,4,3
	.word	637
	.byte	22
	.byte	'Ifx_P_PCSR',0,3,252,4,3
	.word	4072
	.byte	22
	.byte	'Ifx_P_PDISC',0,3,132,5,3
	.word	3861
	.byte	22
	.byte	'Ifx_P_PDR0',0,3,140,5,3
	.word	2830
	.byte	22
	.byte	'Ifx_P_PDR1',0,3,148,5,3
	.word	3146
	.byte	15
	.word	6799
	.byte	22
	.byte	'Ifx_P',0,3,193,5,3
	.word	48130
	.byte	16,13,153,10,9,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,17
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,17
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,22
	.byte	'IfxScu_WDTCON1_IR',0,13,158,10,3
	.word	48150
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,14,45,16,4,10
	.byte	'EN0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_ACCEN0_Bits',0,14,79,3
	.word	48272
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,14,82,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,22
	.byte	'Ifx_SCU_ACCEN1_Bits',0,14,85,3
	.word	48829
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,14,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	299
	.byte	29,0,2,35,0,0,22
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,14,94,3
	.word	48906
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,14,97,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	322
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	322
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	322
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	322
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	322
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CCUCON0_Bits',0,14,111,3
	.word	49042
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,14,114,16,4,10
	.byte	'CANDIV',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	322
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	322
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	322
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	322
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CCUCON1_Bits',0,14,126,3
	.word	49324
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,14,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CCUCON2_Bits',0,14,135,1,3
	.word	49562
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,14,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	322
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	322
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CCUCON3_Bits',0,14,149,1,3
	.word	49690
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,14,152,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	322
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	322
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CCUCON4_Bits',0,14,163,1,3
	.word	49917
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,14,166,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CCUCON5_Bits',0,14,172,1,3
	.word	50136
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,14,175,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON6_Bits',0,14,179,1,3
	.word	50264
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,14,182,1,16,4,10
	.byte	'CHREV',0,1
	.word	322
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	322
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	322
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_CHIPID_Bits',0,14,193,1,3
	.word	50364
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,14,196,1,16,4,10
	.byte	'PWD',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	299
	.byte	22,6,2,35,0,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	5,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_DTSCON_Bits',0,14,204,1,3
	.word	50572
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,14,207,1,16,4,10
	.byte	'LOWER',0,2
	.word	339
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	339
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_DTSLIM_Bits',0,14,216,1,3
	.word	50737
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,14,219,1,16,4,10
	.byte	'RESULT',0,2
	.word	339
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,14,226,1,3
	.word	50920
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,14,229,1,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	322
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	322
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	299
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	322
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	322
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	322
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EICR_Bits',0,14,248,1,3
	.word	51074
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,14,251,1,16,4,10
	.byte	'INTF0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,22
	.byte	'Ifx_SCU_EIFR_Bits',0,14,134,2,3
	.word	51438
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,14,137,2,16,4,10
	.byte	'POL',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	339
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	322
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	322
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	4,0,2,35,3,0,22
	.byte	'Ifx_SCU_EMSR_Bits',0,14,150,2,3
	.word	51649
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,14,153,2,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	339
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	299
	.byte	23,0,2,35,0,0,22
	.byte	'Ifx_SCU_ESRCFG_Bits',0,14,158,2,3
	.word	51901
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,14,161,2,16,4,10
	.byte	'ARI',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,22
	.byte	'Ifx_SCU_ESROCFG_Bits',0,14,166,2,3
	.word	52019
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,14,169,2,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVR13CON_Bits',0,14,176,2,3
	.word	52130
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,14,179,2,16,4,10
	.byte	'ADC13V',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,14,186,2,3
	.word	52293
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,14,189,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	322
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	339
	.byte	10,0,2,35,0,10
	.byte	'SWDOVMOD',0,1
	.word	322
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	322
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	339
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,14,201,2,3
	.word	52455
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,14,204,2,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVROVMON_Bits',0,14,212,2,3
	.word	52733
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,14,215,2,16,4,10
	.byte	'reserved_0',0,4
	.word	299
	.byte	28,4,2,35,0,10
	.byte	'RSTSWDOFF',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,14,222,2,3
	.word	52912
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,14,225,2,16,4,10
	.byte	'SD33P',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	322
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	299
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,14,232,2,3
	.word	53072
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,14,235,2,16,4,10
	.byte	'SDFREQSPRD',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'TON',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'TOFF',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'SYNCDIV',0,1
	.word	322
	.byte	3,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,14,244,2,3
	.word	53233
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,14,247,2,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'STBS',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'STSP',0,1
	.word	322
	.byte	2,4,2,35,1,10
	.byte	'NS',0,1
	.word	322
	.byte	2,2,2,35,1,10
	.byte	'OL',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'PIAD',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'ADCMODE',0,1
	.word	322
	.byte	4,4,2,35,2,10
	.byte	'ADCLPF',0,1
	.word	322
	.byte	2,2,2,35,2,10
	.byte	'ADCLSB',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,14,134,3,3
	.word	53425
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,14,137,3,16,4,10
	.byte	'SDOLCON',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'MODSEL',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'MODLOW',0,1
	.word	322
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	322
	.byte	6,2,2,35,2,10
	.byte	'MODMAN',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'MODHIGH',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,14,147,3,3
	.word	53721
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,14,150,3,16,4,10
	.byte	'EVR13',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'SCMOD',0,1
	.word	322
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	299
	.byte	18,0,2,35,0,0,22
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,14,164,3,3
	.word	53936
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,14,167,3,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	322
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,14,175,3,3
	.word	54225
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,14,178,3,16,4,10
	.byte	'EN0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	322
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	339
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	322
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	322
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	322
	.byte	8,0,2,35,3,0,22
	.byte	'Ifx_SCU_EXTCON_Bits',0,14,189,3,3
	.word	54404
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,14,192,3,16,4,10
	.byte	'STEP',0,2
	.word	339
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	322
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	339
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_FDR_Bits',0,14,200,3,3
	.word	54622
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,14,203,3,16,4,10
	.byte	'FS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	8,0,2,35,3,0,22
	.byte	'Ifx_SCU_FMR_Bits',0,14,223,3,3
	.word	54785
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,14,226,3,16,4,10
	.byte	'MODREV',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_ID_Bits',0,14,231,3,3
	.word	55121
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,14,234,3,16,4,10
	.byte	'IPEN00',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	322
	.byte	2,0,2,35,3,0,22
	.byte	'Ifx_SCU_IGCR_Bits',0,14,130,4,3
	.word	55228
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,14,133,4,16,4,10
	.byte	'P0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,22
	.byte	'Ifx_SCU_IN_Bits',0,14,138,4,3
	.word	55680
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,14,141,4,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	322
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_IOCR_Bits',0,14,148,4,3
	.word	55779
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,14,151,4,16,4,10
	.byte	'LBISTREQ',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	339
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,14,157,4,3
	.word	55929
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,14,160,4,16,4,10
	.byte	'SEED',0,4
	.word	299
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	322
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	322
	.byte	4,0,2,35,3,0,22
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,14,167,4,3
	.word	56078
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,14,170,4,16,4,10
	.byte	'SIGNATURE',0,4
	.word	299
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,14,175,4,3
	.word	56239
	.byte	9
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,14,178,4,16,4,10
	.byte	'reserved_0',0,2
	.word	339
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	339
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_LCLCON0_Bits',0,14,184,4,3
	.word	56369
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,14,187,4,16,4,10
	.byte	'LCLT0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,22
	.byte	'Ifx_SCU_LCLTEST_Bits',0,14,192,4,3
	.word	56503
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,14,195,4,16,4,10
	.byte	'DEPT',0,1
	.word	322
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	339
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_MANID_Bits',0,14,200,4,3
	.word	56618
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,14,203,4,16,4,10
	.byte	'PS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	339
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	339
	.byte	14,0,2,35,2,0,22
	.byte	'Ifx_SCU_OMR_Bits',0,14,211,4,3
	.word	56729
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,14,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	322
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	322
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	322
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	322
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	8,0,2,35,3,0,22
	.byte	'Ifx_SCU_OSCCON_Bits',0,14,231,4,3
	.word	56887
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,14,234,4,16,4,10
	.byte	'P0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,22
	.byte	'Ifx_SCU_OUT_Bits',0,14,239,4,3
	.word	57227
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,14,242,4,16,4,10
	.byte	'CSEL0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	339
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	6,0,2,35,3,0,22
	.byte	'Ifx_SCU_OVCCON_Bits',0,14,255,4,3
	.word	57328
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,14,130,5,16,4,10
	.byte	'OVEN0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	299
	.byte	29,0,2,35,0,0,22
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,14,136,5,3
	.word	57595
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,14,139,5,16,4,10
	.byte	'PDIS0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,22
	.byte	'Ifx_SCU_PDISC_Bits',0,14,144,5,3
	.word	57731
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,14,147,5,16,4,10
	.byte	'PD0',0,1
	.word	322
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	322
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,22
	.byte	'Ifx_SCU_PDR_Bits',0,14,154,5,3
	.word	57842
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,14,157,5,16,4,10
	.byte	'PDR0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,22
	.byte	'Ifx_SCU_PDRR_Bits',0,14,168,5,3
	.word	57975
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,14,171,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	339
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	322
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	4,0,2,35,3,0,22
	.byte	'Ifx_SCU_PLLCON0_Bits',0,14,188,5,3
	.word	58178
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,14,191,5,16,4,10
	.byte	'K2DIV',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	322
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	339
	.byte	9,0,2,35,2,0,22
	.byte	'Ifx_SCU_PLLCON1_Bits',0,14,199,5,3
	.word	58534
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,14,202,5,16,4,10
	.byte	'MODCFG',0,2
	.word	339
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_PLLCON2_Bits',0,14,206,5,3
	.word	58712
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,14,209,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	339
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	322
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	4,0,2,35,3,0,22
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,14,226,5,3
	.word	58812
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,14,229,5,16,4,10
	.byte	'K2DIV',0,1
	.word	322
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	322
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	322
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	322
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	339
	.byte	9,0,2,35,2,0,22
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,14,237,5,3
	.word	59182
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,14,240,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,22
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,14,249,5,3
	.word	59368
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,14,252,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,22
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,14,135,6,3
	.word	59566
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,14,138,6,16,4,10
	.byte	'REQSLP',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	322
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	322
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,22
	.byte	'Ifx_SCU_PMCSR_Bits',0,14,145,6,3
	.word	59799
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,14,148,6,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	322
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	322
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	322
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	322
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	2,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,14,174,6,3
	.word	59951
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,14,177,6,16,4,10
	.byte	'reserved_0',0,2
	.word	339
	.byte	12,4,2,35,0,10
	.byte	'IRADIS',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	299
	.byte	14,5,2,35,0,10
	.byte	'STBYEVEN',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	322
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,14,185,6,3
	.word	60510
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,14,188,6,16,4,10
	.byte	'WUTREL',0,4
	.word	299
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	4,4,2,35,3,10
	.byte	'WUTDIV',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,14,196,6,3
	.word	60693
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,14,199,6,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	322
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	322
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	322
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'WUTWKP',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUN',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	322
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	322
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	339
	.byte	4,5,2,35,2,10
	.byte	'ESR0TRIST',0,1
	.word	322
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	322
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	322
	.byte	1,1,2,35,3,10
	.byte	'WUTRUN',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,14,226,6,3
	.word	60862
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,14,229,6,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'WUTWKPCLR',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUNCLR',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	339
	.byte	14,0,2,35,2,0,22
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,14,242,6,3
	.word	61429
	.byte	9
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,14,245,6,16,4,10
	.byte	'WUTCNT',0,4
	.word	299
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	322
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	322
	.byte	1,0,2,35,3,0,22
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,14,250,6,3
	.word	61745
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,14,253,6,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	339
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	322
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	322
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	322
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_RSTCON2_Bits',0,14,135,7,3
	.word	61864
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,14,138,7,16,4,10
	.byte	'ESR0',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	322
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	322
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	322
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	322
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	322
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_RSTCON_Bits',0,14,149,7,3
	.word	62073
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,14,152,7,16,4,10
	.byte	'ESR0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	322
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	322
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	322
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	322
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	322
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	322
	.byte	3,0,2,35,3,0,22
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,14,175,7,3
	.word	62284
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,14,178,7,16,4,10
	.byte	'HBT',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	299
	.byte	31,0,2,35,0,0,22
	.byte	'Ifx_SCU_SAFECON_Bits',0,14,182,7,3
	.word	62716
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,14,185,7,16,4,10
	.byte	'HWCFG',0,1
	.word	322
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	322
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	322
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	322
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	322
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	322
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	322
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	322
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	322
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	322
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	322
	.byte	7,0,2,35,3,0,22
	.byte	'Ifx_SCU_STSTAT_Bits',0,14,198,7,3
	.word	62812
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,14,201,7,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,22
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,14,206,7,3
	.word	63072
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,14,209,7,16,4,10
	.byte	'CCTRIG0',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	322
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	322
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	299
	.byte	23,0,2,35,0,0,22
	.byte	'Ifx_SCU_SYSCON_Bits',0,14,218,7,3
	.word	63197
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,14,221,7,16,4,10
	.byte	'ESR0T',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,14,228,7,3
	.word	63394
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,14,231,7,16,4,10
	.byte	'ESR0T',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,14,238,7,3
	.word	63547
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,14,241,7,16,4,10
	.byte	'ESR0T',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPSET_Bits',0,14,248,7,3
	.word	63700
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,14,251,7,16,4,10
	.byte	'ESR0T',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,14,130,8,3
	.word	63853
	.byte	2
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,14,133,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	64008
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	64008
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	64008
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	64008
	.byte	16,0,2,35,0,0,22
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,14,139,8,3
	.word	64024
	.byte	9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,14,142,8,16,4,10
	.byte	'reserved_0',0,1
	.word	322
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	322
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,14,154,8,3
	.word	64154
	.byte	9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,14,157,8,16,4,10
	.byte	'AE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	322
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,14,170,8,3
	.word	64392
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,14,173,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	64008
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	64008
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	64008
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	64008
	.byte	16,0,2,35,0,0,22
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,14,179,8,3
	.word	64615
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,14,182,8,16,4,10
	.byte	'CLRIRF',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	322
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,14,195,8,3
	.word	64741
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,14,198,8,16,4,10
	.byte	'AE',0,1
	.word	322
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	322
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	322
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	322
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	322
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	322
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	322
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	322
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	322
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	322
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	339
	.byte	16,0,2,35,2,0,22
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,14,211,8,3
	.word	64993
	.byte	11,14,219,8,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48272
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_ACCEN0',0,14,224,8,3
	.word	65212
	.byte	11,14,227,8,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48829
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_ACCEN1',0,14,232,8,3
	.word	65276
	.byte	11,14,235,8,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48906
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_ARSTDIS',0,14,240,8,3
	.word	65340
	.byte	11,14,243,8,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49042
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON0',0,14,248,8,3
	.word	65405
	.byte	11,14,251,8,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49324
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON1',0,14,128,9,3
	.word	65470
	.byte	11,14,131,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49562
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON2',0,14,136,9,3
	.word	65535
	.byte	11,14,139,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49690
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON3',0,14,144,9,3
	.word	65600
	.byte	11,14,147,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49917
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON4',0,14,152,9,3
	.word	65665
	.byte	11,14,155,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50136
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON5',0,14,160,9,3
	.word	65730
	.byte	11,14,163,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50264
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CCUCON6',0,14,168,9,3
	.word	65795
	.byte	11,14,171,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50364
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_CHIPID',0,14,176,9,3
	.word	65860
	.byte	11,14,179,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50572
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_DTSCON',0,14,184,9,3
	.word	65924
	.byte	11,14,187,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50737
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_DTSLIM',0,14,192,9,3
	.word	65988
	.byte	11,14,195,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50920
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_DTSSTAT',0,14,200,9,3
	.word	66052
	.byte	11,14,203,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51074
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EICR',0,14,208,9,3
	.word	66117
	.byte	11,14,211,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51438
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EIFR',0,14,216,9,3
	.word	66179
	.byte	11,14,219,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51649
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EMSR',0,14,224,9,3
	.word	66241
	.byte	11,14,227,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51901
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_ESRCFG',0,14,232,9,3
	.word	66303
	.byte	11,14,235,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52019
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_ESROCFG',0,14,240,9,3
	.word	66367
	.byte	11,14,243,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52130
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVR13CON',0,14,248,9,3
	.word	66432
	.byte	11,14,251,9,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52293
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRADCSTAT',0,14,128,10,3
	.word	66498
	.byte	11,14,131,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52455
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRMONCTRL',0,14,136,10,3
	.word	66566
	.byte	11,14,139,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52733
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVROVMON',0,14,144,10,3
	.word	66634
	.byte	11,14,147,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52912
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRRSTCON',0,14,152,10,3
	.word	66700
	.byte	11,14,155,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53072
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,14,160,10,3
	.word	66767
	.byte	11,14,163,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53233
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRSDCTRL1',0,14,168,10,3
	.word	66836
	.byte	11,14,171,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53425
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRSDCTRL2',0,14,176,10,3
	.word	66904
	.byte	11,14,179,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53721
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRSDCTRL3',0,14,184,10,3
	.word	66972
	.byte	11,14,187,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53936
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRSTAT',0,14,192,10,3
	.word	67040
	.byte	11,14,195,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54225
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EVRUVMON',0,14,200,10,3
	.word	67105
	.byte	11,14,203,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54404
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_EXTCON',0,14,208,10,3
	.word	67171
	.byte	11,14,211,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54622
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_FDR',0,14,216,10,3
	.word	67235
	.byte	11,14,219,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54785
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_FMR',0,14,224,10,3
	.word	67296
	.byte	11,14,227,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55121
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_ID',0,14,232,10,3
	.word	67357
	.byte	11,14,235,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55228
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_IGCR',0,14,240,10,3
	.word	67417
	.byte	11,14,243,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55680
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_IN',0,14,248,10,3
	.word	67479
	.byte	11,14,251,10,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55779
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_IOCR',0,14,128,11,3
	.word	67539
	.byte	11,14,131,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55929
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_LBISTCTRL0',0,14,136,11,3
	.word	67601
	.byte	11,14,139,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56078
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_LBISTCTRL1',0,14,144,11,3
	.word	67669
	.byte	11,14,147,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56239
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_LBISTCTRL2',0,14,152,11,3
	.word	67737
	.byte	11,14,155,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56369
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_LCLCON0',0,14,160,11,3
	.word	67805
	.byte	11,14,163,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56503
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_LCLTEST',0,14,168,11,3
	.word	67870
	.byte	11,14,171,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56618
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_MANID',0,14,176,11,3
	.word	67935
	.byte	11,14,179,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56729
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_OMR',0,14,184,11,3
	.word	67998
	.byte	11,14,187,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56887
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_OSCCON',0,14,192,11,3
	.word	68059
	.byte	11,14,195,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57227
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_OUT',0,14,200,11,3
	.word	68123
	.byte	11,14,203,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57328
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_OVCCON',0,14,208,11,3
	.word	68184
	.byte	11,14,211,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57595
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_OVCENABLE',0,14,216,11,3
	.word	68248
	.byte	11,14,219,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57731
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PDISC',0,14,224,11,3
	.word	68315
	.byte	11,14,227,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57842
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PDR',0,14,232,11,3
	.word	68378
	.byte	11,14,235,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57975
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PDRR',0,14,240,11,3
	.word	68439
	.byte	11,14,243,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58178
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLCON0',0,14,248,11,3
	.word	68501
	.byte	11,14,251,11,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58534
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLCON1',0,14,128,12,3
	.word	68566
	.byte	11,14,131,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58712
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLCON2',0,14,136,12,3
	.word	68631
	.byte	11,14,139,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58812
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLERAYCON0',0,14,144,12,3
	.word	68696
	.byte	11,14,147,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59182
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLERAYCON1',0,14,152,12,3
	.word	68765
	.byte	11,14,155,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59368
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLERAYSTAT',0,14,160,12,3
	.word	68834
	.byte	11,14,163,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59566
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PLLSTAT',0,14,168,12,3
	.word	68903
	.byte	11,14,171,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59799
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMCSR',0,14,176,12,3
	.word	68968
	.byte	11,14,179,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59951
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMSWCR0',0,14,184,12,3
	.word	69031
	.byte	11,14,187,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60510
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMSWCR1',0,14,192,12,3
	.word	69096
	.byte	11,14,195,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60693
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMSWCR3',0,14,200,12,3
	.word	69161
	.byte	11,14,203,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60862
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMSWSTAT',0,14,208,12,3
	.word	69226
	.byte	11,14,211,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61429
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMSWSTATCLR',0,14,216,12,3
	.word	69292
	.byte	11,14,219,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61745
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_PMSWUTCNT',0,14,224,12,3
	.word	69361
	.byte	11,14,227,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62073
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_RSTCON',0,14,232,12,3
	.word	69428
	.byte	11,14,235,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61864
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_RSTCON2',0,14,240,12,3
	.word	69492
	.byte	11,14,243,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62284
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_RSTSTAT',0,14,248,12,3
	.word	69557
	.byte	11,14,251,12,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62716
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_SAFECON',0,14,128,13,3
	.word	69622
	.byte	11,14,131,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62812
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_STSTAT',0,14,136,13,3
	.word	69687
	.byte	11,14,139,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63072
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_SWRSTCON',0,14,144,13,3
	.word	69751
	.byte	11,14,147,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63197
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_SYSCON',0,14,152,13,3
	.word	69817
	.byte	11,14,155,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63394
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPCLR',0,14,160,13,3
	.word	69881
	.byte	11,14,163,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63547
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPDIS',0,14,168,13,3
	.word	69946
	.byte	11,14,171,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63700
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPSET',0,14,176,13,3
	.word	70011
	.byte	11,14,179,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63853
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_TRAPSTAT',0,14,184,13,3
	.word	70076
	.byte	11,14,187,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64024
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_WDTCPU_CON0',0,14,192,13,3
	.word	70142
	.byte	11,14,195,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64154
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_WDTCPU_CON1',0,14,200,13,3
	.word	70211
	.byte	11,14,203,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64392
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_WDTCPU_SR',0,14,208,13,3
	.word	70280
	.byte	11,14,211,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64615
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_WDTS_CON0',0,14,216,13,3
	.word	70347
	.byte	11,14,219,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64741
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_WDTS_CON1',0,14,224,13,3
	.word	70414
	.byte	11,14,227,13,9,4,12
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64993
	.byte	4,2,35,0,0,22
	.byte	'Ifx_SCU_WDTS_SR',0,14,232,13,3
	.word	70481
	.byte	9
	.byte	'_Ifx_SCU_WDTCPU',0,14,243,13,25,12,12
	.byte	'CON0',0
	.word	70142
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	70211
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	70280
	.byte	4,2,35,8,0,15
	.word	70546
	.byte	22
	.byte	'Ifx_SCU_WDTCPU',0,14,248,13,3
	.word	70609
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,14,251,13,25,12,12
	.byte	'CON0',0
	.word	70347
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	70414
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	70481
	.byte	4,2,35,8,0,15
	.word	70638
	.byte	22
	.byte	'Ifx_SCU_WDTS',0,14,128,14,3
	.word	70699
	.byte	22
	.byte	'IfxPort_InputMode',0,2,60,3
	.word	7342
	.byte	22
	.byte	'IfxPort_OutputIdx',0,2,101,3
	.word	7616
	.byte	22
	.byte	'IfxPort_OutputMode',0,2,109,3
	.word	7547
	.byte	16,2,115,9,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,17
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,17
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,17
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,17
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,17
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,22
	.byte	'IfxPort_PadDriver',0,2,125,3
	.word	70805
	.byte	22
	.byte	'IfxPort_State',0,2,137,1,3
	.word	7929
	.byte	20,2,149,1,9,8,12
	.byte	'port',0
	.word	7337
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	322
	.byte	1,2,35,4,0,22
	.byte	'IfxPort_Pin',0,2,153,1,3
	.word	71144
	.byte	20,15,39,15,20,12
	.byte	'module',0
	.word	39613
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	41273
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	71144
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	46847
	.byte	1,2,35,16,0,21
	.word	71204
	.byte	22
	.byte	'IfxEray_Rxd_In',0,15,45,3
	.word	71271
	.byte	20,15,48,15,20,12
	.byte	'module',0
	.word	39613
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	41273
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	71144
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	7616
	.byte	1,2,35,16,0,21
	.word	71299
	.byte	22
	.byte	'IfxEray_Txd_Out',0,15,54,3
	.word	71366
	.byte	20,15,57,15,20,12
	.byte	'module',0
	.word	39613
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	41273
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	71144
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	7616
	.byte	1,2,35,16,0,21
	.word	71395
	.byte	22
	.byte	'IfxEray_Txen_Out',0,15,63,3
	.word	71462
	.byte	16,16,49,9,1,17
	.byte	'IfxSrc_Tos_cpu0',0,0,17
	.byte	'IfxSrc_Tos_dma',0,1,0,22
	.byte	'IfxSrc_Tos',0,16,53,3
	.word	71492
	.byte	22
	.byte	'Ifx_SRC_SRCR_Bits',0,5,62,3
	.word	8110
	.byte	22
	.byte	'Ifx_SRC_SRCR',0,5,75,3
	.word	8400
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,5,86,25,12,12
	.byte	'TX',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	8400
	.byte	4,2,35,8,0,15
	.word	71599
	.byte	22
	.byte	'Ifx_SRC_ASCLIN',0,5,91,3
	.word	71658
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,5,94,25,4,12
	.byte	'SBSRC',0
	.word	8400
	.byte	4,2,35,0,0,15
	.word	71686
	.byte	22
	.byte	'Ifx_SRC_BCUSPB',0,5,97,3
	.word	71723
	.byte	13,64
	.word	8400
	.byte	14,15,0,9
	.byte	'_Ifx_SRC_CAN',0,5,100,25,64,12
	.byte	'INT',0
	.word	71751
	.byte	64,2,35,0,0,15
	.word	71760
	.byte	22
	.byte	'Ifx_SRC_CAN',0,5,103,3
	.word	71792
	.byte	13,32
	.word	8400
	.byte	14,7,0,9
	.byte	'_Ifx_SRC_CAN1',0,5,106,25,32,12
	.byte	'INT',0
	.word	71817
	.byte	32,2,35,0,0,15
	.word	71826
	.byte	22
	.byte	'Ifx_SRC_CAN1',0,5,109,3
	.word	71859
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,5,112,25,16,12
	.byte	'SR0',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	8400
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	8400
	.byte	4,2,35,12,0,15
	.word	71885
	.byte	22
	.byte	'Ifx_SRC_CCU6',0,5,118,3
	.word	71957
	.byte	13,8
	.word	8400
	.byte	14,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,5,121,25,8,12
	.byte	'SR',0
	.word	71983
	.byte	8,2,35,0,0,15
	.word	71992
	.byte	22
	.byte	'Ifx_SRC_CERBERUS',0,5,124,3
	.word	72028
	.byte	13,28
	.word	322
	.byte	14,27,0,9
	.byte	'_Ifx_SRC_CPU',0,5,127,25,32,12
	.byte	'SBSRC',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	72058
	.byte	28,2,35,4,0,15
	.word	72067
	.byte	22
	.byte	'Ifx_SRC_CPU',0,5,131,1,3
	.word	72121
	.byte	9
	.byte	'_Ifx_SRC_DMA',0,5,134,1,25,80,12
	.byte	'ERR',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	3526
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	71751
	.byte	64,2,35,16,0,15
	.word	72147
	.byte	22
	.byte	'Ifx_SRC_DMA',0,5,139,1,3
	.word	72212
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,5,142,1,25,4,12
	.byte	'SR',0
	.word	8400
	.byte	4,2,35,0,0,15
	.word	72238
	.byte	22
	.byte	'Ifx_SRC_EMEM',0,5,145,1,3
	.word	72271
	.byte	9
	.byte	'_Ifx_SRC_ERAY',0,5,148,1,25,80,12
	.byte	'INT',0
	.word	71983
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	71983
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	71983
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	71983
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	8400
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	8400
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	33262
	.byte	40,2,35,40,0,15
	.word	72298
	.byte	22
	.byte	'Ifx_SRC_ERAY',0,5,157,1,3
	.word	72425
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,5,160,1,25,4,12
	.byte	'SR',0
	.word	8400
	.byte	4,2,35,0,0,15
	.word	72452
	.byte	22
	.byte	'Ifx_SRC_ETH',0,5,163,1,3
	.word	72484
	.byte	9
	.byte	'_Ifx_SRC_EVR',0,5,166,1,25,8,12
	.byte	'WUT',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'SCDC',0
	.word	8400
	.byte	4,2,35,4,0,15
	.word	72510
	.byte	22
	.byte	'Ifx_SRC_EVR',0,5,170,1,3
	.word	72557
	.byte	9
	.byte	'_Ifx_SRC_FFT',0,5,173,1,25,12,12
	.byte	'DONE',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'ERR',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'RFS',0
	.word	8400
	.byte	4,2,35,8,0,15
	.word	72583
	.byte	22
	.byte	'Ifx_SRC_FFT',0,5,178,1,3
	.word	72643
	.byte	13,240,11
	.word	322
	.byte	14,239,11,0,9
	.byte	'_Ifx_SRC_GPSR',0,5,181,1,25,128,12,12
	.byte	'SR0',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	8400
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	8400
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	72669
	.byte	240,11,2,35,16,0,15
	.word	72680
	.byte	22
	.byte	'Ifx_SRC_GPSR',0,5,188,1,3
	.word	72776
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,5,191,1,25,48,12
	.byte	'CIRQ',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	8400
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	8400
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	8400
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	8400
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	2557
	.byte	24,2,35,24,0,15
	.word	72803
	.byte	22
	.byte	'Ifx_SRC_GPT12',0,5,200,1,3
	.word	72920
	.byte	13,236,2
	.word	322
	.byte	14,235,2,0,13,32
	.word	71817
	.byte	14,0,0,13,224,7
	.word	322
	.byte	14,223,7,0,13,64
	.word	71817
	.byte	14,1,0,9
	.byte	'_Ifx_SRC_GTM',0,5,203,1,25,192,11,12
	.byte	'AEIIRQ',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	72948
	.byte	236,2,2,35,4,12
	.byte	'ERR',0
	.word	8400
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	3526
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	72959
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	72968
	.byte	224,7,3,35,160,3,12
	.byte	'TOM',0
	.word	72979
	.byte	64,3,35,128,11,0,15
	.word	72988
	.byte	22
	.byte	'Ifx_SRC_GTM',0,5,212,1,3
	.word	73135
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,5,215,1,25,8,12
	.byte	'HSM',0
	.word	71983
	.byte	8,2,35,0,0,15
	.word	73161
	.byte	22
	.byte	'Ifx_SRC_HSM',0,5,218,1,3
	.word	73194
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,5,221,1,25,4,12
	.byte	'SR',0
	.word	8400
	.byte	4,2,35,0,0,15
	.word	73220
	.byte	22
	.byte	'Ifx_SRC_LMU',0,5,224,1,3
	.word	73252
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,5,227,1,25,4,12
	.byte	'SR',0
	.word	8400
	.byte	4,2,35,0,0,15
	.word	73278
	.byte	22
	.byte	'Ifx_SRC_PMU',0,5,230,1,3
	.word	73310
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,5,233,1,25,24,12
	.byte	'TX',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	8400
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	8400
	.byte	4,2,35,12,12
	.byte	'HC',0
	.word	8400
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	8400
	.byte	4,2,35,20,0,15
	.word	73336
	.byte	22
	.byte	'Ifx_SRC_QSPI',0,5,241,1,3
	.word	73429
	.byte	13,16
	.word	8400
	.byte	14,3,0,9
	.byte	'_Ifx_SRC_SCU',0,5,244,1,25,20,12
	.byte	'DTS',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	73456
	.byte	16,2,35,4,0,15
	.word	73465
	.byte	22
	.byte	'Ifx_SRC_SCU',0,5,248,1,3
	.word	73511
	.byte	9
	.byte	'_Ifx_SRC_SENT',0,5,251,1,25,16,12
	.byte	'SR',0
	.word	73456
	.byte	16,2,35,0,0,15
	.word	73537
	.byte	22
	.byte	'Ifx_SRC_SENT',0,5,254,1,3
	.word	73570
	.byte	13,12
	.word	8400
	.byte	14,2,0,9
	.byte	'_Ifx_SRC_SMU',0,5,129,2,25,12,12
	.byte	'SR',0
	.word	73597
	.byte	12,2,35,0,0,15
	.word	73606
	.byte	22
	.byte	'Ifx_SRC_SMU',0,5,132,2,3
	.word	73638
	.byte	9
	.byte	'_Ifx_SRC_STM',0,5,135,2,25,96,12
	.byte	'SR0',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'reserved_8',0
	.word	28065
	.byte	88,2,35,8,0,15
	.word	73664
	.byte	22
	.byte	'Ifx_SRC_STM',0,5,140,2,3
	.word	73730
	.byte	13,176,2
	.word	322
	.byte	14,175,2,0,9
	.byte	'_Ifx_SRC_VADCCG',0,5,143,2,25,192,2,12
	.byte	'SR0',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	8400
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	8400
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	73756
	.byte	176,2,2,35,16,0,15
	.word	73767
	.byte	22
	.byte	'Ifx_SRC_VADCCG',0,5,150,2,3
	.word	73865
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,5,153,2,25,16,12
	.byte	'SR0',0
	.word	8400
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	8400
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	8400
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	8400
	.byte	4,2,35,12,0,15
	.word	73894
	.byte	22
	.byte	'Ifx_SRC_VADCG',0,5,159,2,3
	.word	73968
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,5,162,2,25,4,12
	.byte	'SRC',0
	.word	8400
	.byte	4,2,35,0,0,15
	.word	73996
	.byte	22
	.byte	'Ifx_SRC_XBAR',0,5,165,2,3
	.word	74030
	.byte	13,24
	.word	71599
	.byte	14,1,0,15
	.word	74057
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,5,178,2,25,24,12
	.byte	'ASCLIN',0
	.word	74066
	.byte	24,2,35,0,0,15
	.word	74071
	.byte	22
	.byte	'Ifx_SRC_GASCLIN',0,5,181,2,3
	.word	74111
	.byte	15
	.word	71686
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,5,184,2,25,4,12
	.byte	'SPB',0
	.word	74141
	.byte	4,2,35,0,0,15
	.word	74146
	.byte	22
	.byte	'Ifx_SRC_GBCU',0,5,187,2,3
	.word	74180
	.byte	13,64
	.word	71760
	.byte	14,0,0,15
	.word	74207
	.byte	13,32
	.word	71826
	.byte	14,0,0,15
	.word	74221
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,5,190,2,25,96,12
	.byte	'CAN',0
	.word	74216
	.byte	64,2,35,0,12
	.byte	'CAN1',0
	.word	74230
	.byte	32,2,35,64,0,15
	.word	74235
	.byte	22
	.byte	'Ifx_SRC_GCAN',0,5,194,2,3
	.word	74283
	.byte	13,32
	.word	71885
	.byte	14,1,0,15
	.word	74310
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,5,197,2,25,32,12
	.byte	'CCU6',0
	.word	74319
	.byte	32,2,35,0,0,15
	.word	74324
	.byte	22
	.byte	'Ifx_SRC_GCCU6',0,5,200,2,3
	.word	74360
	.byte	15
	.word	71992
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,5,203,2,25,8,12
	.byte	'CERBERUS',0
	.word	74388
	.byte	8,2,35,0,0,15
	.word	74393
	.byte	22
	.byte	'Ifx_SRC_GCERBERUS',0,5,206,2,3
	.word	74437
	.byte	13,32
	.word	72067
	.byte	14,0,0,15
	.word	74469
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,5,209,2,25,32,12
	.byte	'CPU',0
	.word	74478
	.byte	32,2,35,0,0,15
	.word	74483
	.byte	22
	.byte	'Ifx_SRC_GCPU',0,5,212,2,3
	.word	74517
	.byte	13,80
	.word	72147
	.byte	14,0,0,15
	.word	74544
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,5,215,2,25,80,12
	.byte	'DMA',0
	.word	74553
	.byte	80,2,35,0,0,15
	.word	74558
	.byte	22
	.byte	'Ifx_SRC_GDMA',0,5,218,2,3
	.word	74592
	.byte	13,4
	.word	72238
	.byte	14,0,0,15
	.word	74619
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,5,221,2,25,4,12
	.byte	'EMEM',0
	.word	74628
	.byte	4,2,35,0,0,15
	.word	74633
	.byte	22
	.byte	'Ifx_SRC_GEMEM',0,5,224,2,3
	.word	74669
	.byte	13,80
	.word	72298
	.byte	14,0,0,15
	.word	74697
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,5,227,2,25,80,12
	.byte	'ERAY',0
	.word	74706
	.byte	80,2,35,0,0,15
	.word	74711
	.byte	22
	.byte	'Ifx_SRC_GERAY',0,5,230,2,3
	.word	74747
	.byte	13,4
	.word	72452
	.byte	14,0,0,15
	.word	74775
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,5,233,2,25,4,12
	.byte	'ETH',0
	.word	74784
	.byte	4,2,35,0,0,15
	.word	74789
	.byte	22
	.byte	'Ifx_SRC_GETH',0,5,236,2,3
	.word	74823
	.byte	13,8
	.word	72510
	.byte	14,0,0,15
	.word	74850
	.byte	9
	.byte	'_Ifx_SRC_GEVR',0,5,239,2,25,8,12
	.byte	'EVR',0
	.word	74859
	.byte	8,2,35,0,0,15
	.word	74864
	.byte	22
	.byte	'Ifx_SRC_GEVR',0,5,242,2,3
	.word	74898
	.byte	13,12
	.word	72583
	.byte	14,0,0,15
	.word	74925
	.byte	9
	.byte	'_Ifx_SRC_GFFT',0,5,245,2,25,12,12
	.byte	'FFT',0
	.word	74934
	.byte	12,2,35,0,0,15
	.word	74939
	.byte	22
	.byte	'Ifx_SRC_GFFT',0,5,248,2,3
	.word	74973
	.byte	13,128,12
	.word	72680
	.byte	14,0,0,15
	.word	75000
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,5,251,2,25,128,12,12
	.byte	'GPSR',0
	.word	75010
	.byte	128,12,2,35,0,0,15
	.word	75015
	.byte	22
	.byte	'Ifx_SRC_GGPSR',0,5,254,2,3
	.word	75053
	.byte	13,48
	.word	72803
	.byte	14,0,0,15
	.word	75081
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,5,129,3,25,48,12
	.byte	'GPT12',0
	.word	75090
	.byte	48,2,35,0,0,15
	.word	75095
	.byte	22
	.byte	'Ifx_SRC_GGPT12',0,5,132,3,3
	.word	75133
	.byte	13,192,11
	.word	72988
	.byte	14,0,0,15
	.word	75162
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,5,135,3,25,192,11,12
	.byte	'GTM',0
	.word	75172
	.byte	192,11,2,35,0,0,15
	.word	75177
	.byte	22
	.byte	'Ifx_SRC_GGTM',0,5,138,3,3
	.word	75213
	.byte	13,8
	.word	73161
	.byte	14,0,0,15
	.word	75240
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,5,141,3,25,8,12
	.byte	'HSM',0
	.word	75249
	.byte	8,2,35,0,0,15
	.word	75254
	.byte	22
	.byte	'Ifx_SRC_GHSM',0,5,144,3,3
	.word	75288
	.byte	13,4
	.word	73220
	.byte	14,0,0,15
	.word	75315
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,5,147,3,25,4,12
	.byte	'LMU',0
	.word	75324
	.byte	4,2,35,0,0,15
	.word	75329
	.byte	22
	.byte	'Ifx_SRC_GLMU',0,5,150,3,3
	.word	75363
	.byte	13,8
	.word	73278
	.byte	14,1,0,15
	.word	75390
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,5,153,3,25,8,12
	.byte	'PMU',0
	.word	75399
	.byte	8,2,35,0,0,15
	.word	75404
	.byte	22
	.byte	'Ifx_SRC_GPMU',0,5,156,3,3
	.word	75438
	.byte	13,96
	.word	73336
	.byte	14,3,0,15
	.word	75465
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,5,159,3,25,96,12
	.byte	'QSPI',0
	.word	75474
	.byte	96,2,35,0,0,15
	.word	75479
	.byte	22
	.byte	'Ifx_SRC_GQSPI',0,5,162,3,3
	.word	75515
	.byte	15
	.word	73465
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,5,165,3,25,20,12
	.byte	'SCU',0
	.word	75543
	.byte	20,2,35,0,0,15
	.word	75548
	.byte	22
	.byte	'Ifx_SRC_GSCU',0,5,168,3,3
	.word	75582
	.byte	13,16
	.word	73537
	.byte	14,0,0,15
	.word	75609
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,5,171,3,25,16,12
	.byte	'SENT',0
	.word	75618
	.byte	16,2,35,0,0,15
	.word	75623
	.byte	22
	.byte	'Ifx_SRC_GSENT',0,5,174,3,3
	.word	75659
	.byte	13,12
	.word	73606
	.byte	14,0,0,15
	.word	75687
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,5,177,3,25,12,12
	.byte	'SMU',0
	.word	75696
	.byte	12,2,35,0,0,15
	.word	75701
	.byte	22
	.byte	'Ifx_SRC_GSMU',0,5,180,3,3
	.word	75735
	.byte	13,96
	.word	73664
	.byte	14,0,0,15
	.word	75762
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,5,183,3,25,96,12
	.byte	'STM',0
	.word	75771
	.byte	96,2,35,0,0,15
	.word	75776
	.byte	22
	.byte	'Ifx_SRC_GSTM',0,5,186,3,3
	.word	75810
	.byte	13,64
	.word	73894
	.byte	14,3,0,15
	.word	75837
	.byte	13,224,1
	.word	322
	.byte	14,223,1,0,13,192,2
	.word	73767
	.byte	14,0,0,15
	.word	75862
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,5,189,3,25,224,4,12
	.byte	'G',0
	.word	75846
	.byte	64,2,35,0,12
	.byte	'reserved_40',0
	.word	75851
	.byte	224,1,2,35,64,12
	.byte	'CG',0
	.word	75872
	.byte	192,2,3,35,160,2,0,15
	.word	75877
	.byte	22
	.byte	'Ifx_SRC_GVADC',0,5,194,3,3
	.word	75947
	.byte	15
	.word	73996
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,5,197,3,25,4,12
	.byte	'XBAR',0
	.word	75975
	.byte	4,2,35,0,0,15
	.word	75980
	.byte	22
	.byte	'Ifx_SRC_GXBAR',0,5,200,3,3
	.word	76016
	.byte	16,6,62,9,1,17
	.byte	'IfxEray_Baudrate_10',0,0,17
	.byte	'IfxEray_Baudrate_5',0,1,17
	.byte	'IfxEray_Baudrate_2_5',0,2,0,22
	.byte	'IfxEray_Baudrate',0,6,67,3
	.word	76044
	.byte	22
	.byte	'IfxEray_BufferDirection',0,6,75,3
	.word	40547
	.byte	16,6,87,9,4,17
	.byte	'IfxEray_ClearErrorFlag_pemc',0,1,17
	.byte	'IfxEray_ClearErrorFlag_cna',0,2,17
	.byte	'IfxEray_ClearErrorFlag_sfbm',0,4,17
	.byte	'IfxEray_ClearErrorFlag_sfo',0,8,17
	.byte	'IfxEray_ClearErrorFlag_ccf',0,16,17
	.byte	'IfxEray_ClearErrorFlag_ccl',0,32,17
	.byte	'IfxEray_ClearErrorFlag_eerr',0,192,0,17
	.byte	'IfxEray_ClearErrorFlag_rfo',0,128,1,17
	.byte	'IfxEray_ClearErrorFlag_efa',0,128,2,17
	.byte	'IfxEray_ClearErrorFlag_iiba',0,128,4,17
	.byte	'IfxEray_ClearErrorFlag_ioba',0,128,8,17
	.byte	'IfxEray_ClearErrorFlag_mhf',0,128,16,17
	.byte	'IfxEray_ClearErrorFlag_eda',0,128,128,4,17
	.byte	'IfxEray_ClearErrorFlag_ltva',0,128,128,8,17
	.byte	'IfxEray_ClearErrorFlag_taba',0,128,128,16,17
	.byte	'IfxEray_ClearErrorFlag_edb',0,128,128,128,8,17
	.byte	'IfxEray_ClearErrorFlag_ltvb',0,128,128,128,16,17
	.byte	'IfxEray_ClearErrorFlag_tabb',0,128,128,128,32,0,22
	.byte	'IfxEray_ClearErrorFlag',0,6,107,3
	.word	76173
	.byte	16,6,111,9,4,17
	.byte	'IfxEray_ClearStatusFlag_wst',0,1,17
	.byte	'IfxEray_ClearStatusFlag_cas',0,2,17
	.byte	'IfxEray_ClearStatusFlag_cycs',0,4,17
	.byte	'IfxEray_ClearStatusFlag_txi',0,8,17
	.byte	'IfxEray_ClearStatusFlag_rxi',0,16,17
	.byte	'IfxEray_ClearStatusFlag_rfne',0,32,17
	.byte	'IfxEray_ClearStatusFlag_rfcl',0,192,0,17
	.byte	'IfxEray_ClearStatusFlag_nmvc',0,128,1,17
	.byte	'IfxEray_ClearStatusFlag_ti0',0,128,2,17
	.byte	'IfxEray_ClearStatusFlag_ti1',0,128,4,17
	.byte	'IfxEray_ClearStatusFlag_tibc',0,128,8,17
	.byte	'IfxEray_ClearStatusFlag_tobc',0,128,16,17
	.byte	'IfxEray_ClearStatusFlag_swe',0,128,32,17
	.byte	'IfxEray_ClearStatusFlag_sucs',0,128,192,0,17
	.byte	'IfxEray_ClearStatusFlag_mbsi',0,128,128,1,17
	.byte	'IfxEray_ClearStatusFlag_sds',0,128,128,2,17
	.byte	'IfxEray_ClearStatusFlag_wupa',0,128,128,4,17
	.byte	'IfxEray_ClearStatusFlag_mtsa',0,128,128,8,17
	.byte	'IfxEray_ClearStatusFlag_wupb',0,128,128,128,8,17
	.byte	'IfxEray_ClearStatusFlag_mtsb',0,128,128,128,16,0,22
	.byte	'IfxEray_ClearStatusFlag',0,6,133,1,3
	.word	76762
	.byte	16,6,151,1,9,1,17
	.byte	'IfxEray_ExternalOffset_noCorrection',0,1,17
	.byte	'IfxEray_ExternalOffset_correctionSubtracted',0,2,17
	.byte	'IfxEray_ExternalOffset_correctionAdded',0,3,0,22
	.byte	'IfxEray_ExternalOffset',0,6,156,1,3
	.word	77436
	.byte	16,6,160,1,9,1,17
	.byte	'IfxEray_ExternalOffsetCorrection_0',0,0,17
	.byte	'IfxEray_ExternalOffsetCorrection_1',0,1,17
	.byte	'IfxEray_ExternalOffsetCorrection_2',0,2,17
	.byte	'IfxEray_ExternalOffsetCorrection_3',0,3,17
	.byte	'IfxEray_ExternalOffsetCorrection_4',0,4,17
	.byte	'IfxEray_ExternalOffsetCorrection_5',0,5,17
	.byte	'IfxEray_ExternalOffsetCorrection_6',0,6,17
	.byte	'IfxEray_ExternalOffsetCorrection_7',0,7,0,22
	.byte	'IfxEray_ExternalOffsetCorrection',0,6,170,1,3
	.word	77600
	.byte	16,6,174,1,9,1,17
	.byte	'IfxEray_ExternalRate_noCorrection',0,1,17
	.byte	'IfxEray_ExternalRate_correctionSubtracted',0,2,17
	.byte	'IfxEray_ExternalRate_correctionAdded',0,3,0,22
	.byte	'IfxEray_ExternalRate',0,6,179,1,3
	.word	77945
	.byte	16,6,183,1,9,1,17
	.byte	'IfxEray_ExternalRateCorrection_0',0,0,17
	.byte	'IfxEray_ExternalRateCorrection_1',0,1,17
	.byte	'IfxEray_ExternalRateCorrection_2',0,2,17
	.byte	'IfxEray_ExternalRateCorrection_3',0,3,17
	.byte	'IfxEray_ExternalRateCorrection_4',0,4,17
	.byte	'IfxEray_ExternalRateCorrection_5',0,5,17
	.byte	'IfxEray_ExternalRateCorrection_6',0,6,17
	.byte	'IfxEray_ExternalRateCorrection_7',0,7,0,22
	.byte	'IfxEray_ExternalRateCorrection',0,6,193,1,3
	.word	78101
	.byte	16,6,197,1,9,1,17
	.byte	'IfxEray_IdleDynamicSlots_0',0,0,17
	.byte	'IfxEray_IdleDynamicSlots_1',0,1,17
	.byte	'IfxEray_IdleDynamicSlots_2',0,2,0,22
	.byte	'IfxEray_IdleDynamicSlots',0,6,202,1,3
	.word	78428
	.byte	16,6,206,1,9,1,17
	.byte	'IfxEray_ListenTimeOutNoise_2',0,1,17
	.byte	'IfxEray_ListenTimeOutNoise_3',0,2,17
	.byte	'IfxEray_ListenTimeOutNoise_4',0,3,17
	.byte	'IfxEray_ListenTimeOutNoise_5',0,4,17
	.byte	'IfxEray_ListenTimeOutNoise_6',0,5,17
	.byte	'IfxEray_ListenTimeOutNoise_7',0,6,17
	.byte	'IfxEray_ListenTimeOutNoise_8',0,7,17
	.byte	'IfxEray_ListenTimeOutNoise_9',0,8,17
	.byte	'IfxEray_ListenTimeOutNoise_10',0,9,17
	.byte	'IfxEray_ListenTimeOutNoise_11',0,10,17
	.byte	'IfxEray_ListenTimeOutNoise_12',0,11,17
	.byte	'IfxEray_ListenTimeOutNoise_13',0,12,17
	.byte	'IfxEray_ListenTimeOutNoise_14',0,13,17
	.byte	'IfxEray_ListenTimeOutNoise_15',0,14,17
	.byte	'IfxEray_ListenTimeOutNoise_16',0,15,0,22
	.byte	'IfxEray_ListenTimeOutNoise',0,6,223,1,3
	.word	78556
	.byte	16,6,227,1,9,1,17
	.byte	'IfxEray_MaxSynchFrames_2',0,2,17
	.byte	'IfxEray_MaxSynchFrames_3',0,3,17
	.byte	'IfxEray_MaxSynchFrames_4',0,4,17
	.byte	'IfxEray_MaxSynchFrames_5',0,5,17
	.byte	'IfxEray_MaxSynchFrames_6',0,6,17
	.byte	'IfxEray_MaxSynchFrames_7',0,7,17
	.byte	'IfxEray_MaxSynchFrames_8',0,8,17
	.byte	'IfxEray_MaxSynchFrames_9',0,9,17
	.byte	'IfxEray_MaxSynchFrames_10',0,10,17
	.byte	'IfxEray_MaxSynchFrames_11',0,11,17
	.byte	'IfxEray_MaxSynchFrames_12',0,12,17
	.byte	'IfxEray_MaxSynchFrames_13',0,13,17
	.byte	'IfxEray_MaxSynchFrames_14',0,14,17
	.byte	'IfxEray_MaxSynchFrames_15',0,15,0,22
	.byte	'IfxEray_MaxSynchFrames',0,6,243,1,3
	.word	79071
	.byte	22
	.byte	'IfxEray_PocCommand',0,6,134,2,3
	.word	39917
	.byte	16,6,138,2,9,1,17
	.byte	'IfxEray_PocState_defaultConfig',0,0,17
	.byte	'IfxEray_PocState_ready',0,1,17
	.byte	'IfxEray_PocState_normalActive',0,2,17
	.byte	'IfxEray_PocState_normalPassive',0,3,17
	.byte	'IfxEray_PocState_halt',0,4,17
	.byte	'IfxEray_PocState_monitor',0,5,17
	.byte	'IfxEray_PocState_config',0,15,17
	.byte	'IfxEray_PocState_wakeupStandby',0,16,17
	.byte	'IfxEray_PocState_wakeupListen',0,17,17
	.byte	'IfxEray_PocState_wakeupSend',0,18,17
	.byte	'IfxEray_PocState_wakeupDetect',0,19,17
	.byte	'IfxEray_PocState_startup',0,32,17
	.byte	'IfxEray_PocState_coldStartListen',0,33,17
	.byte	'IfxEray_PocState_collisionResolution',0,34,17
	.byte	'IfxEray_PocState_consistencyCheck',0,35,17
	.byte	'IfxEray_PocState_gap',0,36,17
	.byte	'IfxEray_PocState_join',0,37,17
	.byte	'IfxEray_PocState_integrationCheck',0,38,17
	.byte	'IfxEray_PocState_integrationListen',0,39,17
	.byte	'IfxEray_PocState_integrationConsistencyCheck',0,40,17
	.byte	'IfxEray_PocState_initializeSchedule',0,41,17
	.byte	'IfxEray_PocState_staruAborted',0,42,17
	.byte	'IfxEray_PocState_startupSucced',0,43,0,22
	.byte	'IfxEray_PocState',0,6,163,2,3
	.word	79522
	.byte	16,6,167,2,9,1,17
	.byte	'IfxEray_ReceiveChannel_both',0,0,17
	.byte	'IfxEray_ReceiveChannel_b',0,1,17
	.byte	'IfxEray_ReceiveChannel_a',0,2,17
	.byte	'IfxEray_ReceiveChannel_none',0,3,0,22
	.byte	'IfxEray_ReceiveChannel',0,6,173,2,3
	.word	80289
	.byte	16,6,178,2,9,1,17
	.byte	'IfxEray_SleepMode_enable',0,0,17
	.byte	'IfxEray_SleepMode_disable',0,1,0,22
	.byte	'IfxEray_SleepMode',0,6,182,2,3
	.word	80442
	.byte	16,6,186,2,9,1,17
	.byte	'IfxEray_StrobePosition_5',0,0,17
	.byte	'IfxEray_StrobePosition_4',0,1,17
	.byte	'IfxEray_StrobePosition_6',0,2,0,22
	.byte	'IfxEray_StrobePosition',0,6,191,2,3
	.word	80531
	.byte	22
	.byte	'IfxEray_TransmissionMode',0,6,199,2,3
	.word	40622
	.byte	16,6,203,2,9,1,17
	.byte	'IfxEray_TransmissionSlotMode_all',0,0,17
	.byte	'IfxEray_TransmissionSlotMode_single',0,1,0,22
	.byte	'IfxEray_TransmissionSlotMode',0,6,207,2,3
	.word	80685
	.byte	16,6,211,2,9,1,17
	.byte	'IfxEray_WakeupChannel_a',0,0,17
	.byte	'IfxEray_WakeupChannel_b',0,1,0,22
	.byte	'IfxEray_WakeupChannel',0,6,215,2,3
	.word	80803
	.byte	22
	.byte	'IfxEray_Header',0,6,241,2,3
	.word	40705
	.byte	22
	.byte	'IfxEray_ReceivedHeader',0,6,128,3,3
	.word	40300
	.byte	22
	.byte	'IfxEray_SlotConfig',0,6,138,3,3
	.word	41039
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L51:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,11
	.byte	0,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,1,1,11,15,73,19,0,0,14,33,0,47,15,0,0,15,53,0,73,19,0,0,16,4,1,58,15,59,15,57,15,11,15,0,0,17
	.byte	40,0,3,8,28,13,0,0,18,46,1,49,19,0,0,19,5,0,49,19,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,22,0,3,8,58,15,59,15,57,15,73,19,0,0,23,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L52:
	.word	.L251-.L250
.L250:
	.half	3
	.word	.L253-.L252
.L252:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.h',0,0,0,0
	.byte	'IfxEray_regdef.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxEray_cfg.h',0
	.byte	0,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxEray_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0,0
.L253:
.L251:
	.sdecl	'.debug_info',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_info'
.L53:
	.word	260
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L56,.L55
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_clearAllFlags',0,1,104,6,1,1,1
	.word	.L29,.L118,.L28
	.byte	4
	.byte	'eray',0,1,104,38
	.word	.L119,.L120
	.byte	5
	.word	.L29,.L118
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_line'
.L55:
	.word	.L255-.L254
.L254:
	.half	3
	.word	.L257-.L256
.L256:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L257:
	.byte	5,20,7,0,5,2
	.word	.L29
	.byte	3,233,0,1,5,18,1,9
	.half	.L258-.L29
	.byte	3,1,1,9
	.half	.L259-.L258
	.byte	3,1,1,9
	.half	.L260-.L259
	.byte	3,1,1,5,20,9
	.half	.L261-.L260
	.byte	3,1,1,5,18,9
	.half	.L262-.L261
	.byte	1,5,1,9
	.half	.L263-.L262
	.byte	3,1,1,7,9
	.half	.L57-.L263
	.byte	0,1,1
.L255:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_ranges'
.L56:
	.word	-1,.L29,0,.L57-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_info'
.L58:
	.word	267
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_enableInterruptLines',0,1,114,6,1,1,1
	.word	.L31,.L121,.L30
	.byte	4
	.byte	'eray',0,1,114,45
	.word	.L119,.L122
	.byte	5
	.word	.L31,.L121
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_line'
.L60:
	.word	.L265-.L264
.L264:
	.half	3
	.word	.L267-.L266
.L266:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L267:
	.byte	5,21,7,0,5,2
	.word	.L31
	.byte	3,243,0,1,5,19,1,5,21,9
	.half	.L268-.L31
	.byte	3,1,1,5,19,3,4,1,5,21,9
	.half	.L269-.L268
	.byte	3,125,1,5,19,3,127,1,9
	.half	.L270-.L269
	.byte	3,1,1,9
	.half	.L271-.L270
	.byte	3,3,1,5,21,9
	.half	.L272-.L271
	.byte	3,126,1,5,19,9
	.half	.L273-.L272
	.byte	1,5,21,9
	.half	.L274-.L273
	.byte	3,1,1,5,19,9
	.half	.L275-.L274
	.byte	1,9
	.half	.L24-.L275
	.byte	3,1,1,5,1,9
	.half	.L276-.L24
	.byte	3,8,1,7,9
	.half	.L62-.L276
	.byte	0,1,1
.L265:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L31,0,.L62-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_info'
.L63:
	.word	402
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L66,.L65
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_setMessageBufferInterruptDestination',0,1,186,1,6,1,1,1
	.word	.L39,.L123,.L38
	.byte	4
	.byte	'eray',0,1,186,1,61
	.word	.L119,.L124
	.byte	4
	.byte	'messageBuffer',0,1,186,1,73
	.word	.L125,.L126
	.byte	4
	.byte	'messageBufferDestination',0,1,186,1,94
	.word	.L125,.L127
	.byte	5
	.word	.L128
	.byte	6
	.byte	'ix',0,1,188,1,21
	.word	.L125,.L129
	.byte	6
	.byte	'mask',0,1,189,1,21
	.word	.L130,.L131
	.byte	6
	.byte	'msicSFR',0,1,190,1,21
	.word	.L132,.L133
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_line'
.L65:
	.word	.L278-.L277
.L277:
	.half	3
	.word	.L280-.L279
.L279:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L280:
	.byte	5,31,7,0,5,2
	.word	.L39
	.byte	3,188,1,1,5,63,3,1,1,5,37,9
	.half	.L281-.L39
	.byte	3,127,1,5,31,9
	.half	.L282-.L281
	.byte	3,127,1,5,33,9
	.half	.L229-.L282
	.byte	3,1,1,5,63,3,1,1,5,1,9
	.half	.L230-.L229
	.byte	3,10,1,7,9
	.half	.L67-.L230
	.byte	0,1,1
.L278:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_ranges'
.L66:
	.word	-1,.L39,0,.L67-.L39,0,0
.L128:
	.word	-1,.L39,0,.L123-.L39,-1,.L41,0,.L117-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_info'
.L68:
	.word	382
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_setNewDataInterruptDestination',0,1,203,1,6,1,1,1
	.word	.L43,.L134,.L42
	.byte	4
	.byte	'eray',0,1,203,1,55
	.word	.L119,.L135
	.byte	4
	.byte	'ndat',0,1,203,1,67
	.word	.L125,.L136
	.byte	4
	.byte	'ndatDestination',0,1,203,1,79
	.word	.L125,.L137
	.byte	5
	.word	.L43,.L134
	.byte	6
	.byte	'ix',0,1,205,1,21
	.word	.L125,.L138
	.byte	6
	.byte	'mask',0,1,206,1,21
	.word	.L130,.L139
	.byte	6
	.byte	'ndicSFR',0,1,207,1,21
	.word	.L140,.L141
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_line'
.L70:
	.word	.L284-.L283
.L283:
	.half	3
	.word	.L286-.L285
.L285:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L286:
	.byte	5,31,7,0,5,2
	.word	.L43
	.byte	3,205,1,1,5,63,3,1,1,5,37,9
	.half	.L287-.L43
	.byte	3,127,1,5,33,9
	.half	.L288-.L287
	.byte	1,5,31,9
	.half	.L236-.L288
	.byte	3,127,1,5,63,3,2,1,5,1,9
	.half	.L237-.L236
	.byte	3,10,1,7,9
	.half	.L72-.L237
	.byte	0,1,1
.L284:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L43,0,.L72-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_info'
.L73:
	.word	260
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L76,.L75
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_resetModule',0,1,172,1,6,1,1,1
	.word	.L37,.L142,.L36
	.byte	4
	.byte	'eray',0,1,172,1,36
	.word	.L119,.L143
	.byte	5
	.word	.L37,.L142
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_line'
.L75:
	.word	.L290-.L289
.L289:
	.half	3
	.word	.L292-.L291
.L291:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L292:
	.byte	5,18,7,0,5,2
	.word	.L37
	.byte	3,173,1,1,5,16,9
	.half	.L293-.L37
	.byte	3,3,1,5,23,9
	.half	.L294-.L293
	.byte	3,125,1,5,18,9
	.half	.L295-.L294
	.byte	3,1,1,5,23,9
	.half	.L296-.L295
	.byte	1,5,25,9
	.half	.L10-.L296
	.byte	3,2,1,5,38,9
	.half	.L297-.L10
	.byte	1,5,20,7,9
	.half	.L298-.L297
	.byte	3,5,1,5,25,9
	.half	.L299-.L298
	.byte	1,5,1,9
	.half	.L300-.L299
	.byte	3,1,1,7,9
	.half	.L77-.L300
	.byte	0,1,1
.L290:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L37,0,.L77-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_info'
.L78:
	.word	288
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L81,.L80
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_changePocState',0,1,80,9
	.word	.L125
	.byte	1,1,1
	.word	.L5,.L144,.L27
	.byte	4
	.byte	'eray',0,1,80,42
	.word	.L119,.L145
	.byte	4
	.byte	'pocCommand',0,1,80,67
	.word	.L146,.L147
	.byte	5
	.word	.L5,.L144
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_line'
.L80:
	.word	.L302-.L301
.L301:
	.half	3
	.word	.L304-.L303
.L303:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L304:
	.byte	5,25,7,0,5,2
	.word	.L5
	.byte	3,212,0,1,5,35,9
	.half	.L305-.L5
	.byte	1,5,18,7,9
	.half	.L306-.L305
	.byte	3,3,1,5,23,9
	.half	.L307-.L306
	.byte	1,5,22,9
	.half	.L308-.L307
	.byte	3,3,1,5,1,9
	.half	.L309-.L308
	.byte	3,10,1,7,9
	.half	.L82-.L309
	.byte	0,1,1
.L302:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_ranges'
.L81:
	.word	-1,.L5,0,.L82-.L5,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_info'
.L83:
	.word	260
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L86,.L85
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_setPocReady',0,1,220,1,6,1,1,1
	.word	.L15,.L148,.L44
	.byte	4
	.byte	'eray',0,1,220,1,36
	.word	.L119,.L149
	.byte	5
	.word	.L15,.L148
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_line'
.L85:
	.word	.L311-.L310
.L310:
	.half	3
	.word	.L313-.L312
.L312:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L313:
	.byte	5,25,7,0,5,2
	.word	.L15
	.byte	3,222,1,1,5,35,9
	.half	.L314-.L15
	.byte	1,5,25,7,9
	.half	.L315-.L314
	.byte	3,4,1,5,23,1,5,25,9
	.half	.L316-.L315
	.byte	3,1,1,5,23,1,5,18,9
	.half	.L317-.L316
	.byte	3,1,1,5,23,9
	.half	.L318-.L317
	.byte	1,5,1,9
	.half	.L319-.L318
	.byte	3,1,1,7,9
	.half	.L87-.L319
	.byte	0,1,1
.L311:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_ranges'
.L86:
	.word	-1,.L15,0,.L87-.L15,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_info'
.L88:
	.word	442
	.half	3
	.word	.L89
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L91,.L90
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_calcHeaderCrc',0,1,35,8
	.word	.L150
	.byte	1,1,1
	.word	.L26,.L151,.L25
	.byte	4
	.byte	'payloadLength',0,1,35,36
	.word	.L125,.L152
	.byte	4
	.byte	'frameId',0,1,35,58
	.word	.L150,.L153
	.byte	4
	.byte	'startupFrameIndicator',0,1,35,75
	.word	.L125,.L154
	.byte	4
	.byte	'syncFrameIndicator',0,1,35,106
	.word	.L125,.L155
	.byte	5
	.word	.L26,.L151
	.byte	6
	.byte	'headerValue',0,1,37,12
	.word	.L130,.L156
	.byte	6
	.byte	'length',0,1,41,12
	.word	.L130,.L157
	.byte	6
	.byte	'crcNext',0,1,42,12
	.word	.L130,.L158
	.byte	6
	.byte	'crcRegX',0,1,44,12
	.word	.L130,.L159
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_line'
.L90:
	.word	.L321-.L320
.L320:
	.half	3
	.word	.L323-.L322
.L322:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L323:
	.byte	5,8,7,0,5,2
	.word	.L26
	.byte	3,34,1,5,47,9
	.half	.L216-.L26
	.byte	3,2,1,5,54,9
	.half	.L217-.L216
	.byte	1,5,87,9
	.half	.L324-.L217
	.byte	1,5,94,9
	.half	.L325-.L324
	.byte	1,5,61,9
	.half	.L326-.L325
	.byte	1,5,113,9
	.half	.L327-.L326
	.byte	1,5,145,1,9
	.half	.L328-.L327
	.byte	1,5,20,9
	.half	.L329-.L328
	.byte	3,4,1,5,122,9
	.half	.L218-.L329
	.byte	3,124,1,5,101,9
	.half	.L330-.L218
	.byte	1,5,128,1,9
	.half	.L331-.L330
	.byte	1,5,17,9
	.half	.L332-.L331
	.byte	3,10,1,9
	.half	.L219-.L332
	.byte	3,1,1,5,21,9
	.half	.L2-.L219
	.byte	3,5,1,5,24,9
	.half	.L333-.L2
	.byte	3,4,1,5,37,9
	.half	.L334-.L333
	.byte	3,125,1,5,17,9
	.half	.L335-.L334
	.byte	3,12,1,5,18,9
	.half	.L336-.L335
	.byte	3,113,1,5,9,9
	.half	.L337-.L336
	.byte	3,6,1,9
	.half	.L220-.L337
	.byte	3,11,1,5,24,7,9
	.half	.L338-.L220
	.byte	3,2,1,5,21,9
	.half	.L221-.L338
	.byte	1,5,20,9
	.half	.L3-.L221
	.byte	3,109,1,5,13,7,9
	.half	.L339-.L3
	.byte	3,23,1,5,1,3,3,1,7,9
	.half	.L92-.L339
	.byte	0,1,1
.L321:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_ranges'
.L91:
	.word	-1,.L26,0,.L92-.L26,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_readData')
	.sect	'.debug_info'
.L93:
	.word	352
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L96,.L95
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_readData',0,1,132,1,6,1,1,1
	.word	.L33,.L160,.L32
	.byte	4
	.byte	'eray',0,1,132,1,33
	.word	.L119,.L161
	.byte	4
	.byte	'data',0,1,132,1,47
	.word	.L162,.L163
	.byte	4
	.byte	'payloadLength',0,1,132,1,59
	.word	.L125,.L164
	.byte	5
	.word	.L33,.L160
	.byte	5
	.word	.L165,.L7
	.byte	6
	.byte	'length',0,1,136,1,16
	.word	.L150,.L166
	.byte	6
	.byte	'index',0,1,137,1,16
	.word	.L125,.L167
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_readData')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_readData')
	.sect	'.debug_line'
.L95:
	.word	.L341-.L340
.L340:
	.half	3
	.word	.L343-.L342
.L342:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L343:
	.byte	5,5,7,0,5,2
	.word	.L33
	.byte	3,133,1,1,5,40,7,9
	.half	.L165-.L33
	.byte	3,2,1,5,27,3,5,1,5,40,9
	.half	.L222-.L165
	.byte	3,123,1,5,20,9
	.half	.L344-.L222
	.byte	3,3,1,5,39,1,5,46,9
	.half	.L9-.L344
	.byte	1,5,43,3,2,1,5,46,9
	.half	.L223-.L9
	.byte	3,126,1,5,21,3,2,1,5,39,9
	.half	.L8-.L223
	.byte	3,126,1,5,1,7,9
	.half	.L7-.L8
	.byte	3,5,1,7,9
	.half	.L97-.L7
	.byte	0,1,1
.L341:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_readData')
	.sect	'.debug_ranges'
.L96:
	.word	-1,.L33,0,.L97-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_info'
.L98:
	.word	414
	.half	3
	.word	.L99
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L101,.L100
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_readFrame',0,1,147,1,6,1,1,1
	.word	.L35,.L168,.L34
	.byte	4
	.byte	'eray',0,1,147,1,34
	.word	.L119,.L169
	.byte	4
	.byte	'header',0,1,147,1,64
	.word	.L170,.L171
	.byte	4
	.byte	'data',0,1,147,1,80
	.word	.L162,.L172
	.byte	4
	.byte	'maxPayloadLength',0,1,147,1,96
	.word	.L173,.L174
	.byte	5
	.word	.L35,.L168
	.byte	5
	.word	.L35,.L175
	.byte	6
	.byte	'rdhs1',0,1,150,1,24
	.word	.L176,.L177
	.byte	5
	.word	.L178,.L175
	.byte	6
	.byte	'rdhs2',0,1,152,1,24
	.word	.L179,.L180
	.byte	5
	.word	.L178,.L175
	.byte	6
	.byte	'rdhs3',0,1,154,1,24
	.word	.L181,.L182
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_abbrev'
.L99:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_line'
.L100:
	.word	.L346-.L345
.L345:
	.half	3
	.word	.L348-.L347
.L347:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L348:
	.byte	5,55,7,0,5,2
	.word	.L35
	.byte	3,150,1,1,5,15,9
	.half	.L178-.L35
	.byte	3,6,1,5,51,9
	.half	.L349-.L178
	.byte	1,5,55,3,124,1,9
	.half	.L226-.L349
	.byte	3,2,1,5,42,9
	.half	.L228-.L226
	.byte	3,2,1,5,51,9
	.half	.L350-.L228
	.byte	3,1,1,5,15,9
	.half	.L351-.L350
	.byte	1,5,51,9
	.half	.L352-.L351
	.byte	3,1,1,5,42,9
	.half	.L227-.L352
	.byte	3,127,1,5,15,9
	.half	.L353-.L227
	.byte	3,1,1,5,42,9
	.half	.L354-.L353
	.byte	1,5,51,9
	.half	.L355-.L354
	.byte	3,1,1,5,15,9
	.half	.L356-.L355
	.byte	1,5,51,9
	.half	.L357-.L356
	.byte	1,9
	.half	.L358-.L357
	.byte	3,1,1,9
	.half	.L359-.L358
	.byte	3,1,1,5,42,9
	.half	.L360-.L359
	.byte	3,126,1,5,15,9
	.half	.L361-.L360
	.byte	3,1,1,5,42,9
	.half	.L362-.L361
	.byte	3,1,1,9
	.half	.L363-.L362
	.byte	3,127,1,5,51,9
	.half	.L364-.L363
	.byte	3,2,1,9
	.half	.L365-.L364
	.byte	3,1,1,5,42,9
	.half	.L366-.L365
	.byte	3,127,1,9
	.half	.L367-.L366
	.byte	3,1,1,5,51,9
	.half	.L368-.L367
	.byte	3,1,1,5,42,9
	.half	.L369-.L368
	.byte	1,5,41,9
	.half	.L175-.L369
	.byte	3,3,1,5,77,1,5,41,9
	.half	.L224-.L175
	.byte	1,5,57,9
	.half	.L370-.L224
	.byte	1,5,77,9
	.half	.L371-.L370
	.byte	1,5,1,9
	.half	.L102-.L371
	.byte	3,1,0,1,1
.L346:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_ranges'
.L101:
	.word	-1,.L35,0,.L102-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_info'
.L103:
	.word	485
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L106,.L105
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_setSlot',0,1,233,1,6,1,1,1
	.word	.L46,.L183,.L45
	.byte	4
	.byte	'eray',0,1,233,1,32
	.word	.L119,.L184
	.byte	4
	.byte	'header',0,1,233,1,60
	.word	.L185,.L186
	.byte	4
	.byte	'data',0,1,233,1,82
	.word	.L187,.L188
	.byte	4
	.byte	'slotConfig',0,1,233,1,114
	.word	.L189,.L190
	.byte	5
	.word	.L46,.L183
	.byte	6
	.word	.L191,.L16,.L192
	.byte	7
	.word	.L193,.L194
	.byte	8
	.word	.L195,.L16,.L192
	.byte	0,5
	.word	.L196,.L197
	.byte	9
	.byte	'wrhs1',0,1,242,1,28
	.word	.L198,.L199
	.byte	0,5
	.word	.L197,.L200
	.byte	9
	.byte	'wrhs2',0,1,255,1,28
	.word	.L201,.L202
	.byte	0,6
	.word	.L203,.L19,.L204
	.byte	7
	.word	.L205,.L206
	.byte	8
	.word	.L207,.L19,.L204
	.byte	0,6
	.word	.L191,.L20,.L208
	.byte	7
	.word	.L193,.L194
	.byte	8
	.word	.L195,.L20,.L208
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_line'
.L105:
	.word	.L373-.L372
.L372:
	.half	3
	.word	.L375-.L374
.L374:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.h',0,0,0,0,0
.L375:
	.byte	5,6,7,0,5,2
	.word	.L46
	.byte	3,232,1,1,4,2,5,17,9
	.half	.L242-.L46
	.byte	3,185,7,1,5,25,9
	.half	.L16-.L242
	.byte	1,4,1,5,62,9
	.half	.L192-.L16
	.byte	3,202,120,1,5,5,7,9
	.half	.L376-.L192
	.byte	3,3,1,5,27,7,9
	.half	.L196-.L376
	.byte	3,4,1,5,35,3,1,1,5,27,9
	.half	.L243-.L196
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L377-.L243
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L378-.L377
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L379-.L378
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L380-.L379
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L381-.L380
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L382-.L381
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L383-.L382
	.byte	1,3,1,1,5,21,9
	.half	.L197-.L383
	.byte	3,4,1,5,23,9
	.half	.L244-.L197
	.byte	3,2,1,5,13,9
	.half	.L384-.L244
	.byte	1,5,59,7,9
	.half	.L385-.L384
	.byte	3,2,1,5,82,9
	.half	.L386-.L385
	.byte	1,5,99,9
	.half	.L387-.L386
	.byte	1,5,130,1,9
	.half	.L388-.L387
	.byte	1,5,29,9
	.half	.L238-.L388
	.byte	1,5,35,9
	.half	.L18-.L238
	.byte	3,3,1,5,27,9
	.half	.L389-.L18
	.byte	1,3,1,1,5,31,9
	.half	.L200-.L389
	.byte	3,3,1,5,23,9
	.half	.L390-.L200
	.byte	1,5,41,9
	.half	.L17-.L390
	.byte	3,3,1,5,17,9
	.half	.L246-.L17
	.byte	3,2,1,5,36,9
	.half	.L391-.L246
	.byte	1,5,24,9
	.half	.L392-.L391
	.byte	1,5,17,9
	.half	.L393-.L392
	.byte	3,1,1,5,36,9
	.half	.L394-.L393
	.byte	1,5,24,9
	.half	.L395-.L394
	.byte	1,5,17,9
	.half	.L396-.L395
	.byte	3,1,1,5,36,9
	.half	.L397-.L396
	.byte	1,5,24,9
	.half	.L398-.L397
	.byte	1,5,17,9
	.half	.L399-.L398
	.byte	3,1,1,5,36,9
	.half	.L400-.L399
	.byte	1,5,24,9
	.half	.L401-.L400
	.byte	1,4,2,5,25,9
	.half	.L19-.L401
	.byte	3,149,7,1,4,1,5,64,9
	.half	.L204-.L19
	.byte	3,238,120,1,4,2,5,17,7,9
	.half	.L402-.L204
	.byte	3,140,7,1,5,25,9
	.half	.L20-.L402
	.byte	1,4,1,5,62,9
	.half	.L208-.L20
	.byte	3,247,120,1,5,1,7,9
	.half	.L403-.L208
	.byte	3,2,1,7,9
	.half	.L107-.L403
	.byte	0,1,1
.L373:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_ranges'
.L106:
	.word	-1,.L46,0,.L107-.L46,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_writeData')
	.sect	'.debug_info'
.L108:
	.word	353
	.half	3
	.word	.L109
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L111,.L110
	.byte	2
	.word	.L49
	.byte	3
	.byte	'IfxEray_writeData',0,1,158,2,6,1,1,1
	.word	.L48,.L209,.L47
	.byte	4
	.byte	'eray',0,1,158,2,34
	.word	.L119,.L210
	.byte	4
	.byte	'data',0,1,158,2,54
	.word	.L187,.L211
	.byte	4
	.byte	'payloadLength',0,1,158,2,66
	.word	.L125,.L212
	.byte	5
	.word	.L48,.L209
	.byte	5
	.word	.L213,.L21
	.byte	6
	.byte	'length',0,1,162,2,16
	.word	.L150,.L214
	.byte	6
	.byte	'index',0,1,163,2,16
	.word	.L125,.L215
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_writeData')
	.sect	'.debug_abbrev'
.L109:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_writeData')
	.sect	'.debug_line'
.L110:
	.word	.L405-.L404
.L404:
	.half	3
	.word	.L407-.L406
.L406:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L407:
	.byte	5,5,7,0,5,2
	.word	.L48
	.byte	3,159,2,1,5,40,7,9
	.half	.L213-.L48
	.byte	3,2,1,5,17,3,5,1,5,40,9
	.half	.L248-.L213
	.byte	3,123,1,5,20,9
	.half	.L408-.L248
	.byte	3,3,1,5,39,1,5,46,9
	.half	.L23-.L408
	.byte	1,5,38,3,2,1,5,46,9
	.half	.L249-.L23
	.byte	3,126,1,5,36,3,2,1,5,39,9
	.half	.L22-.L249
	.byte	3,126,1,5,1,7,9
	.half	.L21-.L22
	.byte	3,5,1,7,9
	.half	.L112-.L21
	.byte	0,1,1
.L405:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_writeData')
	.sect	'.debug_ranges'
.L111:
	.word	-1,.L48,0,.L112-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L113:
	.word	221
	.half	3
	.word	.L114
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L116,.L115
	.byte	2
	.word	.L49
	.byte	3
	.byte	'.cocofun_4',0,1,186,1,6,1
	.word	.L41,.L117,.L40
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L115:
	.word	.L410-.L409
.L409:
	.half	3
	.word	.L412-.L411
.L411:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L412:
	.byte	5,63,7,0,5,2
	.word	.L41
	.byte	3,189,1,1,5,77,9
	.half	.L231-.L41
	.byte	1,5,71,9
	.half	.L232-.L231
	.byte	1,5,29,9
	.half	.L413-.L232
	.byte	1,5,16,9
	.half	.L235-.L413
	.byte	3,4,1,5,5,9
	.half	.L234-.L235
	.byte	3,126,1,5,23,7,9
	.half	.L414-.L234
	.byte	3,2,1,5,20,9
	.half	.L233-.L414
	.byte	1,5,28,1,5,20,9
	.half	.L11-.L233
	.byte	3,4,1,9
	.half	.L117-.L11
	.byte	0,1,1,5,63,0,5,2
	.word	.L41
	.byte	3,206,1,1,5,77,9
	.half	.L231-.L41
	.byte	1,5,71,9
	.half	.L232-.L231
	.byte	1,5,29,9
	.half	.L413-.L232
	.byte	1,5,16,9
	.half	.L235-.L413
	.byte	3,4,1,5,5,9
	.half	.L234-.L235
	.byte	3,126,1,5,23,7,9
	.half	.L414-.L234
	.byte	3,2,1,5,20,9
	.half	.L233-.L414
	.byte	1,5,28,1,5,20,9
	.half	.L11-.L233
	.byte	3,4,1,9
	.half	.L415-.L11
	.byte	3,111,1,7,9
	.half	.L117-.L415
	.byte	0,1,1
.L410:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L116:
	.word	-1,.L41,0,.L117-.L41,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L117-.L41
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L26,0,.L151-.L26
	.half	2
	.byte	138,0
	.word	0,0
.L158:
	.word	-1,.L26,.L220-.L26,.L221-.L26
	.half	1
	.byte	95
	.word	0,0
.L159:
	.word	-1,.L26,.L2-.L26,.L151-.L26
	.half	1
	.byte	81
	.word	0,0
.L153:
	.word	-1,.L26,0,.L151-.L26
	.half	1
	.byte	85
	.word	0,0
.L156:
	.word	-1,.L26,.L219-.L26,.L151-.L26
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L157:
	.word	-1,.L26,.L218-.L26,.L151-.L26
	.half	1
	.byte	82
	.word	0,0
.L152:
	.word	-1,.L26,0,.L151-.L26
	.half	1
	.byte	84
	.word	0,0
.L154:
	.word	-1,.L26,0,.L151-.L26
	.half	1
	.byte	86
	.word	0,0
.L155:
	.word	-1,.L26,0,.L151-.L26
	.half	1
	.byte	87
	.word	.L216-.L26,.L217-.L26
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_loc'
.L27:
	.word	-1,.L5,0,.L144-.L5
	.half	2
	.byte	138,0
	.word	0,0
.L145:
	.word	-1,.L5,0,.L144-.L5
	.half	1
	.byte	100
	.word	0,0
.L147:
	.word	-1,.L5,0,.L144-.L5
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L118-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	-1,.L29,0,.L118-.L29
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L121-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L122:
	.word	-1,.L31,0,.L121-.L31
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_readData')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L160-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L163:
	.word	-1,.L33,0,.L160-.L33
	.half	1
	.byte	101
	.word	0,0
.L161:
	.word	-1,.L33,0,.L160-.L33
	.half	1
	.byte	100
	.word	0,0
.L167:
	.word	-1,.L33,.L9-.L33,.L223-.L33
	.half	1
	.byte	95
	.word	.L8-.L33,.L7-.L33
	.half	1
	.byte	95
	.word	0,0
.L166:
	.word	-1,.L33,.L222-.L33,.L7-.L33
	.half	1
	.byte	84
	.word	0,0
.L164:
	.word	-1,.L33,0,.L222-.L33
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L168-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L172:
	.word	-1,.L35,0,.L168-.L35
	.half	1
	.byte	102
	.word	.L224-.L35,.L168-.L35
	.half	1
	.byte	101
	.word	0,0
.L169:
	.word	-1,.L35,0,.L168-.L35
	.half	1
	.byte	100
	.word	0,0
.L171:
	.word	-1,.L35,0,.L224-.L35
	.half	1
	.byte	101
	.word	0,0
.L174:
	.word	-1,.L35,0,.L225-.L35
	.half	1
	.byte	84
	.word	0,0
.L177:
	.word	-1,.L35,.L178-.L35,.L226-.L35
	.half	1
	.byte	95
	.word	0,0
.L180:
	.word	-1,.L35,.L226-.L35,.L227-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L182:
	.word	-1,.L35,.L228-.L35,.L168-.L35
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L142-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L143:
	.word	-1,.L37,0,.L142-.L37
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L123-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L124:
	.word	-1,.L39,.L231-.L39,.L117-.L39
	.half	1
	.byte	100
	.word	0,.L123-.L39
	.half	1
	.byte	100
	.word	0,0
.L129:
	.word	-1,.L39,.L229-.L39,.L230-.L39
	.half	5
	.byte	144,32,157,32,0
	.word	.L231-.L39,.L232-.L39
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L131:
	.word	-1,.L39,.L229-.L39,.L230-.L39
	.half	1
	.byte	81
	.word	.L231-.L39,.L233-.L39
	.half	1
	.byte	81
	.word	.L11-.L39,.L12-.L39
	.half	1
	.byte	81
	.word	0,0
.L126:
	.word	-1,.L39,.L231-.L39,.L117-.L39
	.half	1
	.byte	84
	.word	0,.L123-.L39
	.half	1
	.byte	84
	.word	0,0
.L127:
	.word	-1,.L39,.L231-.L39,.L117-.L39
	.half	1
	.byte	85
	.word	0,.L123-.L39
	.half	1
	.byte	85
	.word	0,0
.L133:
	.word	-1,.L39,.L232-.L39,.L234-.L39
	.half	1
	.byte	95
	.word	.L235-.L39,.L117-.L39
	.half	1
	.byte	111
	.word	.L230-.L39,.L123-.L39
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L134-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L135:
	.word	-1,.L43,.L231-.L43,.L117-.L43
	.half	1
	.byte	100
	.word	0,.L134-.L43
	.half	1
	.byte	100
	.word	0,0
.L138:
	.word	-1,.L43,.L236-.L43,.L237-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	.L231-.L43,.L232-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L139:
	.word	-1,.L43,.L236-.L43,.L237-.L43
	.half	1
	.byte	81
	.word	.L231-.L43,.L233-.L43
	.half	1
	.byte	81
	.word	.L11-.L43,.L12-.L43
	.half	1
	.byte	81
	.word	0,0
.L136:
	.word	-1,.L43,.L231-.L43,.L117-.L43
	.half	1
	.byte	84
	.word	0,.L134-.L43
	.half	1
	.byte	84
	.word	0,0
.L137:
	.word	-1,.L43,.L231-.L43,.L117-.L43
	.half	1
	.byte	85
	.word	0,.L134-.L43
	.half	1
	.byte	85
	.word	0,0
.L141:
	.word	-1,.L43,.L232-.L43,.L234-.L43
	.half	1
	.byte	95
	.word	.L235-.L43,.L117-.L43
	.half	1
	.byte	111
	.word	.L237-.L43,.L134-.L43
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L15,0,.L148-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L149:
	.word	-1,.L15,0,.L148-.L15
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_loc'
.L45:
	.word	-1,.L46,0,.L183-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L188:
	.word	-1,.L46,0,.L238-.L46
	.half	1
	.byte	102
	.word	.L241-.L46,.L183-.L46
	.half	1
	.byte	109
	.word	.L247-.L46,.L246-.L46
	.half	1
	.byte	101
	.word	0,0
.L184:
	.word	-1,.L46,0,.L238-.L46
	.half	1
	.byte	100
	.word	.L239-.L46,.L183-.L46
	.half	1
	.byte	108
	.word	.L245-.L46,.L246-.L46
	.half	1
	.byte	100
	.word	0,0
.L194:
	.word	0,0
.L206:
	.word	0,0
.L186:
	.word	-1,.L46,0,.L238-.L46
	.half	1
	.byte	101
	.word	.L240-.L46,.L20-.L46
	.half	1
	.byte	111
	.word	0,0
.L190:
	.word	-1,.L46,0,.L238-.L46
	.half	1
	.byte	103
	.word	.L242-.L46,.L183-.L46
	.half	1
	.byte	110
	.word	0,0
.L199:
	.word	-1,.L46,.L243-.L46,.L238-.L46
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L202:
	.word	-1,.L46,.L244-.L46,.L17-.L46
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_writeData')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L209-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L211:
	.word	-1,.L48,0,.L209-.L48
	.half	1
	.byte	101
	.word	0,0
.L210:
	.word	-1,.L48,0,.L209-.L48
	.half	1
	.byte	100
	.word	0,0
.L215:
	.word	-1,.L48,.L23-.L48,.L249-.L48
	.half	1
	.byte	95
	.word	.L22-.L48,.L21-.L48
	.half	1
	.byte	95
	.word	0,0
.L214:
	.word	-1,.L48,.L248-.L48,.L21-.L48
	.half	1
	.byte	84
	.word	0,0
.L212:
	.word	-1,.L48,0,.L248-.L48
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L416:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L26,.L151-.L26
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L5,.L144-.L5
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L29,.L118-.L29
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_frame'
	.word	20
	.word	.L416,.L31,.L121-.L31
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_readData')
	.sect	'.debug_frame'
	.word	20
	.word	.L416,.L33,.L160-.L33
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_frame'
	.word	12
	.word	.L416,.L35,.L168-.L35
	.sdecl	'.debug_frame',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L37,.L142-.L37
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L39,.L123-.L39
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L43,.L134-.L43
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_frame'
	.word	24
	.word	.L416,.L15,.L148-.L15
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_frame'
	.word	12
	.word	.L416,.L46,.L183-.L46
	.sdecl	'.debug_frame',debug,cluster('IfxEray_writeData')
	.sect	'.debug_frame'
	.word	20
	.word	.L416,.L48,.L209-.L48
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L417:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L417,.L41,.L117-.L41
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
