	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc19880a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\.Bsp.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c'

	
$TC16X
	.sdecl	'.zrodata.Bsp..4.cnt',data,rom
	.sect	'.zrodata.Bsp..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	100000000
	.sdecl	'.zrodata.Bsp..5.cnt',data,rom
	.sect	'.zrodata.Bsp..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	10000000
	.sdecl	'.zrodata.Bsp..6.cnt',data,rom
	.sect	'.zrodata.Bsp..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	1000000
	.sdecl	'.zrodata.Bsp..7.cnt',data,rom
	.sect	'.zrodata.Bsp..7.cnt'
	.align	2
.7.cnt:	.type	object
	.size	.7.cnt,4
	.word	100000
	.sdecl	'.zrodata.Bsp..8.cnt',data,rom
	.sect	'.zrodata.Bsp..8.cnt'
	.align	4
.8.cnt:	.type	object
	.size	.8.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Bsp.initTime',code,cluster('initTime')
	.sect	'.text.Bsp.initTime'
	.align	2
	
	.global	initTime

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     2   * \file Bsp.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     3   * \brief Board support package
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    24   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    25  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    26  #include "Bsp.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    27  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    28  Ifx_TickTime TimeConst[TIMER_COUNT];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    29  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    30  /** \brief Initialize the time constants.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    31   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    32   * Initialize the time constants TimeConst_0s, TimeConst_100ns, TimeConst_1us,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    33   * TimeConst_10us, TimeConst_100us, TimeConst_1ms, TimeConst_10ms, TimeConst_100ms,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    34   * TimeConst_1s, TimeConst_10s
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    35   * \return None.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    36   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    37  void initTime(void)
; Function initTime
.L10:
initTime:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    31   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    35   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    45   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    47   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    54   * };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    67   * };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    86   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    97   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    98  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   105  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   117  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   119   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   121  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   134  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   408  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   410   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   412  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   542  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   544   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   546  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   678   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   680  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   698  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   704  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   708   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   710  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   714  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   717   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   719  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   727   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   729  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   734  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   736  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   740   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   742  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_ClockDistributionConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   749  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   750  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   751   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   752  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   753  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   754      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   755      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   756  } IfxScuCcu_FlashWaitstateConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   757  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   758  /** \brief Configuration structure type for the System Pll step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   759   * This structure must be used to configure the P, N and K1 dividers .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   760   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   761  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   762  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   763      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   764      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   765      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   766  } IfxScuCcu_SysPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   767  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   768  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   770  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   771   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   772  /** \brief Configuration structure SCU module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   773   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   774  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   775  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   776      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   777      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   779      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   780  } IfxScuCcu_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   781  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   782  /** \brief Configuration structure for E-ray PLL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   783   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   784  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   785  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   786      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   787  } IfxScuCcu_ErayPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   788  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   789  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   791  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   792   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   794  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   795  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   797  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   798  /** \brief API to get EVR Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   799   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   800   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   801   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   802  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   803  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   804  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   805   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   806   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   808  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   810  /** \brief Returns the clock source selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   811   * \return Clock source selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   812   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   813  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   814  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   815  /** \brief API to get STM divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   816   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   817   * \return STM frequency (fSTM) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   818   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   819  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   820  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   821  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   822  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   823  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   824  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   825  /** \brief API to get BAUD2 divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   826   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   827   * \return Baud2 frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   828   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   829  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   830  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   831  /** \brief API to get BBB divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   832   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   833   * \return BBB frequency (fBBB) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   835  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   837  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   838   * \param cpu CPU number for which effective fCPU is sought
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   839   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   840   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   841  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   842  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get FSI2 divider frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   844   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   845   * \return FSI2 frequency (fFSI2) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   847  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   849  /** \brief API to get FSI divider frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   850   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   851   * \return FSI frequency (fFSI) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   852   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   853  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   854  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   855  /** \brief API to get FMAX divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   856   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   857   * \return Max frequency (fMAX) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   858   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   859  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   860  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   861  /** \brief get source frequency fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   862   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   863   * \return Module frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   865  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   867  /** \brief API to get Oscillator 0 frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   868   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   869   * \return Osc0 frequency (fOSC0) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   870   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   871  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   872  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   873  /** \brief API to get Oscillator 0 frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   874   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   875   * \return Osc frequency (fOSC) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   877  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   879  /** \brief API to get actual PLL (Eray) frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   880   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   881   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   882   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   883  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   884  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   885  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   886   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   887   * \return Pll (Eray) VCO frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   888   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   889  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   890  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   891  /** \brief API to get actual PLL output frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   892   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   893   * \return Pll (fPLL) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   894   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   895  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   896  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   897  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   898   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   899   * \return Pll VCO frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   900   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   901  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   902  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   903  /** \brief get source frequency fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   904   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   905   * \return Effective fSOURCE in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   907  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   909  /** \brief API to get SPB divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   910   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   911   * \return SPB frequency (fSPB) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   912   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   913  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   914  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   915  /** \brief API to get SRI divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   916   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   917   * \return Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   918   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   919  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   920  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   921  /** \brief API to set CPU frequency (with CPU divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   922   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   923   * \param cpu CPU number for which fCPU to be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   924   * \param cpuFreq Desired CPU frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   925   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   926   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   928  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   929  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   930   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   931   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   932   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   933   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   934  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   935  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   936  /** \brief API to set SPB frequency (with SPB divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   937   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   938   * \param spbFreq Desired SPB frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   939   * \return Actual SPB frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   940   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   942  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   943  /** \brief API to set SRI frequency (with SRI divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   944   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   945   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   946   * \return Actual Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   947   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   949  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   950  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   951  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   952  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   953   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   954  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   955  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   956  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   957  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   958  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   959  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   960   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   961   * \param fPll Desired PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   962   * \return 0- Success, 1 - Failure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   963   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   964  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   965  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   966  /** \brief API to initialize the SCU Clock Control Unit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   967   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   968   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   969   * \return Error status of the ScuCcu initialization process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   970   * \retval TRUE: If an error occurred during initialization.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   971   * \retval FALSE: If initialization was successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   973  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   975  /** \brief Initializes the clock configuration with default values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   976   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   977   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   978   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   979  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   980  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   981  /** \brief API to initialize the SCU Eray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   982   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   983   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   984   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   985   * \retval TRUE: If an error occurred during initialization.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   986   * \retval FALSE: If initialization was successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   987   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   988  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   989  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   990  /** \brief Initializes the clock configuration with default values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   991   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   992   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   993   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   995  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   996  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   999   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1002  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1004  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1005  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1006  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1007  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1008  /** \brief API to get GTMdivider frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1009   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1010   * return GTM frequency (fGTM) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1011   * \return Gtm Frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1012   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1013  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1014  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1015  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1016  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1017  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1018  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1019  /** \brief API to set GTM frequency (with GTM divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1020   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1021   * \param gtmFreq Desired GTM frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1022   * \return Actual GTM frequency in HZ
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1023   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1024  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1025  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1026  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1027  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1028  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1030  /** \brief Configuration structure for SCU CCU driver.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1031   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1032   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1033  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1034  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1035  /** \brief Configuration structure for SCU CCU driver.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1036   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1037   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1038  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1040  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1041  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1042  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1043  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1044  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1045  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1046      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1047  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1048  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1049  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1050  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1051  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1052      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1053  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1054  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1056  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1057  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1058      float32 pll2Frequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1059      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1061      return pll2Frequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1062  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1063  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1064  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1066  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1067      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1068  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1069  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1070  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1072  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	call	IfxScuCcu_getSourceFrequency
.L149:
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036035)
.L48:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    38  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    39      sint32 Fsys = IfxStm_getFrequency(BSP_DEFAULT_TIMER);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    40  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    41      TimeConst[TIMER_INDEX_10NS]  = Fsys / (1000000000 / 10);
	movh.a	a15,#@his(TimeConst)
.L53:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    31   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    35   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    45   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    47   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    54   * };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    67   * };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    86   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    97   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    98  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   105  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   117  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   119   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   121  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   134  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   408  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   410   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   412  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   542  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   544   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   546  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   678   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   680  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   698  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   704  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   708   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   710  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   714  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   717   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   719  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   727   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   729  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   734  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   736  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   740   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   742  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_ClockDistributionConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   749  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   750  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   751   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   752  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   753  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   754      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   755      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   756  } IfxScuCcu_FlashWaitstateConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   757  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   758  /** \brief Configuration structure type for the System Pll step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   759   * This structure must be used to configure the P, N and K1 dividers .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   760   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   761  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   762  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   763      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   764      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   765      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   766  } IfxScuCcu_SysPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   767  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   768  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   770  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   771   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   772  /** \brief Configuration structure SCU module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   773   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   774  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   775  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   776      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   777      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   779      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   780  } IfxScuCcu_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   781  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   782  /** \brief Configuration structure for E-ray PLL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   783   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   784  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   785  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   786      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   787  } IfxScuCcu_ErayPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   788  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   789  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   791  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   792   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   794  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   795  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   797  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   798  /** \brief API to get EVR Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   799   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   800   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   801   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   802  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   803  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   804  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   805   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   806   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   808  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   810  /** \brief Returns the clock source selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   811   * \return Clock source selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   812   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   813  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   814  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   815  /** \brief API to get STM divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   816   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   817   * \return STM frequency (fSTM) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   818   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   819  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   820  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   821  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   822  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   823  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   824  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   825  /** \brief API to get BAUD2 divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   826   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   827   * \return Baud2 frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   828   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   829  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   830  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   831  /** \brief API to get BBB divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   832   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   833   * \return BBB frequency (fBBB) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   835  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   837  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   838   * \param cpu CPU number for which effective fCPU is sought
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   839   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   840   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   841  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   842  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get FSI2 divider frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   844   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   845   * \return FSI2 frequency (fFSI2) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   847  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   849  /** \brief API to get FSI divider frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   850   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   851   * \return FSI frequency (fFSI) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   852   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   853  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   854  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   855  /** \brief API to get FMAX divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   856   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   857   * \return Max frequency (fMAX) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   858   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   859  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   860  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   861  /** \brief get source frequency fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   862   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   863   * \return Module frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   865  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   867  /** \brief API to get Oscillator 0 frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   868   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   869   * \return Osc0 frequency (fOSC0) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   870   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   871  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   872  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   873  /** \brief API to get Oscillator 0 frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   874   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   875   * \return Osc frequency (fOSC) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   877  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   879  /** \brief API to get actual PLL (Eray) frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   880   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   881   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   882   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   883  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   884  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   885  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   886   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   887   * \return Pll (Eray) VCO frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   888   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   889  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   890  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   891  /** \brief API to get actual PLL output frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   892   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   893   * \return Pll (fPLL) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   894   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   895  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   896  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   897  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   898   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   899   * \return Pll VCO frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   900   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   901  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   902  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   903  /** \brief get source frequency fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   904   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   905   * \return Effective fSOURCE in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   907  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   909  /** \brief API to get SPB divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   910   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   911   * \return SPB frequency (fSPB) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   912   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   913  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   914  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   915  /** \brief API to get SRI divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   916   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   917   * \return Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   918   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   919  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   920  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   921  /** \brief API to set CPU frequency (with CPU divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   922   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   923   * \param cpu CPU number for which fCPU to be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   924   * \param cpuFreq Desired CPU frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   925   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   926   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   928  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   929  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   930   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   931   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   932   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   933   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   934  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   935  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   936  /** \brief API to set SPB frequency (with SPB divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   937   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   938   * \param spbFreq Desired SPB frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   939   * \return Actual SPB frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   940   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   942  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   943  /** \brief API to set SRI frequency (with SRI divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   944   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   945   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   946   * \return Actual Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   947   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   949  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   950  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   951  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   952  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   953   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   954  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   955  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   956  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   957  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   958  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   959  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   960   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   961   * \param fPll Desired PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   962   * \return 0- Success, 1 - Failure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   963   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   964  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   965  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   966  /** \brief API to initialize the SCU Clock Control Unit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   967   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   968   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   969   * \return Error status of the ScuCcu initialization process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   970   * \retval TRUE: If an error occurred during initialization.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   971   * \retval FALSE: If initialization was successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   973  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   975  /** \brief Initializes the clock configuration with default values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   976   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   977   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   978   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   979  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   980  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   981  /** \brief API to initialize the SCU Eray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   982   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   983   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   984   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   985   * \retval TRUE: If an error occurred during initialization.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   986   * \retval FALSE: If initialization was successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   987   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   988  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   989  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   990  /** \brief Initializes the clock configuration with default values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   991   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   992   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   993   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   995  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   996  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   999   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1002  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1004  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1005  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1006  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1007  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1008  /** \brief API to get GTMdivider frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1009   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1010   * return GTM frequency (fGTM) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1011   * \return Gtm Frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1012   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1013  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1014  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1015  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1016  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1017  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1018  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1019  /** \brief API to set GTM frequency (with GTM divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1020   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1021   * \param gtmFreq Desired GTM frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1022   * \return Actual GTM frequency in HZ
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1023   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1024  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1025  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1026  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1027  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1028  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1030  /** \brief Configuration structure for SCU CCU driver.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1031   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1032   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1033  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1034  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1035  /** \brief Configuration structure for SCU CCU driver.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1036   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1037   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1038  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1040  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1041  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1042  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1043  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1044  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1045  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1046      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1047  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1048  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1049  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1050  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1051  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1052      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1053  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1054  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1056  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1057  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1058      float32 pll2Frequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1059      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1061      return pll2Frequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1062  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1063  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1064  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1066  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1067      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1068  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1069  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1070  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1072  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	and	d15,#15
	lea	a15,[a15]@los(TimeConst)
.L150:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    31   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    35   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    43   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    45   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    47   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    54   * };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    55   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    67   * };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    69   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    71   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    73   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    79   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    81   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    86   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    97   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    98  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   105  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   113  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   117  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   119   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   121  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   130  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   134  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   274  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   278  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   408  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   410   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   412  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   542  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   544   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   546  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   678   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   680  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   698  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   704  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   708   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   710  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   714  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   717   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   719  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   727   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   729  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   734  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   736  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   740   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   742  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_ClockDistributionConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   749  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   750  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   751   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   752  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   753  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   754      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   755      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   756  } IfxScuCcu_FlashWaitstateConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   757  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   758  /** \brief Configuration structure type for the System Pll step.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   759   * This structure must be used to configure the P, N and K1 dividers .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   760   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   761  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   762  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   763      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   764      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   765      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   766  } IfxScuCcu_SysPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   767  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   768  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   770  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   771   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   772  /** \brief Configuration structure SCU module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   773   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   774  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   775  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   776      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   777      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   779      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   780  } IfxScuCcu_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   781  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   782  /** \brief Configuration structure for E-ray PLL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   783   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   784  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   785  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   786      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   787  } IfxScuCcu_ErayPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   788  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   789  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   791  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   792   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   794  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   795  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   797  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   798  /** \brief API to get EVR Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   799   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   800   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   801   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   802  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   803  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   804  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   805   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   806   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   807   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   808  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   809  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   810  /** \brief Returns the clock source selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   811   * \return Clock source selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   812   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   813  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   814  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   815  /** \brief API to get STM divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   816   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   817   * \return STM frequency (fSTM) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   818   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   819  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   820  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   821  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   822  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   823  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   824  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   825  /** \brief API to get BAUD2 divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   826   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   827   * \return Baud2 frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   828   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   829  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   830  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   831  /** \brief API to get BBB divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   832   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   833   * \return BBB frequency (fBBB) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   835  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   837  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   838   * \param cpu CPU number for which effective fCPU is sought
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   839   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   840   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   841  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   842  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get FSI2 divider frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   844   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   845   * \return FSI2 frequency (fFSI2) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   846   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   847  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   848  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   849  /** \brief API to get FSI divider frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   850   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   851   * \return FSI frequency (fFSI) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   852   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   853  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   854  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   855  /** \brief API to get FMAX divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   856   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   857   * \return Max frequency (fMAX) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   858   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   859  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   860  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   861  /** \brief get source frequency fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   862   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   863   * \return Module frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   865  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   867  /** \brief API to get Oscillator 0 frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   868   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   869   * \return Osc0 frequency (fOSC0) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   870   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   871  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   872  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   873  /** \brief API to get Oscillator 0 frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   874   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   875   * \return Osc frequency (fOSC) in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   876   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   877  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   878  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   879  /** \brief API to get actual PLL (Eray) frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   880   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   881   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   882   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   883  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   884  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   885  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   886   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   887   * \return Pll (Eray) VCO frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   888   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   889  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   890  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   891  /** \brief API to get actual PLL output frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   892   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   893   * \return Pll (fPLL) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   894   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   895  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   896  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   897  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   898   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   899   * \return Pll VCO frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   900   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   901  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   902  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   903  /** \brief get source frequency fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   904   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   905   * \return Effective fSOURCE in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   907  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   909  /** \brief API to get SPB divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   910   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   911   * \return SPB frequency (fSPB) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   912   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   913  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   914  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   915  /** \brief API to get SRI divider frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   916   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   917   * \return Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   918   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   919  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   920  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   921  /** \brief API to set CPU frequency (with CPU divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   922   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   923   * \param cpu CPU number for which fCPU to be configured
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   924   * \param cpuFreq Desired CPU frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   925   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   926   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   928  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   929  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   930   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   931   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   932   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   933   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   934  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   935  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   936  /** \brief API to set SPB frequency (with SPB divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   937   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   938   * \param spbFreq Desired SPB frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   939   * \return Actual SPB frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   940   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   942  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   943  /** \brief API to set SRI frequency (with SRI divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   944   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   945   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   946   * \return Actual Sri frequency (fSRI) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   947   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   949  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   950  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   951  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   952  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   953   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   954  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   955  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   956  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   957  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   958  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   959  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   960   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   961   * \param fPll Desired PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   962   * \return 0- Success, 1 - Failure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   963   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   964  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   965  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   966  /** \brief API to initialize the SCU Clock Control Unit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   967   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   968   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   969   * \return Error status of the ScuCcu initialization process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   970   * \retval TRUE: If an error occurred during initialization.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   971   * \retval FALSE: If initialization was successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   973  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   975  /** \brief Initializes the clock configuration with default values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   976   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   977   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   978   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   979  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   980  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   981  /** \brief API to initialize the SCU Eray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   982   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   983   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   984   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   985   * \retval TRUE: If an error occurred during initialization.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   986   * \retval FALSE: If initialization was successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   987   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   988  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   989  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   990  /** \brief Initializes the clock configuration with default values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   991   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   992   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   993   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   995  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   996  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	   999   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1001  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1002  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1004  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1005  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1006  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1007  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1008  /** \brief API to get GTMdivider frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1009   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1010   * return GTM frequency (fGTM) in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1011   * \return Gtm Frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1012   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1013  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1014  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1015  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1016  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1017  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1018  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1019  /** \brief API to set GTM frequency (with GTM divider)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1020   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1021   * \param gtmFreq Desired GTM frequency in Hz
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1022   * \return Actual GTM frequency in HZ
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1023   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1024  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1025  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1026  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1027  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1028  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1029  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1030  /** \brief Configuration structure for SCU CCU driver.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1031   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1032   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1033  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1034  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1035  /** \brief Configuration structure for SCU CCU driver.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1036   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1037   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1038  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1040  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1041  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1042  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1043  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1044  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1045  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1046      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1047  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1048  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1049  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1050  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1051  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1052      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1053  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1054  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1056  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1057  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1058      float32 pll2Frequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1059      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1060  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1061      return pll2Frequency;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1062  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1063  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1064  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1066  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1067      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1068  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1069  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1070  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1072  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	itof	d15,d15
.L151:
	div.f	d15,d2,d15
.L58:
	ftoiz	d2,d15
	ld.w	d15,.4.cnt
.L54:
	fcall	.cocofun_9
.L152:
	st.d	[a15]0,e0
.L122:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    42      TimeConst[TIMER_INDEX_100NS] = Fsys / (1000000000 / 100);
	ld.w	d15,.5.cnt
.L153:
	fcall	.cocofun_9
.L154:
	st.d	[a15]8,e0
.L155:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    43      TimeConst[TIMER_INDEX_1US]   = Fsys / (1000000 / 1);
	ld.w	d15,.6.cnt
.L156:
	fcall	.cocofun_9
.L157:
	st.d	[a15]16,e0
.L158:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    44      TimeConst[TIMER_INDEX_10US]  = Fsys / (1000000 / 10);
	ld.w	d15,.7.cnt
.L159:
	fcall	.cocofun_9
.L160:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    45      TimeConst[TIMER_INDEX_100US] = Fsys / (1000000 / 100);
	mov	d15,#10000
	st.d	[a15]24,e0
.L123:
	fcall	.cocofun_9
.L124:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    46      TimeConst[TIMER_INDEX_1MS]   = Fsys / (1000 / 1);
	mov	d15,#1000
	st.d	[a15]32,e0
.L125:
	fcall	.cocofun_9
.L126:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    47      TimeConst[TIMER_INDEX_10MS]  = Fsys / (1000 / 10);
	mov	d15,#100
	st.d	[a15]40,e0
.L127:
	fcall	.cocofun_9
.L128:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    48      TimeConst[TIMER_INDEX_100MS] = Fsys / (1000 / 100);
	mov	d15,#10
	st.d	[a15]48,e0
.L129:
	fcall	.cocofun_9
.L130:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    49      TimeConst[TIMER_INDEX_1S]    = Fsys * (1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    50      TimeConst[TIMER_INDEX_10S]   = Fsys * (10);
	mul	d15,d2,#10
	st.d	[a15]56,e0
.L161:
	mov	e0,d2
	st.d	[a15]64,e0
.L131:
	mov	e0,d15
	st.d	[a15]72,e0
.L132:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    51      TimeConst[TIMER_INDEX_100S]  = Fsys * (100);
	mul	d15,d2,#100
.L162:
	mov	e0,d15
	st.d	[a15]80,e0
.L163:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    52  }
	ret
.L43:
	
__initTime_function_end:
	.size	initTime,__initTime_function_end-initTime
.L25:
	; End of function
	
	.sdecl	'.text.Bsp..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.Bsp..cocofun_9'
	.align	2
; Function .cocofun_9
.L12:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	div	e0,d2,d15
.L184:
	mov	e0,d0
	fret
.L40:
	; End of function
	.sdecl	'.text.Bsp.waitPoll',code,cluster('waitPoll')
	.sect	'.text.Bsp.waitPoll'
	.align	2
	
	.global	waitPoll

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    53  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    54  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    55  /** \brief Wait function.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    56   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    57   * This is an empty function that just spend some time waiting.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    58   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    59   * \return None.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    60   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    61  void waitPoll(void)
; Function waitPoll
.L14:
waitPoll:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    62  {}
	ret
.L59:
	
__waitPoll_function_end:
	.size	waitPoll,__waitPoll_function_end-waitPoll
.L30:
	; End of function
	
	.sdecl	'.text.Bsp.waitTime',code,cluster('waitTime')
	.sect	'.text.Bsp.waitTime'
	.align	2
	
	.global	waitTime

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    63  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    64  /** \brief Wait time function.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    65   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    66   * This is an empty function that that returns after the timeout elapsed. The
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    67   * minimal time spend in the function is guaranteed, but not the max time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    68   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    69   * \param timeout Specifies the time the function waits for before returning
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    70   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    71   * \return None.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    72   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    73  void waitTime(Ifx_TickTime timeout)
; Function waitTime
.L16:
waitTime:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     5   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     6   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	     9   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    12   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    16   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    17   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    23   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    24   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    25   * This module implements the board support package
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    26   * \ingroup library_srvsw_sysse_bsp
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    27   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    28   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    29  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    30  #ifndef BSP_H
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    31  #define BSP_H 1
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    32  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    33  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    34  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    35  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    36  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    37  #include "Cpu/Std/IfxCpu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    38  #include "Port/Std/IfxPort.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    39  #include "Src/Std/IfxSrc.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    40  #include "Stm/Std/IfxStm.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    41  #include "Scu/Std/IfxScuCcu.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    42  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    43  #ifndef BSP_DEFAULT_TIMER
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    44  /** Defined the default timer used */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    45  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    46  #endif
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    47  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    48  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    49  /*                           Function prototypes                              */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    50  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    52  /** \addtogroup library_srvsw_sysse_bsp_bsp
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    53   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    54  /** \name Interrupt APIs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    55   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    56  IFX_INLINE boolean areInterruptsEnabled(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    57  IFX_INLINE boolean disableInterrupts(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    58  IFX_INLINE void    enableInterrupts(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    59  IFX_INLINE void    restoreInterrupts(boolean enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    60  IFX_INLINE void    forceDisableInterrupts(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    61  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    62  /** \} */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    63  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    64  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    65  /*                           Functions                                        */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    66  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    67  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    68  /** \brief Return the status of the global interrupts
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    69   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    70   * \retval TRUE if the global interrupts are enabled.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    71   * \retval FALSE if the global interrupts are disabled.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    72   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    73   * \see restoreInterrupts(), disableInterrupts()
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    74   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    75  IFX_INLINE boolean areInterruptsEnabled(void)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    76  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    77      return IfxCpu_areInterruptsEnabled();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    78  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    79  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    80  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    81  /** \brief Disable the global interrupts
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    82   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    83   * \retval TRUE if the global interrupts were enabled before the call to the function.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    84   * \retval FALSE if the global interrupts are disabled before the call to the function.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    85   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    86   * \see areInterruptsEnabled(), restoreInterrupts()
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    87   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    88  IFX_INLINE boolean disableInterrupts(void)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    89  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    90      return IfxCpu_disableInterrupts();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    91  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    92  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    93  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    94  /** \brief Disable the global interrupts forcefully
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    95   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    96   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    97   * \see areInterruptsEnabled(), restoreInterrupts()
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    98   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	    99  IFX_INLINE void forceDisableInterrupts(void)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   100  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   101      IfxCpu_forceDisableInterrupts();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   102  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   105  /** \brief enable the global interrupts
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   106   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   107   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   108  IFX_INLINE void enableInterrupts(void)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   109  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   110      IfxCpu_enableInterrupts();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   111  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   113  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   114  /** \brief Restore the state of the global interrupts.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   115   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   116   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   117   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   118   * \return None.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   119   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   120   * \see areInterruptsEnabled(), disableInterrupts()
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   121   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   122  IFX_INLINE void restoreInterrupts(boolean enabled)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   123  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   124      IfxCpu_restoreInterrupts(enabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   125  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   126  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   127  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   128  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   129  /*                           Macros                                           */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   130  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   131  #define TIMER_COUNT       (11)                                      /**< \internal \brief number of timer values defined */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   132  #define TIMER_INDEX_10NS  (0)                                       /**< \internal \brief Index of the time value 10ns*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   133  #define TIMER_INDEX_100NS (1)                                       /**< \internal \brief Index of the time value 100ns*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   134  #define TIMER_INDEX_1US   (2)                                       /**< \internal \brief Index of the time value 1us*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   135  #define TIMER_INDEX_10US  (3)                                       /**< \internal \brief Index of the time value 10us*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   136  #define TIMER_INDEX_100US (4)                                       /**< \internal \brief Index of the time value 100us*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   137  #define TIMER_INDEX_1MS   (5)                                       /**< \internal \brief Index of the time value 1ms*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   138  #define TIMER_INDEX_10MS  (6)                                       /**< \internal \brief Index of the time value 10ms*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   139  #define TIMER_INDEX_100MS (7)                                       /**< \internal \brief Index of the time value 100ms*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   140  #define TIMER_INDEX_1S    (8)                                       /**< \internal \brief Index of the time value 1s*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   141  #define TIMER_INDEX_10S   (9)                                       /**< \internal \brief Index of the time value 10s*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   142  #define TIMER_INDEX_100S  (10)                                      /**< \internal \brief Index of the time value 100s*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   144  /** \internal
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   145   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   146   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   147   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   148  IFX_EXTERN Ifx_TickTime TimeConst[TIMER_COUNT];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   149  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   151  /*                           Function prototypes                              */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   152  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   153  /** \addtogroup library_srvsw_sysse_bsp_bsp
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   154   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   155  /** \name Time APIs
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   156   * \{ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   157  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   158  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   159  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   160  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   161  IFX_EXTERN void         initTime(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   162  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   163  IFX_INLINE Ifx_TickTime now(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   164  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   165  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   166  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   167  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   168  IFX_INLINE void         wait(Ifx_TickTime timeout);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   169  IFX_EXTERN void         waitPoll(void);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   170  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   171  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   172  /** Prototype for wait() functions */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   173  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   175  #define TimeConst_0s    ((Ifx_TickTime)0)                           /**< \brief time constant equal to 1s */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   176  #define TimeConst_10ns  (TimeConst[TIMER_INDEX_10NS])               /**< \brief time constant equal to 10ns */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   177  #define TimeConst_100ns (TimeConst[TIMER_INDEX_100NS])              /**< \brief time constant equal to 100ns */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   178  #define TimeConst_1us   (TimeConst[TIMER_INDEX_1US])                /**< \brief time constant equal to 1us */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   179  #define TimeConst_10us  (TimeConst[TIMER_INDEX_10US])               /**< \brief time constant equal to 10us */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   180  #define TimeConst_100us (TimeConst[TIMER_INDEX_100US])              /**< \brief time constant equal to 100us */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   181  #define TimeConst_1ms   (TimeConst[TIMER_INDEX_1MS])                /**< \brief time constant equal to 1ms */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   182  #define TimeConst_10ms  (TimeConst[TIMER_INDEX_10MS])               /**< \brief time constant equal to 10ms */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   183  #define TimeConst_100ms (TimeConst[TIMER_INDEX_100MS])              /**< \brief time constant equal to 100ms */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   184  #define TimeConst_1s    (TimeConst[TIMER_INDEX_1S])                 /**< \brief time constant equal to 1s */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   185  #define TimeConst_10s   (TimeConst[TIMER_INDEX_10S])                /**< \brief time constant equal to 10s */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   186  #define TimeConst_100s  (TimeConst[TIMER_INDEX_100S])               /**< \brief time constant equal to 100s */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   187  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   188  /**\}*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   189  /**\}*/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   190  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   191  /*                           Functions                                        */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   192  /******************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   193  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   194  /** \brief Return system timer value (critical section).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   195   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   196   * The function IfxStm_get() is called in a critical section, disabling
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   197   * the interrupts. The system timer value is limited to TIME_INFINITE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   198   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   199   * \return Returns system timer value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   200   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   201  IFX_INLINE Ifx_TickTime now(void)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   202  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   203      Ifx_TickTime stmNow;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   204      boolean      interruptState;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   205  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   206      interruptState = disableInterrupts();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   207      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   208      restoreInterrupts(interruptState);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   209  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   210      return stmNow;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   211  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   212  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   214  /** \brief Return system timer value (without critical section).
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   215   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   216   * The function IfxStm_get() is called. The system timer value is limited to TIME_INFINITE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   217   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   218   * \return Returns system timer value.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   219   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   220  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   221  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   222      Ifx_TickTime stmNow;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   223  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   224      stmNow = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   225  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   226      return stmNow;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   227  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   228  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   229  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   230  /** \brief Add 2 Ifx_TickTime values and return the result
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   231   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   232   * \param a parameter a
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   233   * \param b parameter b
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   234   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   235   * \return a + b. If either a or b is TIME_INFINITE, the result is TIME_INFINITE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   236   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   237  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   238  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   239      Ifx_TickTime result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   240  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   241      if ((a == TIME_INFINITE) || (b == TIME_INFINITE))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   242      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   243          result = TIME_INFINITE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   244      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   245      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   246      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   247          result = a + b;         /* FIXME check for overflow */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   248      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   250      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   251  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   252  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   253  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   254  /** \brief Return the elapsed time in ticks.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   255   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   256   * Return the elapsed time between the current time and the time passed as parameter
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   257   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   258   * \return Returns the elapsed time.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   259   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   260  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   261  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   262      return now() - since;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   263  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   264  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   265  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   266  /** \brief Return the time dead line.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   267   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   268   * \param timeout Specifies the dead line from now: Deadline = Now + Timeout
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   269   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   270   * \return Return the time dead line.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   271   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   272  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   273  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   274      Ifx_TickTime deadLine;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   275  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   276      if (timeout == TIME_INFINITE)
	ld.d	e6,.8.cnt
.L133:
	ne	d15,d4,d6
	or.ne	d15,d5,d7
.L172:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   276      if (timeout == TIME_INFINITE)      (inlined)
	jeq	d15,#0,.L3
.L75:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    25   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    26   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    27   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    28   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    29   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    30   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    31   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    32   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    33   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    34   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    35   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    36   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    37   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    38   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    39   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    40   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    41   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    43  #ifndef IFXCPU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    44  #define IFXCPU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    50  #include "_Impl/IfxCpu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    51  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    52  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    53  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    54  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    55  #include "_Utilities/Ifx_Assert.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    57  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    58  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    59  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    61  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    62   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    63   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    64   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    65   * Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    66   *  \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    67   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    68   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    69   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    70   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    71  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    72  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    73  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    74   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    75   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    76   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    77   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    78   *   Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    79   *   \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    80   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    81   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    82   *   \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    83   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    84  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    86  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    87  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    88  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    90  /** \brief Lock type Spin lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    91   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    92  typedef unsigned int IfxCpu_spinLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    93  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    94  /** \brief Lock type Mutex lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    96  typedef unsigned int IfxCpu_mutexLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    99  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   102  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   103   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   104  /** \brief Enumeration for the Cpu mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   105   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   106  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   107  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   108      IfxCpu_CoreMode_halt,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   109      IfxCpu_CoreMode_run,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   110      IfxCpu_CoreMode_idle,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   111      IfxCpu_CoreMode_sleep,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   112      IfxCpu_CoreMode_stby,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   113      IfxCpu_CoreMode_unknown
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   114  } IfxCpu_CoreMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   116  /** \brief Performance conunter modes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   117   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   118  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   119  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   120      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   121      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   122  } IfxCpu_CounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   124  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   127  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   130  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   131   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   132  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   133  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   134      uint32  counter;      /**< \brief Counter value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   135      boolean overlfow;     /**< \brief sticky overlfow */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   136  } IfxCpu_Counter;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   138  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   139  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   140  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   141   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   142  /** \brief Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   143   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   144  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   145  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   146      IfxCpu_Counter instruction;     /**< \brief Instruction counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   147      IfxCpu_Counter clock;           /**< \brief CPU clock counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   148      IfxCpu_Counter counter1;        /**< \brief Multi counter 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   149      IfxCpu_Counter counter2;        /**< \brief Multi counter 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   150      IfxCpu_Counter counter3;        /**< \brief Multi counter 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   151  } IfxCpu_Perf;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   153  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   155  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   156   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   157  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   158  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   159  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   160  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   162  /** \brief API to get core id of the CPU of the caller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   163   * Caution: Core id of the cpus may not be continguous and shouldn't be used to index cpu.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   164   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   165   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   167  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   169  /** \brief API to get cpu index of the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   170   * Note: This api can be used whereever cpu no/index is needed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   171   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   173  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   175  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   177   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   178   * shall not be used to initialize the CSA of another CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   179   * \param csaBegin Pointer to start of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   180   * \param csaEnd Pointer to end of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   181   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   183  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   184  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   185  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   186   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   188  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   189  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   190  /** \brief Triggers Software Reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   191   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   193  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   195  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   196  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   197  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   199  /** \brief API to get the address for CPU HW module register memory map
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   200   * \param cpu Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   201   * \return CPU module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   202   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   203  IFX_EXTERN Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   205  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   206   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   207   * \return Current mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   209  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   211  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   212   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   213   * \return Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   215  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   217  /** \brief API to set mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   218   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   219   * \param mode CPU mode to be set by this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   220   * \return Success status of the activity (setting the core mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   221   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   222   * \retval FALSE: If the activity can't be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   224  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   226  /** \brief API to set the program counter for the CPU specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   227   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   228   * \param programCounter Program counter value to be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   229   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   230   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   231   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   232   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   233  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   235  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   236   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   237   * \param programCounter Program counter value to start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   238   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   239   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   240   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   242  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   244  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   246  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   247   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   249  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   251  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   253  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   254   * This API provides the status of CPU where this API is called
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   255   * \return Status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   256   * \retval TRUE: Global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   257   * \retval FALSE: Global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   258   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   259  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   261  /** \brief API to disable global interrupt and return the previous status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   262   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   263   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   264   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   265   * \return Previous status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   266   * \retval TRUE: Previously, global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   267   * \retval FALSE: Previously, global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   269  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   270  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   271  /** \brief API to enable global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   272   * This API simply enables the global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   273   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   274   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   275  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   276  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   277  /** \brief Disable the Global Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   280  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   282  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   283   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   284   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   285   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   286   * \param enabled Previous status of the global interrupt enable bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   287   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   288   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   289  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   290  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   291  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   293  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   294   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   296  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   297  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   298  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   300  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   301   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   302   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   303   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   304   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   307  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   309  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   310   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   311   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   312   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   313   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   314   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   315   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   316  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   318  /** \brief API to invalidate the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   319   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   320   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   321  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   322  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   323  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   324   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   325   * \return Status TRUE/FALSE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   326   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   327  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   329  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   330   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   331   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   332   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   333   * \param enable Command to enable or bypass the data cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   334   * TRUE: Enable the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   335   * FALSE: Bypass the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   336   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   337   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   338  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   339  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   342   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   343   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   344   * \param enable Command to enable or bypass the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   345   * TRUE: Enable the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   346   * FALSE: Bypass the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   353  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   360  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   361   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   362   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   363   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   364   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   366  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   368  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   369   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   370   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   371   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   372   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   373   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   374   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   375   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   376   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   377   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   379  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   381  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   382   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   383   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   384   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   385   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   386   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   387  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   389  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   391   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   392   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   393   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   394   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   395   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   396   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   397   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   398   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   400  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   402  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   403   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   404   * \return counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   406  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   408  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   409   * This is generic function to get sticky overflow bit of any performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   410   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   411   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   412   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   413  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   415  /** \brief Reset and start instruction, clock and multi counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   417   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   418   * \param mode Counter mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   419   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   420   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   421  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   423  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   424   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   425   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   426   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   427   * \param enable enable Command to enable or disable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   428   * TRUE: Enable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   429   * FALSE: Disable the performance counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   430   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   431   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   432  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   434  /** \brief Stop instruction and clock counters, return their values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   435   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   436   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   437   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   438   * \return Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   440  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   442  /** \brief API to update clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   444   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   445   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   446   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   451  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   452   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   453   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   455   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   458  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   460  /** \brief API to update performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   461   * This is generic function to update any of the performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   462   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   463   * \param count Count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   464   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   465   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   466  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   468  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   470  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   471   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   472  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   473  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   474  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   475  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   477  /** \brief API to acquire the mutex (binary semaphore).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   478   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   479   * This API can be used to acquire/get the mutex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   480   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   481   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   482   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   483   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   484   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   485   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   486   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   487   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   488   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   489   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   490   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   491   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   492   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   493  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   495  /** \brief API to unlock the mutex .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   496   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   497   * This API can be used to unlock the previously acquired mutex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   498   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   500   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   501   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   502   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   503   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   504   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   505   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   506   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   507   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   508   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   509   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   510   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   511  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   512  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   513  /** \brief API to unlock the resource .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   514   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   515   * This API can be used to unlock the previously acquired lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   516   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   517   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   518   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   519  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   521  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   522   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   523   * This API can be used to spin lock for the lock for the given timeout period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   524   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   525   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   526   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   527   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   528   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   529   *    IfxCpu_spinLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   530   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   531   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   532   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   533   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   534   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   535   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   536   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   537   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   538  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   539  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   540  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   542  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   543   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   545  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   547  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   549  /** \brief API to get random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   550   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   551   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   553  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   555  /** \brief API to get random value with in the range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   556   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   557   * \param min minimum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   558   * \param max maximum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   559   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   560   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   561  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   562  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   563  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   566  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   569  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   570  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   571      Ifx_CPU_ICR reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   572      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L134:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   573      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L135:
	ne	d15,d15,#0
.L84:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   574  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   575  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   576  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   577  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   578  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   579      boolean enabled;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   580      enabled = IfxCpu_areInterruptsEnabled();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   581      __disable();
	disable
.L173:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   582      __nop();
	nop
.L79:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
	ld.w	d0,0xf0000010
.L174:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d1,0xf000002c
.L89:
	and	d0,d6
.L136:
	and	d1,d7
.L96:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L4
.L175:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    25   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    26   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    27   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    28   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    29   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    30   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    31   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    32   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    33   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    34   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    35   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    36   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    37   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    38   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    39   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    40   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    41   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    43  #ifndef IFXCPU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    44  #define IFXCPU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    50  #include "_Impl/IfxCpu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    51  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    52  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    53  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    54  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    55  #include "_Utilities/Ifx_Assert.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    57  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    58  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    59  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    61  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    62   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    63   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    64   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    65   * Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    66   *  \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    67   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    68   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    69   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    70   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    71  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    72  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    73  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    74   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    75   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    76   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    77   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    78   *   Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    79   *   \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    80   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    81   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    82   *   \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    83   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    84  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    86  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    87  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    88  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    90  /** \brief Lock type Spin lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    91   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    92  typedef unsigned int IfxCpu_spinLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    93  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    94  /** \brief Lock type Mutex lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    96  typedef unsigned int IfxCpu_mutexLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    99  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   102  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   103   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   104  /** \brief Enumeration for the Cpu mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   105   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   106  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   107  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   108      IfxCpu_CoreMode_halt,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   109      IfxCpu_CoreMode_run,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   110      IfxCpu_CoreMode_idle,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   111      IfxCpu_CoreMode_sleep,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   112      IfxCpu_CoreMode_stby,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   113      IfxCpu_CoreMode_unknown
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   114  } IfxCpu_CoreMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   116  /** \brief Performance conunter modes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   117   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   118  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   119  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   120      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   121      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   122  } IfxCpu_CounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   124  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   127  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   130  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   131   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   132  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   133  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   134      uint32  counter;      /**< \brief Counter value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   135      boolean overlfow;     /**< \brief sticky overlfow */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   136  } IfxCpu_Counter;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   138  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   139  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   140  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   141   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   142  /** \brief Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   143   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   144  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   145  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   146      IfxCpu_Counter instruction;     /**< \brief Instruction counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   147      IfxCpu_Counter clock;           /**< \brief CPU clock counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   148      IfxCpu_Counter counter1;        /**< \brief Multi counter 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   149      IfxCpu_Counter counter2;        /**< \brief Multi counter 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   150      IfxCpu_Counter counter3;        /**< \brief Multi counter 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   151  } IfxCpu_Perf;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   153  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   155  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   156   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   157  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   158  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   159  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   160  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   162  /** \brief API to get core id of the CPU of the caller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   163   * Caution: Core id of the cpus may not be continguous and shouldn't be used to index cpu.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   164   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   165   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   167  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   169  /** \brief API to get cpu index of the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   170   * Note: This api can be used whereever cpu no/index is needed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   171   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   173  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   175  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   177   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   178   * shall not be used to initialize the CSA of another CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   179   * \param csaBegin Pointer to start of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   180   * \param csaEnd Pointer to end of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   181   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   183  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   184  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   185  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   186   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   188  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   189  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   190  /** \brief Triggers Software Reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   191   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   193  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   195  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   196  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   197  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   199  /** \brief API to get the address for CPU HW module register memory map
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   200   * \param cpu Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   201   * \return CPU module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   202   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   203  IFX_EXTERN Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   205  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   206   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   207   * \return Current mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   209  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   211  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   212   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   213   * \return Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   215  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   217  /** \brief API to set mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   218   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   219   * \param mode CPU mode to be set by this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   220   * \return Success status of the activity (setting the core mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   221   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   222   * \retval FALSE: If the activity can't be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   224  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   226  /** \brief API to set the program counter for the CPU specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   227   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   228   * \param programCounter Program counter value to be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   229   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   230   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   231   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   232   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   233  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   235  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   236   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   237   * \param programCounter Program counter value to start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   238   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   239   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   240   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   242  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   244  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   246  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   247   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   249  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   251  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   253  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   254   * This API provides the status of CPU where this API is called
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   255   * \return Status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   256   * \retval TRUE: Global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   257   * \retval FALSE: Global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   258   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   259  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   261  /** \brief API to disable global interrupt and return the previous status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   262   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   263   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   264   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   265   * \return Previous status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   266   * \retval TRUE: Previously, global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   267   * \retval FALSE: Previously, global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   269  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   270  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   271  /** \brief API to enable global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   272   * This API simply enables the global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   273   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   274   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   275  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   276  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   277  /** \brief Disable the Global Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   280  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   282  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   283   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   284   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   285   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   286   * \param enabled Previous status of the global interrupt enable bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   287   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   288   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   289  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   290  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   291  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   293  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   294   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   296  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   297  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   298  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   300  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   301   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   302   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   303   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   304   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   307  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   309  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   310   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   311   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   312   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   313   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   314   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   315   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   316  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   318  /** \brief API to invalidate the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   319   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   320   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   321  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   322  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   323  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   324   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   325   * \return Status TRUE/FALSE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   326   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   327  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   329  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   330   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   331   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   332   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   333   * \param enable Command to enable or bypass the data cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   334   * TRUE: Enable the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   335   * FALSE: Bypass the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   336   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   337   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   338  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   339  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   342   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   343   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   344   * \param enable Command to enable or bypass the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   345   * TRUE: Enable the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   346   * FALSE: Bypass the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   353  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   360  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   361   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   362   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   363   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   364   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   366  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   368  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   369   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   370   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   371   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   372   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   373   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   374   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   375   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   376   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   377   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   379  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   381  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   382   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   383   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   384   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   385   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   386   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   387  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   389  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   391   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   392   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   393   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   394   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   395   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   396   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   397   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   398   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   400  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   402  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   403   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   404   * \return counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   406  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   408  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   409   * This is generic function to get sticky overflow bit of any performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   410   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   411   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   412   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   413  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   415  /** \brief Reset and start instruction, clock and multi counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   417   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   418   * \param mode Counter mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   419   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   420   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   421  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   423  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   424   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   425   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   426   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   427   * \param enable enable Command to enable or disable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   428   * TRUE: Enable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   429   * FALSE: Disable the performance counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   430   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   431   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   432  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   434  /** \brief Stop instruction and clock counters, return their values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   435   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   436   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   437   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   438   * \return Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   440  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   442  /** \brief API to update clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   444   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   445   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   446   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   451  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   452   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   453   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   455   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   458  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   460  /** \brief API to update performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   461   * This is generic function to update any of the performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   462   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   463   * \param count Count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   464   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   465   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   466  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   468  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   470  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   471   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   472  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   473  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   474  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   475  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   477  /** \brief API to acquire the mutex (binary semaphore).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   478   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   479   * This API can be used to acquire/get the mutex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   480   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   481   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   482   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   483   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   484   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   485   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   486   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   487   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   488   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   489   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   490   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   491   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   492   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   493  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   495  /** \brief API to unlock the mutex .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   496   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   497   * This API can be used to unlock the previously acquired mutex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   498   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   500   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   501   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   502   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   503   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   504   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   505   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   506   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   507   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   508   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   509   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   510   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   511  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   512  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   513  /** \brief API to unlock the resource .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   514   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   515   * This API can be used to unlock the previously acquired lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   516   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   517   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   518   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   519  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   521  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   522   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   523   * This API can be used to spin lock for the lock for the given timeout period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   524   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   525   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   526   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   527   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   528   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   529   *    IfxCpu_spinLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   530   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   531   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   532   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   533   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   534   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   535   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   536   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   537   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   538  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   539  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   540  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   542  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   543   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   545  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   547  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   549  /** \brief API to get random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   550   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   551   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   553  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   555  /** \brief API to get random value with in the range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   556   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   557   * \param min minimum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   558   * \param max maximum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   559   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   560   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   561  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   562  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   563  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   566  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   569  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   570  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   571      Ifx_CPU_ICR reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   572      reg.U = __mfcr(CPU_ICR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   573      return reg.B.IE != 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   574  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   575  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   576  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   577  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   578  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   579      boolean enabled;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   580      enabled = IfxCpu_areInterruptsEnabled();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   581      __disable();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   582      __nop();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   583      return enabled;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   584  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   585  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   586  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   587  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   588  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   589      __enable();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   590  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   591  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   592  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   593  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   594  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   595      uint32 cpu_pmaVal;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   596      uint16 checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   597      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   598      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   599  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   600      /*resolve the restrictions*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   601      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   602      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   603  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   604      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   605      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   606          segmentNumberMask |= checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   607      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   608  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   609      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   610  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   611      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   613      /*The CPU_PMA registers are ENDINIT protected*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   614      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   615      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   616      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   617      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   618      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   619      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   620      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   621  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   624  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   625  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   626      uint32 cpu_pmaVal;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   627      uint16 checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   628      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   629      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   630  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   631      /*resolve the restrictions*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   632      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   633      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xD);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   634  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   635      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   636      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   637          segmentNumberMask |= checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   638      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   639  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   640      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   641  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   642      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   643  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   644      /*The CPU_PMA registers are ENDINIT protected*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   645      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   646      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   647      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   648      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   649      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   650      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   651      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   652  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   653  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   655  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   656  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   657      __disable();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   658      __nop();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   659  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   660  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   662  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   663  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   664      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   665  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   667  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   668  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   669  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   670      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   671  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   672  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   673  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   674  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   675  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   676      Ifx_CPU_CORE_ID reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   677      reg.U = __mfcr(CPU_CORE_ID);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   678      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   679  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   680  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   681  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   682  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   683  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   684      Ifx_CPU_CORE_ID reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   685      reg.U = __mfcr(CPU_CORE_ID);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   686      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   687  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   689  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   690  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   691  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   692      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   693  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   695  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   696  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   697  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   698      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   699  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   701  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   702  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   703  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   704      Ifx_CPU_CCNT ccnt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   705      ccnt.U = __mfcr(address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   706      return ccnt.B.CountValue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   707  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   708  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   709  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   710  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   711  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   712      Ifx_CPU_CCNT ccnt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   713  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   714      ccnt.U = __mfcr(address);   /*read the counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   715  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   716      return ccnt.B.SOvf;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   717  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   719  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   720  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   721  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   722      uint32  k;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   723      uint32  nxt_cxi_val = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   724      uint32 *prvCsa      = 0U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   725      uint32 *nxtCsa      = csaBegin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   726  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   727      for (k = 0; k < (((uint32)csaEnd - (uint32)csaBegin) / 64); k++)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   728      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   729          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   731          if (k == 0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   732          {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   733              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   734          }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   735          else
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   736          {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   737              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   738          }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   739  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   740          prvCsa  = (uint32 *)nxtCsa;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   741          nxtCsa += 16;           /* next CSA */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   742      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   743  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   744      *prvCsa = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   745      __mtcr(CPU_LCX, nxt_cxi_val);   /* Last context save area is pointed in LCX to know if there is CSA depletion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   746  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   747  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   748  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   749  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   750  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   751      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   752      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   753          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   754          Ifx_CPU_PCON1 pcon1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   755          pcon1.U       = __mfcr(CPU_PCON1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   756          pcon1.B.PCINV = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   757          __mtcr(CPU_PCON1, pcon1.U);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   758          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   759      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   760  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   761  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   762  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   763  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   764  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   765      uint8 segment = (uint32)address >> 24;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   766      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   767  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   768  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   770  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   771  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   772      Ifx_CPU_CCTRL cctrl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   773      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   774      /*Disable the counters */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   775      cctrl.B.CE = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   776      __mtcr(CPU_CCTRL, cctrl.U);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   777  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   778      /* reset the counters */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   779      __mtcr(CPU_CCNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   780      __mtcr(CPU_ICNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   781      __mtcr(CPU_M1CNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   782      __mtcr(CPU_M2CNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   783      __mtcr(CPU_M3CNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   784  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   785      /*Enable the counters, set the counter mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   786      cctrl.B.CE = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   787      cctrl.B.CM = mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   788      __mtcr(CPU_CCTRL, cctrl.U);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   789  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   792  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   793  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   795      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   796          __enable();
	enable

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
.L4:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   277      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   278          deadLine = TIME_INFINITE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   279      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   280      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   281      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   282          deadLine = now() + timeout;
	addx	d6,d0,d4
	addc	d7,d1,d5

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   280      else      (inlined)
.L3:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   403      while (isDeadLine(deadLine) == FALSE)      (inlined)
.L5:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   283      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   284  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   285      return deadLine;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   286  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   287  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   288  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   289  /** \brief Return the time until the dead line.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   290   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   291   * \param deadline Specifies the dead line from now: Deadline = Now + Timeout
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   292   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   293   * \return Return the time until the dead line.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   294   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   295  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   296  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   297      Ifx_TickTime timeout;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   298  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   299      if (deadline == TIME_INFINITE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   300      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   301          timeout = TIME_INFINITE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   302      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   303      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   304      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   305          timeout = deadline - now();
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   306      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   308      return timeout;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   309  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   310  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   311  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   312  /** \brief Return TRUE if the dead line is over.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   313   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   314   * \param deadLine Specifies the dead line.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   315   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   316   * \retval TRUE Returns TRUE if the dead line is over
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   317   * \retval FALSE Returns FALSE if the dead line is not yet over
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   318   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   319  IFX_INLINE boolean isDeadLine(Ifx_TickTime deadLine)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   320  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   321      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   323      if (deadLine == TIME_INFINITE)
	ld.d	e0,.8.cnt
.L176:
	ne	d15,d6,d0
	or.ne	d15,d7,d1
.L177:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   323      if (deadLine == TIME_INFINITE)      (inlined)
	jeq	d15,#0,.L7
.L110:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    25   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    26   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    27   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    28   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    29   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    30   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    31   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    32   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    33   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    34   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    35   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    36   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    37   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    38   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    39   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    40   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    41   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    43  #ifndef IFXCPU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    44  #define IFXCPU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    50  #include "_Impl/IfxCpu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    51  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    52  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    53  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    54  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    55  #include "_Utilities/Ifx_Assert.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    57  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    58  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    59  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    61  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    62   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    63   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    64   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    65   * Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    66   *  \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    67   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    68   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    69   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    70   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    71  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    72  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    73  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    74   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    75   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    76   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    77   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    78   *   Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    79   *   \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    80   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    81   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    82   *   \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    83   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    84  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    86  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    87  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    88  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    90  /** \brief Lock type Spin lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    91   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    92  typedef unsigned int IfxCpu_spinLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    93  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    94  /** \brief Lock type Mutex lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    96  typedef unsigned int IfxCpu_mutexLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    99  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   102  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   103   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   104  /** \brief Enumeration for the Cpu mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   105   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   106  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   107  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   108      IfxCpu_CoreMode_halt,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   109      IfxCpu_CoreMode_run,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   110      IfxCpu_CoreMode_idle,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   111      IfxCpu_CoreMode_sleep,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   112      IfxCpu_CoreMode_stby,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   113      IfxCpu_CoreMode_unknown
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   114  } IfxCpu_CoreMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   116  /** \brief Performance conunter modes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   117   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   118  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   119  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   120      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   121      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   122  } IfxCpu_CounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   124  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   127  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   130  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   131   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   132  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   133  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   134      uint32  counter;      /**< \brief Counter value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   135      boolean overlfow;     /**< \brief sticky overlfow */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   136  } IfxCpu_Counter;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   138  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   139  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   140  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   141   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   142  /** \brief Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   143   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   144  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   145  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   146      IfxCpu_Counter instruction;     /**< \brief Instruction counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   147      IfxCpu_Counter clock;           /**< \brief CPU clock counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   148      IfxCpu_Counter counter1;        /**< \brief Multi counter 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   149      IfxCpu_Counter counter2;        /**< \brief Multi counter 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   150      IfxCpu_Counter counter3;        /**< \brief Multi counter 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   151  } IfxCpu_Perf;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   153  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   155  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   156   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   157  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   158  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   159  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   160  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   162  /** \brief API to get core id of the CPU of the caller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   163   * Caution: Core id of the cpus may not be continguous and shouldn't be used to index cpu.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   164   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   165   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   167  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   169  /** \brief API to get cpu index of the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   170   * Note: This api can be used whereever cpu no/index is needed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   171   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   173  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   175  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   177   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   178   * shall not be used to initialize the CSA of another CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   179   * \param csaBegin Pointer to start of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   180   * \param csaEnd Pointer to end of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   181   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   183  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   184  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   185  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   186   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   188  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   189  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   190  /** \brief Triggers Software Reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   191   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   193  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   195  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   196  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   197  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   199  /** \brief API to get the address for CPU HW module register memory map
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   200   * \param cpu Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   201   * \return CPU module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   202   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   203  IFX_EXTERN Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   205  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   206   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   207   * \return Current mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   209  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   211  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   212   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   213   * \return Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   215  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   217  /** \brief API to set mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   218   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   219   * \param mode CPU mode to be set by this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   220   * \return Success status of the activity (setting the core mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   221   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   222   * \retval FALSE: If the activity can't be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   224  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   226  /** \brief API to set the program counter for the CPU specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   227   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   228   * \param programCounter Program counter value to be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   229   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   230   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   231   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   232   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   233  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   235  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   236   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   237   * \param programCounter Program counter value to start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   238   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   239   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   240   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   242  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   244  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   246  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   247   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   249  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   251  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   253  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   254   * This API provides the status of CPU where this API is called
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   255   * \return Status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   256   * \retval TRUE: Global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   257   * \retval FALSE: Global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   258   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   259  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   261  /** \brief API to disable global interrupt and return the previous status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   262   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   263   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   264   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   265   * \return Previous status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   266   * \retval TRUE: Previously, global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   267   * \retval FALSE: Previously, global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   269  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   270  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   271  /** \brief API to enable global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   272   * This API simply enables the global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   273   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   274   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   275  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   276  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   277  /** \brief Disable the Global Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   280  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   282  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   283   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   284   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   285   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   286   * \param enabled Previous status of the global interrupt enable bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   287   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   288   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   289  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   290  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   291  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   293  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   294   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   296  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   297  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   298  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   300  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   301   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   302   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   303   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   304   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   307  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   309  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   310   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   311   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   312   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   313   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   314   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   315   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   316  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   318  /** \brief API to invalidate the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   319   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   320   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   321  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   322  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   323  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   324   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   325   * \return Status TRUE/FALSE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   326   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   327  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   329  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   330   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   331   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   332   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   333   * \param enable Command to enable or bypass the data cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   334   * TRUE: Enable the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   335   * FALSE: Bypass the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   336   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   337   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   338  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   339  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   342   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   343   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   344   * \param enable Command to enable or bypass the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   345   * TRUE: Enable the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   346   * FALSE: Bypass the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   353  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   360  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   361   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   362   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   363   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   364   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   366  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   368  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   369   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   370   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   371   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   372   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   373   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   374   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   375   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   376   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   377   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   379  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   381  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   382   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   383   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   384   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   385   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   386   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   387  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   389  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   391   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   392   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   393   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   394   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   395   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   396   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   397   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   398   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   400  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   402  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   403   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   404   * \return counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   406  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   408  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   409   * This is generic function to get sticky overflow bit of any performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   410   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   411   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   412   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   413  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   415  /** \brief Reset and start instruction, clock and multi counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   417   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   418   * \param mode Counter mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   419   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   420   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   421  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   423  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   424   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   425   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   426   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   427   * \param enable enable Command to enable or disable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   428   * TRUE: Enable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   429   * FALSE: Disable the performance counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   430   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   431   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   432  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   434  /** \brief Stop instruction and clock counters, return their values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   435   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   436   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   437   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   438   * \return Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   440  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   442  /** \brief API to update clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   444   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   445   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   446   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   451  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   452   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   453   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   455   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   458  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   460  /** \brief API to update performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   461   * This is generic function to update any of the performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   462   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   463   * \param count Count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   464   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   465   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   466  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   468  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   470  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   471   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   472  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   473  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   474  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   475  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   477  /** \brief API to acquire the mutex (binary semaphore).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   478   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   479   * This API can be used to acquire/get the mutex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   480   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   481   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   482   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   483   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   484   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   485   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   486   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   487   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   488   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   489   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   490   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   491   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   492   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   493  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   495  /** \brief API to unlock the mutex .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   496   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   497   * This API can be used to unlock the previously acquired mutex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   498   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   500   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   501   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   502   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   503   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   504   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   505   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   506   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   507   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   508   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   509   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   510   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   511  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   512  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   513  /** \brief API to unlock the resource .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   514   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   515   * This API can be used to unlock the previously acquired lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   516   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   517   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   518   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   519  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   521  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   522   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   523   * This API can be used to spin lock for the lock for the given timeout period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   524   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   525   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   526   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   527   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   528   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   529   *    IfxCpu_spinLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   530   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   531   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   532   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   533   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   534   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   535   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   536   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   537   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   538  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   539  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   540  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   542  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   543   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   545  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   547  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   549  /** \brief API to get random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   550   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   551   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   553  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   555  /** \brief API to get random value with in the range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   556   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   557   * \param min minimum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   558   * \param max maximum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   559   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   560   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   561  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   562  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   563  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   566  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   569  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   570  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   571      Ifx_CPU_ICR reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   572      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L137:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   573      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L138:
	ne	d15,d15,#0
.L113:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   574  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   575  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   576  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   577  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   578  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   579      boolean enabled;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   580      enabled = IfxCpu_areInterruptsEnabled();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   581      __disable();
	disable
.L178:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   582      __nop();
	nop
.L112:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
	ld.w	d0,0xf0000010
.L115:
	ld.d	e2,.8.cnt
.L117:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d1,0xf000002c
.L118:
	and	d0,d2
.L139:
	and	d1,d3
.L120:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L8
.L179:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    25   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    26   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    27   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    28   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    29   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    30   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    31   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    32   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    33   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    34   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    35   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    36   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    37   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    38   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    39   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    40   * \ingroup IfxLld_Cpu_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    41   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    43  #ifndef IFXCPU_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    44  #define IFXCPU_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    50  #include "_Impl/IfxCpu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    51  #include "IfxSrc_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    52  #include "IfxScu_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    53  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    54  #include "_Impl/IfxScu_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    55  #include "_Utilities/Ifx_Assert.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    57  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    58  /*-----------------------------------Macros-----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    59  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    61  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    62   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    63   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    64   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    65   * Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    66   *  \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    67   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    68   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    69   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    70   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    71  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    72  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    73  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    74   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    75   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    76   * the CPU number.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    77   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    78   *   Example usage:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    79   *   \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    80   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    81   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    82   *   \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    83   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    84  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    85  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    86  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    87  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    88  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    89  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    90  /** \brief Lock type Spin lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    91   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    92  typedef unsigned int IfxCpu_spinLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    93  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    94  /** \brief Lock type Mutex lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    95   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    96  typedef unsigned int IfxCpu_mutexLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    97  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    98  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	    99  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   100  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   101  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   102  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   103   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   104  /** \brief Enumeration for the Cpu mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   105   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   106  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   107  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   108      IfxCpu_CoreMode_halt,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   109      IfxCpu_CoreMode_run,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   110      IfxCpu_CoreMode_idle,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   111      IfxCpu_CoreMode_sleep,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   112      IfxCpu_CoreMode_stby,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   113      IfxCpu_CoreMode_unknown
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   114  } IfxCpu_CoreMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   115  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   116  /** \brief Performance conunter modes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   117   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   118  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   119  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   120      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   121      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   122  } IfxCpu_CounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   123  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   124  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   127  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   128  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   129  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   130  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   131   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   132  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   133  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   134      uint32  counter;      /**< \brief Counter value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   135      boolean overlfow;     /**< \brief sticky overlfow */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   136  } IfxCpu_Counter;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   137  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   138  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   139  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   140  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   141   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   142  /** \brief Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   143   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   144  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   145  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   146      IfxCpu_Counter instruction;     /**< \brief Instruction counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   147      IfxCpu_Counter clock;           /**< \brief CPU clock counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   148      IfxCpu_Counter counter1;        /**< \brief Multi counter 1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   149      IfxCpu_Counter counter2;        /**< \brief Multi counter 2 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   150      IfxCpu_Counter counter3;        /**< \brief Multi counter 3 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   151  } IfxCpu_Perf;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   153  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   155  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   156   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   157  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   158  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   159  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   160  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   161  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   162  /** \brief API to get core id of the CPU of the caller.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   163   * Caution: Core id of the cpus may not be continguous and shouldn't be used to index cpu.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   164   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   165   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   166   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   167  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   168  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   169  /** \brief API to get cpu index of the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   170   * Note: This api can be used whereever cpu no/index is needed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   171   * \return Resource index of the CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   173  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   175  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   177   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   178   * shall not be used to initialize the CSA of another CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   179   * \param csaBegin Pointer to start of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   180   * \param csaEnd Pointer to end of context save area
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   181   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   183  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   184  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   185  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   186   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   188  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   189  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   190  /** \brief Triggers Software Reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   191   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   192   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   193  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   194  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   195  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   196  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   197  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   198  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   199  /** \brief API to get the address for CPU HW module register memory map
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   200   * \param cpu Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   201   * \return CPU module register address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   202   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   203  IFX_EXTERN Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   204  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   205  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   206   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   207   * \return Current mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   209  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   211  /** \brief API to get current mode of CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   212   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   213   * \return Resource index of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   214   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   215  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   216  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   217  /** \brief API to set mode of the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   218   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   219   * \param mode CPU mode to be set by this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   220   * \return Success status of the activity (setting the core mode).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   221   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   222   * \retval FALSE: If the activity can't be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   224  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   225  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   226  /** \brief API to set the program counter for the CPU specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   227   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   228   * \param programCounter Program counter value to be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   229   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   230   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   231   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   232   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   233  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   234  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   235  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   236   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   237   * \param programCounter Program counter value to start the CPU
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   238   * \return success status of the activity (setting program counter value).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   239   * \retval TRUE: If the activity successfully be performed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   240   * \retval FALSE: If the activity can't be performed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   242  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   243  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   244  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   245  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   246  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   247   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   248  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   249  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   251  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   253  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   254   * This API provides the status of CPU where this API is called
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   255   * \return Status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   256   * \retval TRUE: Global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   257   * \retval FALSE: Global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   258   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   259  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   260  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   261  /** \brief API to disable global interrupt and return the previous status.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   262   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   263   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   264   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   265   * \return Previous status of global interrupt enable bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   266   * \retval TRUE: Previously, global interrupts enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   267   * \retval FALSE: Previously, global interrupts disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   268   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   269  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   270  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   271  /** \brief API to enable global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   272   * This API simply enables the global interrupt.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   273   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   274   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   275  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   276  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   277  /** \brief Disable the Global Interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   280  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   282  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   283   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   284   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   285   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   286   * \param enabled Previous status of the global interrupt enable bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   287   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   288   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   289  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   290  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   291  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   293  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   294   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   296  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   297  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   298  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   299  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   300  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   301   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   302   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   303   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   304   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   307  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   309  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   310   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   311   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   312   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   313   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   314   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   315   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   316  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   317  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   318  /** \brief API to invalidate the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   319   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   320   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   321  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   322  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   323  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   324   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   325   * \return Status TRUE/FALSE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   326   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   327  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   328  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   329  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   330   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   331   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   332   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   333   * \param enable Command to enable or bypass the data cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   334   * TRUE: Enable the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   335   * FALSE: Bypass the data cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   336   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   337   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   338  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   339  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   342   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   343   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   344   * \param enable Command to enable or bypass the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   345   * TRUE: Enable the program cache.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   346   * FALSE: Bypass the program cache
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   353  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   360  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   361   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   362   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   363   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   364   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   365   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   366  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   367  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   368  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   369   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   370   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   371   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   372   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   373   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   374   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   375   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   376   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   377   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   378   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   379  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   380  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   381  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   382   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   383   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   384   * used for this activity towards other CPUs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   385   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   386   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   387  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   389  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   391   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   392   * It cannot be used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   393   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   394   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   395   * reading the counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   396   * \return Status of sticky overflow bit.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   397   * \retval TRUE: Sticky overflow bit is set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   398   * \retval FALSE: Sticky overflow bit is reset
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   400  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   402  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   403   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   404   * \return counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   406  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   408  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   409   * This is generic function to get sticky overflow bit of any performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   410   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   411   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   412   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   413  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   414  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   415  /** \brief Reset and start instruction, clock and multi counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   417   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   418   * \param mode Counter mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   419   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   420   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   421  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   422  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   423  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   424   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   425   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   426   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   427   * \param enable enable Command to enable or disable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   428   * TRUE: Enable the performance counter.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   429   * FALSE: Disable the performance counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   430   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   431   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   432  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   433  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   434  /** \brief Stop instruction and clock counters, return their values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   435   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   436   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   437   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   438   * \return Performance counter result
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   439   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   440  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   441  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   442  /** \brief API to update clock counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   444   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   445   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   446   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   447   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   448   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   450  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   451  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   452   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   453   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   455   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   458  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   460  /** \brief API to update performance counter for the CPU which calls this API.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   461   * This is generic function to update any of the performance counters
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   462   * \param address Address
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   463   * \param count Count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   464   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   465   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   466  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   468  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   470  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   471   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   472  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   473  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   474  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   475  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   476  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   477  /** \brief API to acquire the mutex (binary semaphore).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   478   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   479   * This API can be used to acquire/get the mutex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   480   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   481   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   482   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   483   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   484   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   485   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   486   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   487   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   488   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   489   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   490   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   491   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   492   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   493  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   494  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   495  /** \brief API to unlock the mutex .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   496   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   497   * This API can be used to unlock the previously acquired mutex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   498   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   500   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   501   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   502   *    IfxCpu_mutexLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   503   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   504   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   505   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   506   *      IfxCpu_releaseMutex(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   507   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   508   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   509   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   510   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   511  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   512  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   513  /** \brief API to unlock the resource .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   514   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   515   * This API can be used to unlock the previously acquired lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   516   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   517   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   518   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   519  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   521  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   522   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   523   * This API can be used to spin lock for the lock for the given timeout period.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   524   * \param lock lock pointer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   525   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   526   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   527   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   528   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   529   *    IfxCpu_spinLock resourceLock;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   530   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   531   *    if (flag){
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   532   *      // critical section
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   533   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   534   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   535   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   536   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   537   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   538  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   539  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   540  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   542  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   543   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   544  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   545  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   547  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   549  /** \brief API to get random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   550   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   551   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   552   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   553  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   554  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   555  /** \brief API to get random value with in the range
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   556   * \param seed Pointer to seed value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   557   * \param min minimum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   558   * \param max maximum range value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   559   * \return random value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   560   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   561  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   562  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   563  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   564  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   565  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   566  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   567  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   568  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   569  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   570  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   571      Ifx_CPU_ICR reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   572      reg.U = __mfcr(CPU_ICR);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   573      return reg.B.IE != 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   574  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   575  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   576  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   577  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   578  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   579      boolean enabled;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   580      enabled = IfxCpu_areInterruptsEnabled();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   581      __disable();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   582      __nop();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   583      return enabled;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   584  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   585  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   586  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   587  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   588  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   589      __enable();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   590  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   591  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   592  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   593  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   594  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   595      uint32 cpu_pmaVal;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   596      uint16 checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   597      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   598      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   599  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   600      /*resolve the restrictions*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   601      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   602      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xC);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   603  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   604      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   605      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   606          segmentNumberMask |= checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   607      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   608  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   609      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   610  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   611      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   613      /*The CPU_PMA registers are ENDINIT protected*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   614      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   615      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   616      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   617      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   618      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   619      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   620      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   621  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   622  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   624  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   625  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   626      uint32 cpu_pmaVal;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   627      uint16 checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   628      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   629      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   630  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   631      /*resolve the restrictions*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   632      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   633      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xD);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   634  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   635      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   636      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   637          segmentNumberMask |= checkRestrictionMask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   638      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   639  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   640      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   641  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   642      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   643  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   644      /*The CPU_PMA registers are ENDINIT protected*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   645      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   646      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   647      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   648      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   649      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   650      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   651      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   652  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   653  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   654  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   655  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   656  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   657      __disable();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   658      __nop();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   659  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   660  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   662  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   663  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   664      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   665  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   667  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   668  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   669  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   670      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   671  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   672  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   673  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   674  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   675  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   676      Ifx_CPU_CORE_ID reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   677      reg.U = __mfcr(CPU_CORE_ID);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   678      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   679  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   680  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   681  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   682  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   683  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   684      Ifx_CPU_CORE_ID reg;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   685      reg.U = __mfcr(CPU_CORE_ID);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   686      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   687  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   689  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   690  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   691  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   692      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   693  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   695  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   696  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   697  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   698      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   699  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   701  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   702  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   703  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   704      Ifx_CPU_CCNT ccnt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   705      ccnt.U = __mfcr(address);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   706      return ccnt.B.CountValue;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   707  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   708  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   709  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   710  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   711  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   712      Ifx_CPU_CCNT ccnt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   713  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   714      ccnt.U = __mfcr(address);   /*read the counter */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   715  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   716      return ccnt.B.SOvf;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   717  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   719  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   720  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   721  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   722      uint32  k;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   723      uint32  nxt_cxi_val = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   724      uint32 *prvCsa      = 0U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   725      uint32 *nxtCsa      = csaBegin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   726  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   727      for (k = 0; k < (((uint32)csaEnd - (uint32)csaBegin) / 64); k++)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   728      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   729          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   730  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   731          if (k == 0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   732          {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   733              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   734          }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   735          else
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   736          {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   737              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   738          }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   739  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   740          prvCsa  = (uint32 *)nxtCsa;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   741          nxtCsa += 16;           /* next CSA */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   742      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   743  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   744      *prvCsa = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   745      __mtcr(CPU_LCX, nxt_cxi_val);   /* Last context save area is pointed in LCX to know if there is CSA depletion */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   746  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   747  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   748  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   749  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   750  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   751      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   752      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   753          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   754          Ifx_CPU_PCON1 pcon1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   755          pcon1.U       = __mfcr(CPU_PCON1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   756          pcon1.B.PCINV = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   757          __mtcr(CPU_PCON1, pcon1.U);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   758          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   759      }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   760  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   761  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   762  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   763  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   764  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   765      uint8 segment = (uint32)address >> 24;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   766      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   767  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   768  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   769  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   770  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   771  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   772      Ifx_CPU_CCTRL cctrl;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   773      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   774      /*Disable the counters */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   775      cctrl.B.CE = 0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   776      __mtcr(CPU_CCTRL, cctrl.U);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   777  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   778      /* reset the counters */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   779      __mtcr(CPU_CCNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   780      __mtcr(CPU_ICNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   781      __mtcr(CPU_M1CNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   782      __mtcr(CPU_M2CNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   783      __mtcr(CPU_M3CNT, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   784  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   785      /*Enable the counters, set the counter mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   786      cctrl.B.CE = 1;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   787      cctrl.B.CM = mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   788      __mtcr(CPU_CCTRL, cctrl.U);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   789  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   790  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   791  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   792  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   793  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   795      {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   796          __enable();
	enable

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
.L8:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   324      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   325          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   326      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   327      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   328      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   329          result = now() >= deadLine;
	ge.u	d15,d0,d6
.L140:
	and.eq	d15,d1,d7
	or.lt	d15,d7,d1

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   327      else      (inlined)
.L7:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.h	   403      while (isDeadLine(deadLine) == FALSE)      (inlined)
	jeq	d15,#0,.L5
.L64:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    74  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    75      wait(timeout);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Bsp\Bsp.c	    76  }
	ret
.L60:
	
__waitTime_function_end:
	.size	waitTime,__waitTime_function_end-waitTime
.L35:
	; End of function
	
	.sdecl	'.bss.Bsp.TimeConst',data,cluster('TimeConst')
	.sect	'.bss.Bsp.TimeConst'
	.global	TimeConst
	.align	4
TimeConst:	.type	object
	.size	TimeConst,88
	.space	88
	.calls	'initTime','IfxScuCcu_getSourceFrequency'
	.calls	'initTime','.cocofun_9'
	.calls	'initTime','',0
	.calls	'.cocofun_9','',0
	.calls	'waitPoll','',0
	.extern	IfxScuCcu_getSourceFrequency
	.calls	'waitTime','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L18:
	.word	75873
	.half	3
	.word	.L19
	.byte	4
.L17:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L20
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0
.L93:
	.byte	4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	238
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	212
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	244
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	244
	.byte	8
	.byte	'value',0,2,118,43
	.word	212
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5,4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,133,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	348
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	348
	.byte	16,0,2,35,0,0,11,4,187,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	364
	.byte	4,2,35,0,0
.L108:
	.byte	4
	.byte	'unsigned char',0,1,8,4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,142,8,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,4,195,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	539
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,157,8,16,4,10
	.byte	'AE',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,4,203,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	783
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,4,243,13,25,12,12
	.byte	'CON0',0
	.word	460
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	743
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	974
	.byte	4,2,35,8,0,13
	.word	1014
	.byte	6
	.word	1077
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,130,3,17,1,1,8
	.byte	'watchdog',0,3,130,3,65
	.word	1082
	.byte	8
	.byte	'password',0,3,130,3,82
	.word	517
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,222,3,17,1,1,8
	.byte	'watchdog',0,3,222,3,63
	.word	1082
	.byte	8
	.byte	'password',0,3,222,3,80
	.word	517
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,187,3,19
	.word	517
	.byte	1,1,8
	.byte	'watchdog',0,3,187,3,74
	.word	1082
	.byte	3,0,14,6,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,5,170,5,31
	.word	1312
	.byte	1,1,3,0
.L83:
	.byte	7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,185,4,20
	.word	500
	.byte	1,1
.L85:
	.byte	3,0
.L81:
	.byte	7
	.byte	'IfxCpu_disableInterrupts',0,3,5,193,4,20
	.word	500
	.byte	1,1
.L82:
	.byte	16,3,0,0,2
	.byte	'IfxCpu_enableInterrupts',0,3,5,203,4,17,1,1,3,0,2
	.byte	'IfxCpu_forceDisableInterrupts',0,3,5,143,5,17,1,1,3,0
.L100:
	.byte	2
	.byte	'IfxCpu_restoreInterrupts',0,3,5,152,6,17,1,1
.L101:
	.byte	8
	.byte	'enabled',0,5,152,6,50
	.word	500
.L103:
	.byte	3,0,4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,190,5,19
	.word	1610
	.byte	1,1,8
	.byte	'address',0,5,190,5,55
	.word	1610
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,198,5,20
	.word	500
	.byte	1,1,8
	.byte	'address',0,5,198,5,70
	.word	1610
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,153,7,17,1,1,8
	.byte	'address',0,5,153,7,56
	.word	1610
	.byte	8
	.byte	'count',0,5,153,7,72
	.word	1610
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,8,231,2,16,4,10
	.byte	'P0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,239,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1839
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,8,129,2,16,4,10
	.byte	'PS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,191,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2155
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,10
	.byte	'MODREV',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,231,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2726
	.byte	4,2,35,0,0,17,4
	.word	500
	.byte	18,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	500
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	500
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	500
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	500
	.byte	5,0,2,35,3,0,11,8,247,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2854
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	500
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	500
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	500
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	500
	.byte	5,0,2,35,3,0,11,8,135,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3069
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	500
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	500
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	500
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	500
	.byte	5,0,2,35,3,0,11,8,143,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3284
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	500
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	500
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	500
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	500
	.byte	5,0,2,35,3,0,11,8,255,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3501
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,10
	.byte	'P0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,239,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3721
	.byte	4,2,35,0,0,17,24
	.word	500
	.byte	18,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,8,160,3,16,4,10
	.byte	'PD0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	500
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	500
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	500
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	500
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	500
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,135,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4044
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,8,181,3,16,4,10
	.byte	'PD8',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	500
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	500
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	500
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	500
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	500
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,143,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4348
	.byte	4,2,35,0,0,17,8
	.word	500
	.byte	18,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,10
	.byte	'EN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,223,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4673
	.byte	4,2,35,0,0,17,12
	.word	500
	.byte	18,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,8,138,3,16,4,10
	.byte	'PDIS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,255,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5013
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,8,253,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	517
	.byte	6,7,2,35,0,10
	.byte	'SEL9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'SEL10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	325
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,247,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5379
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,8,166,2,16,4,10
	.byte	'PS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,11,8,207,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5590
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,8,187,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	325
	.byte	24,0,2,35,0,0,11,8,223,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5737
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,8,198,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	325
	.byte	20,0,2,35,0,0,11,8,231,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5906
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,8,176,2,16,4,10
	.byte	'reserved_0',0,2
	.word	517
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,215,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6078
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,8,192,1,16,4,10
	.byte	'reserved_0',0,2
	.word	517
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	517
	.byte	12,0,2,35,2,0,11,8,159,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6253
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,8,213,1,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	8,0,2,35,3,0,11,8,175,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6427
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,8,224,1,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	500
	.byte	4,0,2,35,3,0,11,8,183,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6601
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,8,203,1,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,167,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6777
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,8,209,2,16,4,10
	.byte	'PS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,8,199,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6933
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,8,235,1,16,4,10
	.byte	'reserved_0',0,2
	.word	517
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,151,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7266
	.byte	4,2,35,0,0,17,96
	.word	500
	.byte	18,95,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,8,215,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7623
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,10
	.byte	'EN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,8,207,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7710
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,8,159,5,25,128,2,12
	.byte	'OUT',0
	.word	2115
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2686
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	2805
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2845
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	3029
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3244
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3461
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3681
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	2845
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	3995
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	4035
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4308
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4624
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4664
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	4964
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	5004
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5339
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5550
	.byte	4,2,35,100,12
	.byte	'reserved_64',0
	.word	4664
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5697
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	5866
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	6038
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6213
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6387
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6561
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6737
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	6893
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7226
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7574
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	7614
	.byte	96,3,35,152,1,12
	.byte	'ACCEN1',0
	.word	7670
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8237
	.byte	4,3,35,252,1,0,13
	.word	8277
	.byte	6
	.word	8810
	.byte	14,7,131,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,7,143,4,17,1,1,8
	.byte	'port',0,7,143,4,44
	.word	8815
	.byte	8
	.byte	'pinIndex',0,7,143,4,56
	.word	500
	.byte	8
	.byte	'action',0,7,143,4,80
	.word	8820
	.byte	3,0,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,10,45,16,4,10
	.byte	'SRPN',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	500
	.byte	4,0,2,35,1,10
	.byte	'ECC',0,1
	.word	500
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	3,0,2,35,2,10
	.byte	'SRR',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,10,70,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9001
	.byte	4,2,35,0,0,13
	.word	9291
	.byte	6
	.word	9330
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,9,230,1,17,1,1,8
	.byte	'src',0,9,230,1,60
	.word	9335
	.byte	3,0,4
	.byte	'float',0,4,4
.L55:
	.byte	7
	.byte	'IfxScuCcu_getStmFrequency',0,3,11,175,8,20
	.word	9383
	.byte	1,1
.L56:
	.byte	3,0,9
	.byte	'_Ifx_STM_CLC_Bits',0,13,100,16,4,10
	.byte	'DISR',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,11,13,149,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9432
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ID_Bits',0,13,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	517
	.byte	16,0,2,35,2,0,11,13,181,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9588
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0_Bits',0,13,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,229,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9710
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM1_Bits',0,13,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,245,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9795
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM2_Bits',0,13,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,253,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9880
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM3_Bits',0,13,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,133,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9965
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM4_Bits',0,13,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,141,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10051
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM5_Bits',0,13,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,149,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10137
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM6_Bits',0,13,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,157,3,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10223
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAP_Bits',0,13,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,133,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10309
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CMP_Bits',0,13,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,165,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10396
	.byte	4,2,35,0,0,17,8
	.word	10438
	.byte	18,1,0,9
	.byte	'_Ifx_STM_CMCON_Bits',0,13,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	500
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	500
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	500
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	500
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	500
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	500
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	500
	.byte	3,0,2,35,3,0,11,13,157,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10487
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ICR_Bits',0,13,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	325
	.byte	25,0,2,35,0,0,11,13,173,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10718
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ISCR_Bits',0,13,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,11,13,189,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10935
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,13,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,237,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11099
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAPSV_Bits',0,13,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,141,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11186
	.byte	4,2,35,0,0,17,144,1
	.word	500
	.byte	18,143,1,0,9
	.byte	'_Ifx_STM_OCS_Bits',0,13,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	500
	.byte	2,0,2,35,3,0,11,13,221,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11286
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,13,175,1,16,4,10
	.byte	'CLR',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	325
	.byte	31,0,2,35,0,0,11,13,213,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11446
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST1_Bits',0,13,168,1,16,4,10
	.byte	'RST',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	325
	.byte	31,0,2,35,0,0,11,13,205,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11552
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST0_Bits',0,13,160,1,16,4,10
	.byte	'RST',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,11,13,197,2,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11656
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,13,82,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,11,13,253,1,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11779
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,13,45,16,4,10
	.byte	'EN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	500
	.byte	1,0,2,35,3,0,11,13,245,1,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11868
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM',0,13,173,3,25,128,2,12
	.byte	'CLC',0
	.word	9548
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2845
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	9670
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2845
	.byte	4,2,35,12,12
	.byte	'TIM0',0
	.word	9755
	.byte	4,2,35,16,12
	.byte	'TIM1',0
	.word	9840
	.byte	4,2,35,20,12
	.byte	'TIM2',0
	.word	9925
	.byte	4,2,35,24,12
	.byte	'TIM3',0
	.word	10011
	.byte	4,2,35,28,12
	.byte	'TIM4',0
	.word	10097
	.byte	4,2,35,32,12
	.byte	'TIM5',0
	.word	10183
	.byte	4,2,35,36,12
	.byte	'TIM6',0
	.word	10269
	.byte	4,2,35,40,12
	.byte	'CAP',0
	.word	10356
	.byte	4,2,35,44,12
	.byte	'CMP',0
	.word	10478
	.byte	8,2,35,48,12
	.byte	'CMCON',0
	.word	10678
	.byte	4,2,35,56,12
	.byte	'ICR',0
	.word	10895
	.byte	4,2,35,60,12
	.byte	'ISCR',0
	.word	11059
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	5004
	.byte	12,2,35,68,12
	.byte	'TIM0SV',0
	.word	11146
	.byte	4,2,35,80,12
	.byte	'CAPSV',0
	.word	11235
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	11275
	.byte	144,1,2,35,88,12
	.byte	'OCS',0
	.word	11406
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	11512
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	11616
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	11739
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	11828
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	12397
	.byte	4,3,35,252,1,0,13
	.word	12437
	.byte	6
	.word	12857
.L88:
	.byte	7
	.byte	'IfxStm_get',0,3,12,202,3,19
	.word	212
	.byte	1,1
.L90:
	.byte	8
	.byte	'stm',0,12,202,3,39
	.word	12862
.L92:
	.byte	3,0
.L47:
	.byte	7
	.byte	'IfxStm_getFrequency',0,3,12,219,3,20
	.word	9383
	.byte	1,1
.L49:
	.byte	8
	.byte	'stm',0,12,219,3,49
	.word	12862
.L51:
	.byte	16,3,0,0,7
	.byte	'IfxStm_getLower',0,3,12,229,3,19
	.word	1610
	.byte	1,1,8
	.byte	'stm',0,12,229,3,44
	.word	12862
	.byte	3,0
.L78:
	.byte	7
	.byte	'disableInterrupts',0,3,14,88,20
	.word	500
	.byte	1,1
.L80:
	.byte	16,3,0,0
.L95:
	.byte	2
	.byte	'restoreInterrupts',0,3,14,122,17,1,1
.L97:
	.byte	8
	.byte	'enabled',0,14,122,43
	.word	500
.L99:
	.byte	16,3,0,0
.L61:
	.byte	4
	.byte	'long long int',0,8,5
.L69:
	.byte	7
	.byte	'getDeadLine',0,3,14,144,2,25
	.word	13075
	.byte	1,1
.L70:
	.byte	8
	.byte	'timeout',0,14,144,2,50
	.word	13075
.L72:
	.byte	16,3,0,0
.L104:
	.byte	7
	.byte	'isDeadLine',0,3,14,191,2,20
	.word	500
	.byte	1,1
.L105:
	.byte	8
	.byte	'deadLine',0,14,191,2,44
	.word	13075
.L107:
	.byte	16,3,0,0
.L74:
	.byte	7
	.byte	'now',0,3,14,201,1,25
	.word	13075
	.byte	1,1
.L76:
	.byte	16,3,3,3,0,0,7
	.byte	'nowWithoutCriticalSection',0,3,14,220,1,25
	.word	13075
	.byte	1,1,16,3,0,0
.L63:
	.byte	2
	.byte	'wait',0,3,14,143,3,17,1,1
.L65:
	.byte	8
	.byte	'timeout',0,14,143,3,35
	.word	13075
.L67:
	.byte	16,3,3,0,0,13
	.word	341
	.byte	19
	.byte	'__mfcr',0
	.word	13281
	.byte	1,1,1,1,20
	.word	341
	.byte	0,21
	.byte	'__nop',0,1,1,1,1,21
	.byte	'__disable',0,1,1,1,1,21
	.byte	'__enable',0,1,1,1,1,22
	.word	183
	.byte	3,0,22
	.word	249
	.byte	23
	.word	267
	.byte	3,0,22
	.word	282
	.byte	23
	.word	296
	.byte	23
	.word	309
	.byte	3,0,22
	.word	1087
	.byte	23
	.word	1127
	.byte	23
	.word	1145
	.byte	3,0,22
	.word	1165
	.byte	23
	.word	1203
	.byte	23
	.word	1221
	.byte	3,0,22
	.word	1241
	.byte	23
	.word	1292
	.byte	3,0,22
	.word	1367
	.byte	3,0,22
	.word	1401
	.byte	3,0,22
	.word	1443
	.byte	16,24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,3,0,0,22
	.word	1484
	.byte	3,0,22
	.word	1518
	.byte	3,0,22
	.word	1558
	.byte	23
	.word	1591
	.byte	3,0,22
	.word	1631
	.byte	23
	.word	1672
	.byte	3,0,22
	.word	1691
	.byte	23
	.word	1746
	.byte	3,0,22
	.word	1765
	.byte	23
	.word	1805
	.byte	23
	.word	1822
	.byte	3,0,22
	.word	8923
	.byte	23
	.word	8951
	.byte	23
	.word	8965
	.byte	23
	.word	8983
	.byte	3,0,22
	.word	9340
	.byte	23
	.word	9368
	.byte	3,0,22
	.word	9392
	.byte	3,0,26
	.byte	'IfxScuCcu_getSourceFrequency',0,11,139,7,20
	.word	9383
	.byte	1,1,1,1,22
	.word	12867
	.byte	23
	.word	12890
	.byte	3,0,22
	.word	12905
	.byte	23
	.word	12937
	.byte	16,24
	.word	9392
	.byte	25
	.word	9430
	.byte	0,3,0,0,22
	.word	12954
	.byte	23
	.word	12982
	.byte	3,0,22
	.word	12997
	.byte	16,24
	.word	1443
	.byte	27
	.word	1480
	.byte	24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,25
	.word	1481
	.byte	0,0,3,0,0,22
	.word	13030
	.byte	23
	.word	13055
	.byte	16,24
	.word	1558
	.byte	23
	.word	1591
	.byte	25
	.word	1608
	.byte	0,3,0,0,22
	.word	13092
	.byte	23
	.word	13116
	.byte	16,24
	.word	13182
	.byte	27
	.word	13198
	.byte	24
	.word	12997
	.byte	27
	.word	13026
	.byte	24
	.word	1443
	.byte	27
	.word	1480
	.byte	24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,25
	.word	1481
	.byte	0,0,25
	.word	13027
	.byte	0,0,25
	.word	13199
	.byte	24
	.word	13030
	.byte	23
	.word	13055
	.byte	27
	.word	13071
	.byte	24
	.word	1558
	.byte	23
	.word	1591
	.byte	25
	.word	1608
	.byte	0,25
	.word	13072
	.byte	0,0,25
	.word	13200
	.byte	24
	.word	12867
	.byte	23
	.word	12890
	.byte	25
	.word	12903
	.byte	0,25
	.word	13201
	.byte	0,0,3,0,0
.L45:
	.byte	4
	.byte	'long int',0,4,5,22
	.word	13137
	.byte	23
	.word	13160
	.byte	16,24
	.word	13182
	.byte	27
	.word	13198
	.byte	24
	.word	12997
	.byte	27
	.word	13026
	.byte	24
	.word	1443
	.byte	27
	.word	1480
	.byte	24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,25
	.word	1481
	.byte	0,0,25
	.word	13027
	.byte	0,0,25
	.word	13199
	.byte	24
	.word	13030
	.byte	23
	.word	13055
	.byte	27
	.word	13071
	.byte	24
	.word	1558
	.byte	23
	.word	1591
	.byte	25
	.word	1608
	.byte	0,25
	.word	13072
	.byte	0,0,25
	.word	13200
	.byte	24
	.word	12867
	.byte	23
	.word	12890
	.byte	25
	.word	12903
	.byte	0,25
	.word	13201
	.byte	0,0,3,0,0,22
	.word	13182
	.byte	16,24
	.word	12997
	.byte	27
	.word	13026
	.byte	24
	.word	1443
	.byte	27
	.word	1480
	.byte	24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,25
	.word	1481
	.byte	0,0,25
	.word	13027
	.byte	0,0,3,24
	.word	13030
	.byte	23
	.word	13055
	.byte	27
	.word	13071
	.byte	24
	.word	1558
	.byte	23
	.word	1591
	.byte	25
	.word	1608
	.byte	0,25
	.word	13072
	.byte	0,0,3,24
	.word	12867
	.byte	23
	.word	12890
	.byte	25
	.word	12903
	.byte	0,3,0,0,22
	.word	13204
	.byte	16,24
	.word	12867
	.byte	23
	.word	12890
	.byte	25
	.word	12903
	.byte	0,3,0,0,22
	.word	13246
	.byte	23
	.word	13259
	.byte	16,24
	.word	13092
	.byte	23
	.word	13116
	.byte	27
	.word	13133
	.byte	24
	.word	13182
	.byte	27
	.word	13198
	.byte	24
	.word	12997
	.byte	27
	.word	13026
	.byte	24
	.word	1443
	.byte	27
	.word	1480
	.byte	24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,25
	.word	1481
	.byte	0,0,25
	.word	13027
	.byte	0,0,25
	.word	13199
	.byte	24
	.word	13030
	.byte	23
	.word	13055
	.byte	27
	.word	13071
	.byte	24
	.word	1558
	.byte	23
	.word	1591
	.byte	25
	.word	1608
	.byte	0,25
	.word	13072
	.byte	0,0,25
	.word	13200
	.byte	24
	.word	12867
	.byte	23
	.word	12890
	.byte	25
	.word	12903
	.byte	0,25
	.word	13201
	.byte	0,0,25
	.word	13134
	.byte	0,0,3,24
	.word	13137
	.byte	23
	.word	13160
	.byte	27
	.word	13178
	.byte	24
	.word	13182
	.byte	27
	.word	13198
	.byte	24
	.word	12997
	.byte	27
	.word	13026
	.byte	24
	.word	1443
	.byte	27
	.word	1480
	.byte	24
	.word	1401
	.byte	25
	.word	1441
	.byte	0,25
	.word	1481
	.byte	0,0,25
	.word	13027
	.byte	0,0,25
	.word	13199
	.byte	24
	.word	13030
	.byte	23
	.word	13055
	.byte	27
	.word	13071
	.byte	24
	.word	1558
	.byte	23
	.word	1591
	.byte	25
	.word	1608
	.byte	0,25
	.word	13072
	.byte	0,0,25
	.word	13200
	.byte	24
	.word	12867
	.byte	23
	.word	12890
	.byte	25
	.word	12903
	.byte	0,25
	.word	13201
	.byte	0,0,25
	.word	13179
	.byte	0,0,3,0,0,9
	.byte	'_Ifx_CPU_ICR_Bits',0,15,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	348
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	348
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	348
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	348
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	348
	.byte	6,0,2,35,0,0
.L86:
	.byte	11,15,223,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14468
	.byte	4,2,35,0,0,4
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,16,1,1
	.word	14625
	.byte	28
	.byte	'__size_t',0,16,1,1
	.word	325
	.byte	28
	.byte	'__ptrdiff_t',0,16,1,1
	.word	341
	.byte	29,1,6
	.word	14693
	.byte	28
	.byte	'__codeptr',0,16,1,1
	.word	14695
	.byte	28
	.byte	'__intptr_t',0,16,1,1
	.word	341
	.byte	28
	.byte	'__uintptr_t',0,16,1,1
	.word	325
	.byte	28
	.byte	'_iob_flag_t',0,17,82,25
	.word	517
	.byte	28
	.byte	'uint8',0,18,89,24
	.word	500
	.byte	28
	.byte	'sint16',0,18,90,24
	.word	14625
	.byte	28
	.byte	'uint16',0,18,91,24
	.word	517
	.byte	28
	.byte	'sint32',0,18,92,24
	.word	13870
	.byte	28
	.byte	'uint32',0,18,93,24
	.word	1610
	.byte	28
	.byte	'float32',0,18,94,24
	.word	9383
	.byte	28
	.byte	'boolean',0,18,104,24
	.word	500
	.byte	28
	.byte	'sint64',0,19,36,28
	.word	13075
	.byte	28
	.byte	'uint64',0,19,37,28
	.word	212
	.byte	28
	.byte	'pvoid',0,19,40,28
	.word	244
	.byte	28
	.byte	'Ifx_TickTime',0,19,43,28
	.word	13075
	.byte	28
	.byte	'Ifx_Priority',0,19,67,16
	.word	517
	.byte	14,19,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,28
	.byte	'Ifx_RxSel',0,19,104,3
	.word	14969
	.byte	9
	.byte	'_Ifx_CPU_A_Bits',0,15,45,16,4,10
	.byte	'ADDR',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_A_Bits',0,15,48,3
	.word	15105
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,15,51,16,4,10
	.byte	'VSS',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	348
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BIV_Bits',0,15,55,3
	.word	15166
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,15,58,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	348
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BTV_Bits',0,15,62,3
	.word	15245
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,15,65,16,4,10
	.byte	'CountValue',0,4
	.word	348
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT_Bits',0,15,69,3
	.word	15331
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,15,72,16,4,10
	.byte	'CM',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	348
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	348
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	348
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	348
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL_Bits',0,15,80,3
	.word	15420
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,15,83,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	348
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT_Bits',0,15,89,3
	.word	15566
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,15,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	348
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID_Bits',0,15,96,3
	.word	15693
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,15,99,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	348
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L_Bits',0,15,103,3
	.word	15791
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,15,106,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	348
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U_Bits',0,15,110,3
	.word	15884
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,15,113,16,4,10
	.byte	'MODREV',0,4
	.word	348
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	348
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID_Bits',0,15,118,3
	.word	15977
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,15,121,16,4,10
	.byte	'XE',0,4
	.word	348
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	348
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE_Bits',0,15,125,3
	.word	16084
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,15,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	348
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	348
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	348
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT_Bits',0,15,136,1,3
	.word	16171
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,15,139,1,16,4,10
	.byte	'CID',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	348
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID_Bits',0,15,143,1,3
	.word	16325
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,15,146,1,16,4,10
	.byte	'DATA',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_D_Bits',0,15,149,1,3
	.word	16419
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,15,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	348
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	348
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	348
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	348
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	348
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	348
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DATR_Bits',0,15,163,1,3
	.word	16482
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,15,166,1,16,4,10
	.byte	'DE',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	348
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	348
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	348
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	348
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	348
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	348
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR_Bits',0,15,177,1,3
	.word	16700
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,15,180,1,16,4,10
	.byte	'DTA',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	348
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR_Bits',0,15,184,1,3
	.word	16915
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,15,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	348
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0_Bits',0,15,192,1,3
	.word	17009
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,15,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2_Bits',0,15,199,1,3
	.word	17125
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,15,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	348
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCX_Bits',0,15,206,1,3
	.word	17226
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,15,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD_Bits',0,15,212,1,3
	.word	17319
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,15,215,1,16,4,10
	.byte	'TA',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR_Bits',0,15,218,1,3
	.word	17399
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,15,221,1,16,4,10
	.byte	'IED',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	348
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	348
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	348
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	348
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	348
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR_Bits',0,15,233,1,3
	.word	17468
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,15,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	348
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DMS_Bits',0,15,240,1,3
	.word	17697
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,15,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	348
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L_Bits',0,15,247,1,3
	.word	17790
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,15,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	348
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U_Bits',0,15,254,1,3
	.word	17885
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,15,129,2,16,4,10
	.byte	'RE',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE_Bits',0,15,133,2,3
	.word	17980
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,15,136,2,16,4,10
	.byte	'WE',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE_Bits',0,15,140,2,3
	.word	18070
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,15,143,2,16,4,10
	.byte	'SRE',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	348
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	348
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	348
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	348
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	348
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	348
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	348
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	348
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	348
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	348
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	348
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	348
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	348
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR_Bits',0,15,161,2,3
	.word	18160
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,15,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	348
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	348
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	348
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT_Bits',0,15,172,2,3
	.word	18484
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,15,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	348
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	348
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FCX_Bits',0,15,180,2,3
	.word	18638
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,15,183,2,16,4,10
	.byte	'TST',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	348
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	348
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	348
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	348
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	348
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	348
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	348
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	348
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	348
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	348
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	348
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	348
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	348
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	348
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,15,202,2,3
	.word	18744
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,15,205,2,16,4,10
	.byte	'OPC',0,4
	.word	348
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	348
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	348
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	348
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	348
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,15,212,2,3
	.word	19093
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,15,215,2,16,4,10
	.byte	'PC',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,15,218,2,3
	.word	19253
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,15,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,15,224,2,3
	.word	19334
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,15,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,15,230,2,3
	.word	19421
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,15,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,15,236,2,3
	.word	19508
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,15,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	348
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT_Bits',0,15,243,2,3
	.word	19595
	.byte	28
	.byte	'Ifx_CPU_ICR_Bits',0,15,253,2,3
	.word	14468
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,15,128,3,16,4,10
	.byte	'ISP',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_ISP_Bits',0,15,131,3,3
	.word	19712
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,15,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	348
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	348
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_LCX_Bits',0,15,139,3,3
	.word	19778
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,15,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	348
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT_Bits',0,15,146,3,3
	.word	19884
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,15,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	348
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT_Bits',0,15,153,3,3
	.word	19977
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,15,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	348
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT_Bits',0,15,160,3,3
	.word	20070
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,15,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	348
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_PC_Bits',0,15,167,3,3
	.word	20163
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,15,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	348
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0_Bits',0,15,175,3,3
	.word	20248
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,15,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	348
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1_Bits',0,15,183,3,3
	.word	20364
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,15,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2_Bits',0,15,190,3,3
	.word	20475
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,15,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	348
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	348
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	348
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	348
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI_Bits',0,15,200,3,3
	.word	20576
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,15,203,3,16,4,10
	.byte	'TA',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR_Bits',0,15,206,3,3
	.word	20706
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,15,209,3,16,4,10
	.byte	'IED',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	348
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	348
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	348
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	348
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	348
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR_Bits',0,15,221,3,3
	.word	20775
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,15,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	348
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0_Bits',0,15,229,3,3
	.word	21004
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,15,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	348
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	348
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1_Bits',0,15,237,3,3
	.word	21117
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,15,240,3,16,4,10
	.byte	'PSI',0,4
	.word	348
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2_Bits',0,15,244,3,3
	.word	21230
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,15,247,3,16,4,10
	.byte	'FRE',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	348
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	348
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	348
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	348
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	348
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR_Bits',0,15,129,4,3
	.word	21321
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,15,132,4,16,4,10
	.byte	'CDC',0,4
	.word	348
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	348
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	348
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	348
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	348
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	348
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	348
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	348
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	348
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	348
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	348
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	348
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSW_Bits',0,15,147,4,3
	.word	21524
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,15,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	348
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	348
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	348
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	348
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN_Bits',0,15,156,4,3
	.word	21767
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,15,159,4,16,4,10
	.byte	'PC',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	348
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	348
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	348
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	348
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	348
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	348
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	348
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON_Bits',0,15,171,4,3
	.word	21895
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,15,174,4,16,4,10
	.byte	'EN',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,15,177,4,3
	.word	22136
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,15,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,15,183,4,3
	.word	22219
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,15,186,4,16,4,10
	.byte	'EN',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,15,189,4,3
	.word	22310
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,15,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,15,195,4,3
	.word	22401
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,15,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	325
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,15,202,4,3
	.word	22500
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,15,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	325
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,15,209,4,3
	.word	22607
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,15,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	348
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	348
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	348
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT_Bits',0,15,220,4,3
	.word	22714
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,15,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	348
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON_Bits',0,15,231,4,3
	.word	22868
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,15,234,4,16,4,10
	.byte	'ASI',0,4
	.word	348
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	348
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,15,238,4,3
	.word	23029
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,15,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	348
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	348
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	348
	.byte	15,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON_Bits',0,15,249,4,3
	.word	23127
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,15,252,4,16,4,10
	.byte	'Timer',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,15,255,4,3
	.word	23299
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,15,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	348
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR_Bits',0,15,133,5,3
	.word	23379
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,15,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	348
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	348
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	348
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	348
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	348
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	348
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	348
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	348
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	348
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	348
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	348
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	348
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	348
	.byte	3,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT_Bits',0,15,153,5,3
	.word	23452
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,15,156,5,16,4,10
	.byte	'T0',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	348
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	348
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	348
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	348
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	348
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	348
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	348
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,15,167,5,3
	.word	23770
	.byte	11,15,175,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15105
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_A',0,15,180,5,3
	.word	23965
	.byte	11,15,183,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15166
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BIV',0,15,188,5,3
	.word	24024
	.byte	11,15,191,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15245
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BTV',0,15,196,5,3
	.word	24085
	.byte	11,15,199,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15331
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT',0,15,204,5,3
	.word	24146
	.byte	11,15,207,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15420
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL',0,15,212,5,3
	.word	24208
	.byte	11,15,215,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15566
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT',0,15,220,5,3
	.word	24271
	.byte	11,15,223,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15693
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID',0,15,228,5,3
	.word	24335
	.byte	11,15,231,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15791
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L',0,15,236,5,3
	.word	24400
	.byte	11,15,239,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15884
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U',0,15,244,5,3
	.word	24463
	.byte	11,15,247,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID',0,15,252,5,3
	.word	24526
	.byte	11,15,255,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16084
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE',0,15,132,6,3
	.word	24590
	.byte	11,15,135,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16171
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT',0,15,140,6,3
	.word	24652
	.byte	11,15,143,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16325
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID',0,15,148,6,3
	.word	24715
	.byte	11,15,151,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16419
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_D',0,15,156,6,3
	.word	24779
	.byte	11,15,159,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16482
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DATR',0,15,164,6,3
	.word	24838
	.byte	11,15,167,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16700
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR',0,15,172,6,3
	.word	24900
	.byte	11,15,175,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16915
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR',0,15,180,6,3
	.word	24963
	.byte	11,15,183,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17009
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0',0,15,188,6,3
	.word	25027
	.byte	11,15,191,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17125
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2',0,15,196,6,3
	.word	25090
	.byte	11,15,199,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17226
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCX',0,15,204,6,3
	.word	25153
	.byte	11,15,207,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17319
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD',0,15,212,6,3
	.word	25214
	.byte	11,15,215,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17399
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR',0,15,220,6,3
	.word	25277
	.byte	11,15,223,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17468
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR',0,15,228,6,3
	.word	25340
	.byte	11,15,231,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17697
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DMS',0,15,236,6,3
	.word	25403
	.byte	11,15,239,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17790
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L',0,15,244,6,3
	.word	25464
	.byte	11,15,247,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17885
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U',0,15,252,6,3
	.word	25527
	.byte	11,15,255,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17980
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE',0,15,132,7,3
	.word	25590
	.byte	11,15,135,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18070
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE',0,15,140,7,3
	.word	25652
	.byte	11,15,143,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18160
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR',0,15,148,7,3
	.word	25714
	.byte	11,15,151,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18484
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT',0,15,156,7,3
	.word	25776
	.byte	11,15,159,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18638
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FCX',0,15,164,7,3
	.word	25839
	.byte	11,15,167,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18744
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,15,172,7,3
	.word	25900
	.byte	11,15,175,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19093
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,15,180,7,3
	.word	25970
	.byte	11,15,183,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19253
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,15,188,7,3
	.word	26040
	.byte	11,15,191,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19334
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,15,196,7,3
	.word	26109
	.byte	11,15,199,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19421
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,15,204,7,3
	.word	26180
	.byte	11,15,207,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19508
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,15,212,7,3
	.word	26251
	.byte	11,15,215,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19595
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT',0,15,220,7,3
	.word	26322
	.byte	28
	.byte	'Ifx_CPU_ICR',0,15,228,7,3
	.word	14585
	.byte	11,15,231,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19712
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ISP',0,15,236,7,3
	.word	26405
	.byte	11,15,239,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19778
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_LCX',0,15,244,7,3
	.word	26466
	.byte	11,15,247,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19884
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT',0,15,252,7,3
	.word	26527
	.byte	11,15,255,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT',0,15,132,8,3
	.word	26590
	.byte	11,15,135,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20070
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT',0,15,140,8,3
	.word	26653
	.byte	11,15,143,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20163
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PC',0,15,148,8,3
	.word	26716
	.byte	11,15,151,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20248
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0',0,15,156,8,3
	.word	26776
	.byte	11,15,159,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20364
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1',0,15,164,8,3
	.word	26839
	.byte	11,15,167,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20475
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2',0,15,172,8,3
	.word	26902
	.byte	11,15,175,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20576
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI',0,15,180,8,3
	.word	26965
	.byte	11,15,183,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20706
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR',0,15,188,8,3
	.word	27027
	.byte	11,15,191,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20775
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR',0,15,196,8,3
	.word	27090
	.byte	11,15,199,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21004
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0',0,15,204,8,3
	.word	27153
	.byte	11,15,207,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21117
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1',0,15,212,8,3
	.word	27215
	.byte	11,15,215,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21230
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2',0,15,220,8,3
	.word	27277
	.byte	11,15,223,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21321
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR',0,15,228,8,3
	.word	27339
	.byte	11,15,231,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21524
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSW',0,15,236,8,3
	.word	27401
	.byte	11,15,239,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21767
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN',0,15,244,8,3
	.word	27462
	.byte	11,15,247,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21895
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON',0,15,252,8,3
	.word	27525
	.byte	11,15,255,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22136
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA',0,15,132,9,3
	.word	27589
	.byte	11,15,135,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22219
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB',0,15,140,9,3
	.word	27659
	.byte	11,15,143,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22310
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,15,148,9,3
	.word	27729
	.byte	11,15,151,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22401
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,15,156,9,3
	.word	27803
	.byte	11,15,159,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22500
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,15,164,9,3
	.word	27877
	.byte	11,15,167,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22607
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,15,172,9,3
	.word	27947
	.byte	11,15,175,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22714
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT',0,15,180,9,3
	.word	28017
	.byte	11,15,183,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22868
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON',0,15,188,9,3
	.word	28080
	.byte	11,15,191,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23029
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI',0,15,196,9,3
	.word	28144
	.byte	11,15,199,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23127
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON',0,15,204,9,3
	.word	28210
	.byte	11,15,207,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23299
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER',0,15,212,9,3
	.word	28275
	.byte	11,15,215,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23379
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR',0,15,220,9,3
	.word	28342
	.byte	11,15,223,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23452
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT',0,15,228,9,3
	.word	28406
	.byte	11,15,231,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23770
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC',0,15,236,9,3
	.word	28470
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,15,247,9,25,8,12
	.byte	'L',0
	.word	24400
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	24463
	.byte	4,2,35,4,0,13
	.word	28536
	.byte	28
	.byte	'Ifx_CPU_CPR',0,15,251,9,3
	.word	28578
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,15,254,9,25,8,12
	.byte	'L',0
	.word	25464
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	25527
	.byte	4,2,35,4,0,13
	.word	28604
	.byte	28
	.byte	'Ifx_CPU_DPR',0,15,130,10,3
	.word	28646
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,15,133,10,25,16,12
	.byte	'LA',0
	.word	27877
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	27947
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	27729
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	27803
	.byte	4,2,35,12,0,13
	.word	28672
	.byte	28
	.byte	'Ifx_CPU_SPROT_RGN',0,15,139,10,3
	.word	28754
	.byte	17,12
	.word	28275
	.byte	18,2,0,9
	.byte	'_Ifx_CPU_TPS',0,15,142,10,25,16,12
	.byte	'CON',0
	.word	28210
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	28786
	.byte	12,2,35,4,0,13
	.word	28795
	.byte	28
	.byte	'Ifx_CPU_TPS',0,15,146,10,3
	.word	28843
	.byte	9
	.byte	'_Ifx_CPU_TR',0,15,149,10,25,8,12
	.byte	'EVT',0
	.word	28406
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	28342
	.byte	4,2,35,4,0,13
	.word	28869
	.byte	28
	.byte	'Ifx_CPU_TR',0,15,153,10,3
	.word	28914
	.byte	28
	.byte	'IfxCpu_ResourceCpu',0,6,87,3
	.word	1312
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,10,62,3
	.word	9001
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,10,75,3
	.word	9291
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,10,86,25,12,12
	.byte	'TX',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	9291
	.byte	4,2,35,8,0,13
	.word	29013
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,10,91,3
	.word	29072
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,10,94,25,4,12
	.byte	'SBSRC',0
	.word	9291
	.byte	4,2,35,0,0,13
	.word	29100
	.byte	28
	.byte	'Ifx_SRC_BCUSPB',0,10,97,3
	.word	29137
	.byte	17,64
	.word	9291
	.byte	18,15,0,9
	.byte	'_Ifx_SRC_CAN',0,10,100,25,64,12
	.byte	'INT',0
	.word	29165
	.byte	64,2,35,0,0,13
	.word	29174
	.byte	28
	.byte	'Ifx_SRC_CAN',0,10,103,3
	.word	29206
	.byte	17,32
	.word	9291
	.byte	18,7,0,9
	.byte	'_Ifx_SRC_CAN1',0,10,106,25,32,12
	.byte	'INT',0
	.word	29231
	.byte	32,2,35,0,0,13
	.word	29240
	.byte	28
	.byte	'Ifx_SRC_CAN1',0,10,109,3
	.word	29273
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,10,112,25,16,12
	.byte	'SR0',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	9291
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	9291
	.byte	4,2,35,12,0,13
	.word	29299
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,10,118,3
	.word	29371
	.byte	17,8
	.word	9291
	.byte	18,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,10,121,25,8,12
	.byte	'SR',0
	.word	29397
	.byte	8,2,35,0,0,13
	.word	29406
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,10,124,3
	.word	29442
	.byte	17,28
	.word	500
	.byte	18,27,0,9
	.byte	'_Ifx_SRC_CPU',0,10,127,25,32,12
	.byte	'SBSRC',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	29472
	.byte	28,2,35,4,0,13
	.word	29481
	.byte	28
	.byte	'Ifx_SRC_CPU',0,10,131,1,3
	.word	29535
	.byte	9
	.byte	'_Ifx_SRC_DMA',0,10,134,1,25,80,12
	.byte	'ERR',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	5004
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	29165
	.byte	64,2,35,16,0,13
	.word	29561
	.byte	28
	.byte	'Ifx_SRC_DMA',0,10,139,1,3
	.word	29626
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,10,142,1,25,4,12
	.byte	'SR',0
	.word	9291
	.byte	4,2,35,0,0,13
	.word	29652
	.byte	28
	.byte	'Ifx_SRC_EMEM',0,10,145,1,3
	.word	29685
	.byte	17,40
	.word	500
	.byte	18,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,10,148,1,25,80,12
	.byte	'INT',0
	.word	29397
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	29397
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	29397
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	29397
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	9291
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	9291
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	29712
	.byte	40,2,35,40,0,13
	.word	29721
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,10,157,1,3
	.word	29848
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,10,160,1,25,4,12
	.byte	'SR',0
	.word	9291
	.byte	4,2,35,0,0,13
	.word	29875
	.byte	28
	.byte	'Ifx_SRC_ETH',0,10,163,1,3
	.word	29907
	.byte	9
	.byte	'_Ifx_SRC_EVR',0,10,166,1,25,8,12
	.byte	'WUT',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'SCDC',0
	.word	9291
	.byte	4,2,35,4,0,13
	.word	29933
	.byte	28
	.byte	'Ifx_SRC_EVR',0,10,170,1,3
	.word	29980
	.byte	9
	.byte	'_Ifx_SRC_FFT',0,10,173,1,25,12,12
	.byte	'DONE',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'ERR',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'RFS',0
	.word	9291
	.byte	4,2,35,8,0,13
	.word	30006
	.byte	28
	.byte	'Ifx_SRC_FFT',0,10,178,1,3
	.word	30066
	.byte	17,240,11
	.word	500
	.byte	18,239,11,0,9
	.byte	'_Ifx_SRC_GPSR',0,10,181,1,25,128,12,12
	.byte	'SR0',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	9291
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	9291
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	30092
	.byte	240,11,2,35,16,0,13
	.word	30103
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,10,188,1,3
	.word	30199
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,10,191,1,25,48,12
	.byte	'CIRQ',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	9291
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	9291
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	9291
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	9291
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	4035
	.byte	24,2,35,24,0,13
	.word	30226
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,10,200,1,3
	.word	30343
	.byte	17,236,2
	.word	500
	.byte	18,235,2,0,17,32
	.word	29231
	.byte	18,0,0,17,224,7
	.word	500
	.byte	18,223,7,0,17,64
	.word	29231
	.byte	18,1,0,9
	.byte	'_Ifx_SRC_GTM',0,10,203,1,25,192,11,12
	.byte	'AEIIRQ',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	30371
	.byte	236,2,2,35,4,12
	.byte	'ERR',0
	.word	9291
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	5004
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	30382
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	30391
	.byte	224,7,3,35,160,3,12
	.byte	'TOM',0
	.word	30402
	.byte	64,3,35,128,11,0,13
	.word	30411
	.byte	28
	.byte	'Ifx_SRC_GTM',0,10,212,1,3
	.word	30558
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,10,215,1,25,8,12
	.byte	'HSM',0
	.word	29397
	.byte	8,2,35,0,0,13
	.word	30584
	.byte	28
	.byte	'Ifx_SRC_HSM',0,10,218,1,3
	.word	30617
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,10,221,1,25,4,12
	.byte	'SR',0
	.word	9291
	.byte	4,2,35,0,0,13
	.word	30643
	.byte	28
	.byte	'Ifx_SRC_LMU',0,10,224,1,3
	.word	30675
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,10,227,1,25,4,12
	.byte	'SR',0
	.word	9291
	.byte	4,2,35,0,0,13
	.word	30701
	.byte	28
	.byte	'Ifx_SRC_PMU',0,10,230,1,3
	.word	30733
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,10,233,1,25,24,12
	.byte	'TX',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	9291
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	9291
	.byte	4,2,35,12,12
	.byte	'HC',0
	.word	9291
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	9291
	.byte	4,2,35,20,0,13
	.word	30759
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,10,241,1,3
	.word	30852
	.byte	17,16
	.word	9291
	.byte	18,3,0,9
	.byte	'_Ifx_SRC_SCU',0,10,244,1,25,20,12
	.byte	'DTS',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	30879
	.byte	16,2,35,4,0,13
	.word	30888
	.byte	28
	.byte	'Ifx_SRC_SCU',0,10,248,1,3
	.word	30934
	.byte	9
	.byte	'_Ifx_SRC_SENT',0,10,251,1,25,16,12
	.byte	'SR',0
	.word	30879
	.byte	16,2,35,0,0,13
	.word	30960
	.byte	28
	.byte	'Ifx_SRC_SENT',0,10,254,1,3
	.word	30993
	.byte	17,12
	.word	9291
	.byte	18,2,0,9
	.byte	'_Ifx_SRC_SMU',0,10,129,2,25,12,12
	.byte	'SR',0
	.word	31020
	.byte	12,2,35,0,0,13
	.word	31029
	.byte	28
	.byte	'Ifx_SRC_SMU',0,10,132,2,3
	.word	31061
	.byte	17,88
	.word	500
	.byte	18,87,0,9
	.byte	'_Ifx_SRC_STM',0,10,135,2,25,96,12
	.byte	'SR0',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'reserved_8',0
	.word	31087
	.byte	88,2,35,8,0,13
	.word	31096
	.byte	28
	.byte	'Ifx_SRC_STM',0,10,140,2,3
	.word	31162
	.byte	17,176,2
	.word	500
	.byte	18,175,2,0,9
	.byte	'_Ifx_SRC_VADCCG',0,10,143,2,25,192,2,12
	.byte	'SR0',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	9291
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	9291
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	31188
	.byte	176,2,2,35,16,0,13
	.word	31199
	.byte	28
	.byte	'Ifx_SRC_VADCCG',0,10,150,2,3
	.word	31297
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,10,153,2,25,16,12
	.byte	'SR0',0
	.word	9291
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	9291
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	9291
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	9291
	.byte	4,2,35,12,0,13
	.word	31326
	.byte	28
	.byte	'Ifx_SRC_VADCG',0,10,159,2,3
	.word	31400
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,10,162,2,25,4,12
	.byte	'SRC',0
	.word	9291
	.byte	4,2,35,0,0,13
	.word	31428
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,10,165,2,3
	.word	31462
	.byte	17,24
	.word	29013
	.byte	18,1,0,13
	.word	31489
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,10,178,2,25,24,12
	.byte	'ASCLIN',0
	.word	31498
	.byte	24,2,35,0,0,13
	.word	31503
	.byte	28
	.byte	'Ifx_SRC_GASCLIN',0,10,181,2,3
	.word	31543
	.byte	13
	.word	29100
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,10,184,2,25,4,12
	.byte	'SPB',0
	.word	31573
	.byte	4,2,35,0,0,13
	.word	31578
	.byte	28
	.byte	'Ifx_SRC_GBCU',0,10,187,2,3
	.word	31612
	.byte	17,64
	.word	29174
	.byte	18,0,0,13
	.word	31639
	.byte	17,32
	.word	29240
	.byte	18,0,0,13
	.word	31653
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,10,190,2,25,96,12
	.byte	'CAN',0
	.word	31648
	.byte	64,2,35,0,12
	.byte	'CAN1',0
	.word	31662
	.byte	32,2,35,64,0,13
	.word	31667
	.byte	28
	.byte	'Ifx_SRC_GCAN',0,10,194,2,3
	.word	31715
	.byte	17,32
	.word	29299
	.byte	18,1,0,13
	.word	31742
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,10,197,2,25,32,12
	.byte	'CCU6',0
	.word	31751
	.byte	32,2,35,0,0,13
	.word	31756
	.byte	28
	.byte	'Ifx_SRC_GCCU6',0,10,200,2,3
	.word	31792
	.byte	13
	.word	29406
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,10,203,2,25,8,12
	.byte	'CERBERUS',0
	.word	31820
	.byte	8,2,35,0,0,13
	.word	31825
	.byte	28
	.byte	'Ifx_SRC_GCERBERUS',0,10,206,2,3
	.word	31869
	.byte	17,32
	.word	29481
	.byte	18,0,0,13
	.word	31901
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,10,209,2,25,32,12
	.byte	'CPU',0
	.word	31910
	.byte	32,2,35,0,0,13
	.word	31915
	.byte	28
	.byte	'Ifx_SRC_GCPU',0,10,212,2,3
	.word	31949
	.byte	17,80
	.word	29561
	.byte	18,0,0,13
	.word	31976
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,10,215,2,25,80,12
	.byte	'DMA',0
	.word	31985
	.byte	80,2,35,0,0,13
	.word	31990
	.byte	28
	.byte	'Ifx_SRC_GDMA',0,10,218,2,3
	.word	32024
	.byte	17,4
	.word	29652
	.byte	18,0,0,13
	.word	32051
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,10,221,2,25,4,12
	.byte	'EMEM',0
	.word	32060
	.byte	4,2,35,0,0,13
	.word	32065
	.byte	28
	.byte	'Ifx_SRC_GEMEM',0,10,224,2,3
	.word	32101
	.byte	17,80
	.word	29721
	.byte	18,0,0,13
	.word	32129
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,10,227,2,25,80,12
	.byte	'ERAY',0
	.word	32138
	.byte	80,2,35,0,0,13
	.word	32143
	.byte	28
	.byte	'Ifx_SRC_GERAY',0,10,230,2,3
	.word	32179
	.byte	17,4
	.word	29875
	.byte	18,0,0,13
	.word	32207
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,10,233,2,25,4,12
	.byte	'ETH',0
	.word	32216
	.byte	4,2,35,0,0,13
	.word	32221
	.byte	28
	.byte	'Ifx_SRC_GETH',0,10,236,2,3
	.word	32255
	.byte	17,8
	.word	29933
	.byte	18,0,0,13
	.word	32282
	.byte	9
	.byte	'_Ifx_SRC_GEVR',0,10,239,2,25,8,12
	.byte	'EVR',0
	.word	32291
	.byte	8,2,35,0,0,13
	.word	32296
	.byte	28
	.byte	'Ifx_SRC_GEVR',0,10,242,2,3
	.word	32330
	.byte	17,12
	.word	30006
	.byte	18,0,0,13
	.word	32357
	.byte	9
	.byte	'_Ifx_SRC_GFFT',0,10,245,2,25,12,12
	.byte	'FFT',0
	.word	32366
	.byte	12,2,35,0,0,13
	.word	32371
	.byte	28
	.byte	'Ifx_SRC_GFFT',0,10,248,2,3
	.word	32405
	.byte	17,128,12
	.word	30103
	.byte	18,0,0,13
	.word	32432
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,10,251,2,25,128,12,12
	.byte	'GPSR',0
	.word	32442
	.byte	128,12,2,35,0,0,13
	.word	32447
	.byte	28
	.byte	'Ifx_SRC_GGPSR',0,10,254,2,3
	.word	32485
	.byte	17,48
	.word	30226
	.byte	18,0,0,13
	.word	32513
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,10,129,3,25,48,12
	.byte	'GPT12',0
	.word	32522
	.byte	48,2,35,0,0,13
	.word	32527
	.byte	28
	.byte	'Ifx_SRC_GGPT12',0,10,132,3,3
	.word	32565
	.byte	17,192,11
	.word	30411
	.byte	18,0,0,13
	.word	32594
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,10,135,3,25,192,11,12
	.byte	'GTM',0
	.word	32604
	.byte	192,11,2,35,0,0,13
	.word	32609
	.byte	28
	.byte	'Ifx_SRC_GGTM',0,10,138,3,3
	.word	32645
	.byte	17,8
	.word	30584
	.byte	18,0,0,13
	.word	32672
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,10,141,3,25,8,12
	.byte	'HSM',0
	.word	32681
	.byte	8,2,35,0,0,13
	.word	32686
	.byte	28
	.byte	'Ifx_SRC_GHSM',0,10,144,3,3
	.word	32720
	.byte	17,4
	.word	30643
	.byte	18,0,0,13
	.word	32747
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,10,147,3,25,4,12
	.byte	'LMU',0
	.word	32756
	.byte	4,2,35,0,0,13
	.word	32761
	.byte	28
	.byte	'Ifx_SRC_GLMU',0,10,150,3,3
	.word	32795
	.byte	17,8
	.word	30701
	.byte	18,1,0,13
	.word	32822
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,10,153,3,25,8,12
	.byte	'PMU',0
	.word	32831
	.byte	8,2,35,0,0,13
	.word	32836
	.byte	28
	.byte	'Ifx_SRC_GPMU',0,10,156,3,3
	.word	32870
	.byte	17,96
	.word	30759
	.byte	18,3,0,13
	.word	32897
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,10,159,3,25,96,12
	.byte	'QSPI',0
	.word	32906
	.byte	96,2,35,0,0,13
	.word	32911
	.byte	28
	.byte	'Ifx_SRC_GQSPI',0,10,162,3,3
	.word	32947
	.byte	13
	.word	30888
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,10,165,3,25,20,12
	.byte	'SCU',0
	.word	32975
	.byte	20,2,35,0,0,13
	.word	32980
	.byte	28
	.byte	'Ifx_SRC_GSCU',0,10,168,3,3
	.word	33014
	.byte	17,16
	.word	30960
	.byte	18,0,0,13
	.word	33041
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,10,171,3,25,16,12
	.byte	'SENT',0
	.word	33050
	.byte	16,2,35,0,0,13
	.word	33055
	.byte	28
	.byte	'Ifx_SRC_GSENT',0,10,174,3,3
	.word	33091
	.byte	17,12
	.word	31029
	.byte	18,0,0,13
	.word	33119
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,10,177,3,25,12,12
	.byte	'SMU',0
	.word	33128
	.byte	12,2,35,0,0,13
	.word	33133
	.byte	28
	.byte	'Ifx_SRC_GSMU',0,10,180,3,3
	.word	33167
	.byte	17,96
	.word	31096
	.byte	18,0,0,13
	.word	33194
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,10,183,3,25,96,12
	.byte	'STM',0
	.word	33203
	.byte	96,2,35,0,0,13
	.word	33208
	.byte	28
	.byte	'Ifx_SRC_GSTM',0,10,186,3,3
	.word	33242
	.byte	17,64
	.word	31326
	.byte	18,3,0,13
	.word	33269
	.byte	17,224,1
	.word	500
	.byte	18,223,1,0,17,192,2
	.word	31199
	.byte	18,0,0,13
	.word	33294
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,10,189,3,25,224,4,12
	.byte	'G',0
	.word	33278
	.byte	64,2,35,0,12
	.byte	'reserved_40',0
	.word	33283
	.byte	224,1,2,35,64,12
	.byte	'CG',0
	.word	33304
	.byte	192,2,3,35,160,2,0,13
	.word	33309
	.byte	28
	.byte	'Ifx_SRC_GVADC',0,10,194,3,3
	.word	33379
	.byte	13
	.word	31428
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,10,197,3,25,4,12
	.byte	'XBAR',0
	.word	33407
	.byte	4,2,35,0,0,13
	.word	33412
	.byte	28
	.byte	'Ifx_SRC_GXBAR',0,10,200,3,3
	.word	33448
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,10
	.byte	'EN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	33476
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	34033
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	325
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	34110
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	500
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	500
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	500
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	500
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	500
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	500
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	500
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	34246
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,10
	.byte	'CANDIV',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	500
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	500
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	500
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	500
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	500
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	500
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	34528
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	34766
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	500
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	500
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	500
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,149,1,3
	.word	34894
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,152,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	500
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	500
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	500
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,163,1,3
	.word	35121
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,166,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,172,1,3
	.word	35340
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,175,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	325
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,179,1,3
	.word	35468
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,182,1,16,4,10
	.byte	'CHREV',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	500
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	500
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	500
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,193,1,3
	.word	35568
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,196,1,16,4,10
	.byte	'PWD',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	325
	.byte	22,6,2,35,0,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	5,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,204,1,3
	.word	35776
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,207,1,16,4,10
	.byte	'LOWER',0,2
	.word	517
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	500
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	517
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,216,1,3
	.word	35941
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,219,1,16,4,10
	.byte	'RESULT',0,2
	.word	517
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	500
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,226,1,3
	.word	36124
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,4,229,1,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	500
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	500
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	325
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	500
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	500
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,4,248,1,3
	.word	36278
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,251,1,16,4,10
	.byte	'INTF0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	325
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,4,134,2,3
	.word	36642
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,137,2,16,4,10
	.byte	'POL',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	517
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	500
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	500
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	500
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	500
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,4,150,2,3
	.word	36853
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,153,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	517
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	325
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,158,2,3
	.word	37105
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,161,2,16,4,10
	.byte	'ARI',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,166,2,3
	.word	37223
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,169,2,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,176,2,3
	.word	37334
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,179,2,16,4,10
	.byte	'ADC13V',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	500
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,186,2,3
	.word	37497
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,189,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	500
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	517
	.byte	10,0,2,35,0,10
	.byte	'SWDOVMOD',0,1
	.word	500
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	500
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	500
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	517
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,201,2,3
	.word	37659
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,204,2,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	500
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,212,2,3
	.word	37937
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,215,2,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	28,4,2,35,0,10
	.byte	'RSTSWDOFF',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,222,2,3
	.word	38116
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,225,2,16,4,10
	.byte	'SD33P',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	500
	.byte	4,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	500
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	325
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,232,2,3
	.word	38276
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,235,2,16,4,10
	.byte	'SDFREQSPRD',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	500
	.byte	4,0,2,35,0,10
	.byte	'TON',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'TOFF',0,1
	.word	500
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'SYNCDIV',0,1
	.word	500
	.byte	3,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,244,2,3
	.word	38437
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,247,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'STBS',0,1
	.word	500
	.byte	2,6,2,35,1,10
	.byte	'STSP',0,1
	.word	500
	.byte	2,4,2,35,1,10
	.byte	'NS',0,1
	.word	500
	.byte	2,2,2,35,1,10
	.byte	'OL',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'PIAD',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'ADCMODE',0,1
	.word	500
	.byte	4,4,2,35,2,10
	.byte	'ADCLPF',0,1
	.word	500
	.byte	2,2,2,35,2,10
	.byte	'ADCLSB',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,134,3,3
	.word	38629
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,137,3,16,4,10
	.byte	'SDOLCON',0,1
	.word	500
	.byte	7,1,2,35,0,10
	.byte	'MODSEL',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'MODLOW',0,1
	.word	500
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	500
	.byte	6,2,2,35,2,10
	.byte	'MODMAN',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'MODHIGH',0,1
	.word	500
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,147,3,3
	.word	38925
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,150,3,16,4,10
	.byte	'EVR13',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	2,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'SCMOD',0,1
	.word	500
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	325
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,164,3,3
	.word	39140
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,167,3,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	500
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,175,3,3
	.word	39429
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,178,3,16,4,10
	.byte	'EN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	500
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	517
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	500
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	500
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,189,3,3
	.word	39608
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,4,192,3,16,4,10
	.byte	'STEP',0,2
	.word	517
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	500
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	517
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,4,200,3,3
	.word	39826
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,4,203,3,16,4,10
	.byte	'FS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,4,223,3,3
	.word	39989
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,4,226,3,16,4,10
	.byte	'MODREV',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,4,231,3,3
	.word	40325
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,234,3,16,4,10
	.byte	'IPEN00',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	500
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,4,130,4,3
	.word	40432
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,4,133,4,16,4,10
	.byte	'P0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,4,138,4,3
	.word	40884
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,141,4,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	500
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	500
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,4,148,4,3
	.word	40983
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,151,4,16,4,10
	.byte	'LBISTREQ',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	517
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,157,4,3
	.word	41133
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,160,4,16,4,10
	.byte	'SEED',0,4
	.word	325
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	500
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	500
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,167,4,3
	.word	41282
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,170,4,16,4,10
	.byte	'SIGNATURE',0,4
	.word	325
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,175,4,3
	.word	41443
	.byte	9
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,178,4,16,4,10
	.byte	'reserved_0',0,2
	.word	517
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	517
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,184,4,3
	.word	41573
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,187,4,16,4,10
	.byte	'LCLT0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,192,4,3
	.word	41707
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,4,195,4,16,4,10
	.byte	'DEPT',0,1
	.word	500
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	517
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,4,200,4,3
	.word	41822
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,4,203,4,16,4,10
	.byte	'PS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	517
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	517
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,4,211,4,3
	.word	41933
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	500
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	500
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	500
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	500
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,231,4,3
	.word	42091
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,4,234,4,16,4,10
	.byte	'P0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,4,239,4,3
	.word	42431
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,242,4,16,4,10
	.byte	'CSEL0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	517
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,255,4,3
	.word	42532
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,130,5,16,4,10
	.byte	'OVEN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	325
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,136,5,3
	.word	42799
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,139,5,16,4,10
	.byte	'PDIS0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,4,144,5,3
	.word	42935
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,4,147,5,16,4,10
	.byte	'PD0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	500
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	325
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,4,154,5,3
	.word	43046
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,157,5,16,4,10
	.byte	'PDR0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	325
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,4,168,5,3
	.word	43179
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,171,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	517
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	500
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,188,5,3
	.word	43382
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,191,5,16,4,10
	.byte	'K2DIV',0,1
	.word	500
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	500
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	500
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	517
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,199,5,3
	.word	43738
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,202,5,16,4,10
	.byte	'MODCFG',0,2
	.word	517
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,206,5,3
	.word	43916
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,209,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	517
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	500
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	500
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	500
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,226,5,3
	.word	44016
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,229,5,16,4,10
	.byte	'K2DIV',0,1
	.word	500
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	500
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	500
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	500
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	517
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,237,5,3
	.word	44386
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,240,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	325
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,249,5,3
	.word	44572
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,252,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	325
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,135,6,3
	.word	44770
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,138,6,16,4,10
	.byte	'REQSLP',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	500
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	500
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	325
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,145,6,3
	.word	45003
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,148,6,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	500
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	500
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	500
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	500
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	2,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,174,6,3
	.word	45155
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,177,6,16,4,10
	.byte	'reserved_0',0,2
	.word	517
	.byte	12,4,2,35,0,10
	.byte	'IRADIS',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	325
	.byte	14,5,2,35,0,10
	.byte	'STBYEVEN',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	500
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,185,6,3
	.word	45714
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,4,188,6,16,4,10
	.byte	'WUTREL',0,4
	.word	325
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	4,4,2,35,3,10
	.byte	'WUTDIV',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,4,196,6,3
	.word	45897
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,199,6,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	500
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	500
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'WUTWKP',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUN',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	517
	.byte	4,5,2,35,2,10
	.byte	'ESR0TRIST',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'WUTRUN',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,226,6,3
	.word	46066
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,229,6,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'WUTWKPCLR',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUNCLR',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	517
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,242,6,3
	.word	46633
	.byte	9
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,4,245,6,16,4,10
	.byte	'WUTCNT',0,4
	.word	325
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,4,250,6,3
	.word	46949
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,253,6,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	517
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,135,7,3
	.word	47068
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,138,7,16,4,10
	.byte	'ESR0',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	500
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	500
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	500
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	500
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	500
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,149,7,3
	.word	47277
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,152,7,16,4,10
	.byte	'ESR0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	500
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,175,7,3
	.word	47488
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,178,7,16,4,10
	.byte	'HBT',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	325
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,182,7,3
	.word	47920
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,185,7,16,4,10
	.byte	'HWCFG',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	500
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	500
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,198,7,3
	.word	48016
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,201,7,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,206,7,3
	.word	48276
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,209,7,16,4,10
	.byte	'CCTRIG0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	500
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	325
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,218,7,3
	.word	48401
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,221,7,16,4,10
	.byte	'ESR0T',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,228,7,3
	.word	48598
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,231,7,16,4,10
	.byte	'ESR0T',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,238,7,3
	.word	48751
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,241,7,16,4,10
	.byte	'ESR0T',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,248,7,3
	.word	48904
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,251,7,16,4,10
	.byte	'ESR0T',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,130,8,3
	.word	49057
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,139,8,3
	.word	364
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,154,8,3
	.word	539
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,170,8,3
	.word	783
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,173,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	348
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	348
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	348
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	348
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,179,8,3
	.word	49312
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,182,8,16,4,10
	.byte	'CLRIRF',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,195,8,3
	.word	49438
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,198,8,16,4,10
	.byte	'AE',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,211,8,3
	.word	49690
	.byte	11,4,219,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33476
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN0',0,4,224,8,3
	.word	49909
	.byte	11,4,227,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34033
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1',0,4,232,8,3
	.word	49973
	.byte	11,4,235,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34110
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,4,240,8,3
	.word	50037
	.byte	11,4,243,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34246
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,4,248,8,3
	.word	50102
	.byte	11,4,251,8,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34528
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,4,128,9,3
	.word	50167
	.byte	11,4,131,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34766
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,4,136,9,3
	.word	50232
	.byte	11,4,139,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34894
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,4,144,9,3
	.word	50297
	.byte	11,4,147,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35121
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,4,152,9,3
	.word	50362
	.byte	11,4,155,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35340
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,4,160,9,3
	.word	50427
	.byte	11,4,163,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35468
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,4,168,9,3
	.word	50492
	.byte	11,4,171,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35568
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,4,176,9,3
	.word	50557
	.byte	11,4,179,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35776
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCON',0,4,184,9,3
	.word	50621
	.byte	11,4,187,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35941
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSLIM',0,4,192,9,3
	.word	50685
	.byte	11,4,195,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36124
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSSTAT',0,4,200,9,3
	.word	50749
	.byte	11,4,203,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36278
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,4,208,9,3
	.word	50814
	.byte	11,4,211,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36642
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,4,216,9,3
	.word	50876
	.byte	11,4,219,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36853
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,4,224,9,3
	.word	50938
	.byte	11,4,227,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37105
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG',0,4,232,9,3
	.word	51000
	.byte	11,4,235,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37223
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,4,240,9,3
	.word	51064
	.byte	11,4,243,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37334
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR13CON',0,4,248,9,3
	.word	51129
	.byte	11,4,251,9,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37497
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,128,10,3
	.word	51195
	.byte	11,4,131,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37659
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,136,10,3
	.word	51263
	.byte	11,4,139,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37937
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROVMON',0,4,144,10,3
	.word	51331
	.byte	11,4,147,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38116
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRRSTCON',0,4,152,10,3
	.word	51397
	.byte	11,4,155,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38276
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,160,10,3
	.word	51464
	.byte	11,4,163,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38437
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,168,10,3
	.word	51533
	.byte	11,4,171,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38629
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,176,10,3
	.word	51601
	.byte	11,4,179,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38925
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,184,10,3
	.word	51669
	.byte	11,4,187,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39140
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT',0,4,192,10,3
	.word	51737
	.byte	11,4,195,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39429
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRUVMON',0,4,200,10,3
	.word	51802
	.byte	11,4,203,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39608
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,4,208,10,3
	.word	51868
	.byte	11,4,211,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39826
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,4,216,10,3
	.word	51932
	.byte	11,4,219,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39989
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,4,224,10,3
	.word	51993
	.byte	11,4,227,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40325
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,4,232,10,3
	.word	52054
	.byte	11,4,235,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40432
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,4,240,10,3
	.word	52114
	.byte	11,4,243,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40884
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,4,248,10,3
	.word	52176
	.byte	11,4,251,10,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40983
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,4,128,11,3
	.word	52236
	.byte	11,4,131,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41133
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,136,11,3
	.word	52298
	.byte	11,4,139,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41282
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,144,11,3
	.word	52366
	.byte	11,4,147,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41443
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,152,11,3
	.word	52434
	.byte	11,4,155,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41573
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON0',0,4,160,11,3
	.word	52502
	.byte	11,4,163,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41707
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,4,168,11,3
	.word	52567
	.byte	11,4,171,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41822
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,4,176,11,3
	.word	52632
	.byte	11,4,179,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41933
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,4,184,11,3
	.word	52695
	.byte	11,4,187,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42091
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,4,192,11,3
	.word	52756
	.byte	11,4,195,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42431
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,4,200,11,3
	.word	52820
	.byte	11,4,203,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42532
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,4,208,11,3
	.word	52881
	.byte	11,4,211,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42799
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,4,216,11,3
	.word	52945
	.byte	11,4,219,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42935
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,4,224,11,3
	.word	53012
	.byte	11,4,227,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43046
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,4,232,11,3
	.word	53075
	.byte	11,4,235,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43179
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,4,240,11,3
	.word	53136
	.byte	11,4,243,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43382
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON0',0,4,248,11,3
	.word	53198
	.byte	11,4,251,11,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43738
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON1',0,4,128,12,3
	.word	53263
	.byte	11,4,131,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43916
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON2',0,4,136,12,3
	.word	53328
	.byte	11,4,139,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44016
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,144,12,3
	.word	53393
	.byte	11,4,147,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44386
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,152,12,3
	.word	53462
	.byte	11,4,155,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44572
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,160,12,3
	.word	53531
	.byte	11,4,163,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44770
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT',0,4,168,12,3
	.word	53600
	.byte	11,4,171,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45003
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR',0,4,176,12,3
	.word	53665
	.byte	11,4,179,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45155
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR0',0,4,184,12,3
	.word	53728
	.byte	11,4,187,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45714
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,4,192,12,3
	.word	53793
	.byte	11,4,195,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45897
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR3',0,4,200,12,3
	.word	53858
	.byte	11,4,203,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46066
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTAT',0,4,208,12,3
	.word	53923
	.byte	11,4,211,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46633
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,216,12,3
	.word	53989
	.byte	11,4,219,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46949
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWUTCNT',0,4,224,12,3
	.word	54058
	.byte	11,4,227,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47277
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,4,232,12,3
	.word	54125
	.byte	11,4,235,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47068
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,4,240,12,3
	.word	54189
	.byte	11,4,243,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47488
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,4,248,12,3
	.word	54254
	.byte	11,4,251,12,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47920
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON',0,4,128,13,3
	.word	54319
	.byte	11,4,131,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48016
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,4,136,13,3
	.word	54384
	.byte	11,4,139,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48276
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,4,144,13,3
	.word	54448
	.byte	11,4,147,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48401
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,4,152,13,3
	.word	54514
	.byte	11,4,155,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48598
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,4,160,13,3
	.word	54578
	.byte	11,4,163,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48751
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS',0,4,168,13,3
	.word	54643
	.byte	11,4,171,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48904
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,4,176,13,3
	.word	54708
	.byte	11,4,179,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49057
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,4,184,13,3
	.word	54773
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,192,13,3
	.word	460
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,200,13,3
	.word	743
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,208,13,3
	.word	974
	.byte	11,4,211,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49312
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,4,216,13,3
	.word	54924
	.byte	11,4,219,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49438
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,4,224,13,3
	.word	54991
	.byte	11,4,227,13,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49690
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,4,232,13,3
	.word	55058
	.byte	13
	.word	1014
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,4,248,13,3
	.word	55123
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,4,251,13,25,12,12
	.byte	'CON0',0
	.word	54924
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	54991
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	55058
	.byte	4,2,35,8,0,13
	.word	55152
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,4,128,14,3
	.word	55213
	.byte	17,8
	.word	51000
	.byte	18,1,0,17,4
	.word	53665
	.byte	18,0,0,13
	.word	55152
	.byte	17,12
	.word	1014
	.byte	18,0,0,13
	.word	55263
	.byte	17,16
	.word	500
	.byte	18,15,0,17,20
	.word	500
	.byte	18,19,0,17,16
	.word	50814
	.byte	18,3,0,17,16
	.word	52114
	.byte	18,3,0,17,188,1
	.word	500
	.byte	18,187,1,0,17,244,1
	.word	500
	.byte	18,243,1,0,9
	.byte	'_Ifx_SCU',0,4,141,14,25,128,8,12
	.byte	'reserved_0',0
	.word	4664
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	52054
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2845
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	52756
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	53600
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	53198
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	53263
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	53328
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	53531
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	53393
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	53462
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	50102
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	50167
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	51932
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	51868
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	50232
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	50297
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	50362
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	50427
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	54254
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	2845
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	54125
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	50037
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	54448
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	54189
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	2845
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	51397
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	55240
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	51064
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	54514
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	50492
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	4035
	.byte	24,3,35,132,1,12
	.byte	'PDR',0
	.word	53075
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	52236
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	52820
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	52695
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	52176
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	51737
	.byte	4,3,35,176,1,12
	.byte	'reserved_B4',0
	.word	2845
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	51129
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	2845
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	54384
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	2845
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	53728
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	53923
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	53989
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	55249
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	4664
	.byte	8,3,35,216,1,12
	.byte	'DTSSTAT',0
	.word	50749
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	50621
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	53793
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	2845
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	55258
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	50938
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	55272
	.byte	12,3,35,128,2,12
	.byte	'reserved_10C',0
	.word	4035
	.byte	24,3,35,140,2,12
	.byte	'TRAPSTAT',0
	.word	54773
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	54708
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	54578
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	54643
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	52502
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	2845
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	52567
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	50557
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	52632
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4664
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	54319
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	55277
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	52298
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	52366
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	52434
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	29472
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	53012
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	5004
	.byte	12,3,35,144,3,12
	.byte	'EVRADCSTAT',0
	.word	51195
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	51802
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	51331
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	51263
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	2845
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	51533
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	51601
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	51669
	.byte	4,3,35,184,3,12
	.byte	'reserved_1BC',0
	.word	4664
	.byte	8,3,35,188,3,12
	.byte	'EVRSDCOEFF2',0
	.word	51464
	.byte	4,3,35,196,3,12
	.byte	'reserved_1C8',0
	.word	55286
	.byte	20,3,35,200,3,12
	.byte	'PMSWUTCNT',0
	.word	54058
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	52945
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	52881
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	29712
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	55295
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	50876
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	51993
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	53136
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	55304
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	2845
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	50685
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	55313
	.byte	188,1,3,35,196,4,12
	.byte	'PMSWCR3',0
	.word	53858
	.byte	4,3,35,128,6,12
	.byte	'reserved_304',0
	.word	55324
	.byte	244,1,3,35,132,6,12
	.byte	'ACCEN1',0
	.word	49973
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	49909
	.byte	4,3,35,252,7,0,13
	.word	55335
	.byte	28
	.byte	'Ifx_SCU',0,4,244,14,3
	.word	57231
	.byte	14,20,139,10,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,28
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,143,10,3
	.word	57253
	.byte	14,20,153,10,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,20,158,10,3
	.word	57350
	.byte	14,5,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,28
	.byte	'IfxCpu_CounterMode',0,5,122,3
	.word	57472
	.byte	30,5,132,1,9,6,12
	.byte	'counter',0
	.word	1610
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	500
	.byte	1,2,35,4,0,28
	.byte	'IfxCpu_Counter',0,5,136,1,3
	.word	57559
	.byte	30,5,144,1,9,32,12
	.byte	'instruction',0
	.word	57559
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	57559
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	57559
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	57559
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	57559
	.byte	6,2,35,24,0,28
	.byte	'IfxCpu_Perf',0,5,151,1,3
	.word	57625
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	7710
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	7623
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4673
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2726
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3721
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2854
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3501
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	3069
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3284
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,8,200,1,3
	.word	6253
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,8,210,1,3
	.word	6777
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,8,221,1,3
	.word	6427
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,8,232,1,3
	.word	6601
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,8,254,1,3
	.word	7266
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,8,163,2,3
	.word	2155
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,8,173,2,3
	.word	5590
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,8,184,2,3
	.word	6078
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,8,195,2,3
	.word	5737
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,8,206,2,3
	.word	5906
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,8,228,2,3
	.word	6933
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,8,250,2,3
	.word	1839
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,8,135,3,3
	.word	5379
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,8,157,3,3
	.word	5013
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,8,178,3,3
	.word	4044
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,8,199,3,3
	.word	4348
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,8,212,3,3
	.word	8237
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,8,220,3,3
	.word	7670
	.byte	28
	.byte	'Ifx_P_ESR',0,8,228,3,3
	.word	4964
	.byte	28
	.byte	'Ifx_P_ID',0,8,236,3,3
	.word	2805
	.byte	28
	.byte	'Ifx_P_IN',0,8,244,3,3
	.word	3995
	.byte	28
	.byte	'Ifx_P_IOCR0',0,8,252,3,3
	.word	3029
	.byte	28
	.byte	'Ifx_P_IOCR12',0,8,132,4,3
	.word	3681
	.byte	28
	.byte	'Ifx_P_IOCR4',0,8,140,4,3
	.word	3244
	.byte	28
	.byte	'Ifx_P_IOCR8',0,8,148,4,3
	.word	3461
	.byte	28
	.byte	'Ifx_P_OMCR',0,8,156,4,3
	.word	7574
	.byte	28
	.byte	'Ifx_P_OMCR0',0,8,164,4,3
	.word	6387
	.byte	28
	.byte	'Ifx_P_OMCR12',0,8,172,4,3
	.word	6893
	.byte	28
	.byte	'Ifx_P_OMCR4',0,8,180,4,3
	.word	6561
	.byte	28
	.byte	'Ifx_P_OMCR8',0,8,188,4,3
	.word	6737
	.byte	28
	.byte	'Ifx_P_OMR',0,8,196,4,3
	.word	2686
	.byte	28
	.byte	'Ifx_P_OMSR',0,8,204,4,3
	.word	7226
	.byte	28
	.byte	'Ifx_P_OMSR0',0,8,212,4,3
	.word	5697
	.byte	28
	.byte	'Ifx_P_OMSR12',0,8,220,4,3
	.word	6213
	.byte	28
	.byte	'Ifx_P_OMSR4',0,8,228,4,3
	.word	5866
	.byte	28
	.byte	'Ifx_P_OMSR8',0,8,236,4,3
	.word	6038
	.byte	28
	.byte	'Ifx_P_OUT',0,8,244,4,3
	.word	2115
	.byte	28
	.byte	'Ifx_P_PCSR',0,8,252,4,3
	.word	5550
	.byte	28
	.byte	'Ifx_P_PDISC',0,8,132,5,3
	.word	5339
	.byte	28
	.byte	'Ifx_P_PDR0',0,8,140,5,3
	.word	4308
	.byte	28
	.byte	'Ifx_P_PDR1',0,8,148,5,3
	.word	4624
	.byte	13
	.word	8277
	.byte	28
	.byte	'Ifx_P',0,8,193,5,3
	.word	58890
	.byte	14,7,54,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0,28
	.byte	'IfxPort_InputMode',0,7,60,3
	.word	58910
	.byte	14,7,91,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,28
	.byte	'IfxPort_OutputIdx',0,7,101,3
	.word	59061
	.byte	14,7,105,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,28
	.byte	'IfxPort_OutputMode',0,7,109,3
	.word	59304
	.byte	14,7,115,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,28
	.byte	'IfxPort_PadDriver',0,7,125,3
	.word	59400
	.byte	28
	.byte	'IfxPort_State',0,7,137,1,3
	.word	8820
	.byte	30,7,149,1,9,8,12
	.byte	'port',0
	.word	8815
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	500
	.byte	1,2,35,4,0,28
	.byte	'IfxPort_Pin',0,7,153,1,3
	.word	59739
	.byte	14,21,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_dma',0,1,0,28
	.byte	'IfxSrc_Tos',0,21,53,3
	.word	59799
	.byte	28
	.byte	'Ifx_STM_ACCEN0_Bits',0,13,79,3
	.word	11868
	.byte	28
	.byte	'Ifx_STM_ACCEN1_Bits',0,13,85,3
	.word	11779
	.byte	28
	.byte	'Ifx_STM_CAP_Bits',0,13,91,3
	.word	10309
	.byte	28
	.byte	'Ifx_STM_CAPSV_Bits',0,13,97,3
	.word	11186
	.byte	28
	.byte	'Ifx_STM_CLC_Bits',0,13,107,3
	.word	9432
	.byte	28
	.byte	'Ifx_STM_CMCON_Bits',0,13,120,3
	.word	10487
	.byte	28
	.byte	'Ifx_STM_CMP_Bits',0,13,126,3
	.word	10396
	.byte	28
	.byte	'Ifx_STM_ICR_Bits',0,13,139,1,3
	.word	10718
	.byte	28
	.byte	'Ifx_STM_ID_Bits',0,13,147,1,3
	.word	9588
	.byte	28
	.byte	'Ifx_STM_ISCR_Bits',0,13,157,1,3
	.word	10935
	.byte	28
	.byte	'Ifx_STM_KRST0_Bits',0,13,165,1,3
	.word	11656
	.byte	28
	.byte	'Ifx_STM_KRST1_Bits',0,13,172,1,3
	.word	11552
	.byte	28
	.byte	'Ifx_STM_KRSTCLR_Bits',0,13,179,1,3
	.word	11446
	.byte	28
	.byte	'Ifx_STM_OCS_Bits',0,13,189,1,3
	.word	11286
	.byte	28
	.byte	'Ifx_STM_TIM0_Bits',0,13,195,1,3
	.word	9710
	.byte	28
	.byte	'Ifx_STM_TIM0SV_Bits',0,13,201,1,3
	.word	11099
	.byte	28
	.byte	'Ifx_STM_TIM1_Bits',0,13,207,1,3
	.word	9795
	.byte	28
	.byte	'Ifx_STM_TIM2_Bits',0,13,213,1,3
	.word	9880
	.byte	28
	.byte	'Ifx_STM_TIM3_Bits',0,13,219,1,3
	.word	9965
	.byte	28
	.byte	'Ifx_STM_TIM4_Bits',0,13,225,1,3
	.word	10051
	.byte	28
	.byte	'Ifx_STM_TIM5_Bits',0,13,231,1,3
	.word	10137
	.byte	28
	.byte	'Ifx_STM_TIM6_Bits',0,13,237,1,3
	.word	10223
	.byte	28
	.byte	'Ifx_STM_ACCEN0',0,13,250,1,3
	.word	12397
	.byte	28
	.byte	'Ifx_STM_ACCEN1',0,13,130,2,3
	.word	11828
	.byte	28
	.byte	'Ifx_STM_CAP',0,13,138,2,3
	.word	10356
	.byte	28
	.byte	'Ifx_STM_CAPSV',0,13,146,2,3
	.word	11235
	.byte	28
	.byte	'Ifx_STM_CLC',0,13,154,2,3
	.word	9548
	.byte	28
	.byte	'Ifx_STM_CMCON',0,13,162,2,3
	.word	10678
	.byte	28
	.byte	'Ifx_STM_CMP',0,13,170,2,3
	.word	10438
	.byte	28
	.byte	'Ifx_STM_ICR',0,13,178,2,3
	.word	10895
	.byte	28
	.byte	'Ifx_STM_ID',0,13,186,2,3
	.word	9670
	.byte	28
	.byte	'Ifx_STM_ISCR',0,13,194,2,3
	.word	11059
	.byte	28
	.byte	'Ifx_STM_KRST0',0,13,202,2,3
	.word	11739
	.byte	28
	.byte	'Ifx_STM_KRST1',0,13,210,2,3
	.word	11616
	.byte	28
	.byte	'Ifx_STM_KRSTCLR',0,13,218,2,3
	.word	11512
	.byte	28
	.byte	'Ifx_STM_OCS',0,13,226,2,3
	.word	11406
	.byte	28
	.byte	'Ifx_STM_TIM0',0,13,234,2,3
	.word	9755
	.byte	28
	.byte	'Ifx_STM_TIM0SV',0,13,242,2,3
	.word	11146
	.byte	28
	.byte	'Ifx_STM_TIM1',0,13,250,2,3
	.word	9840
	.byte	28
	.byte	'Ifx_STM_TIM2',0,13,130,3,3
	.word	9925
	.byte	28
	.byte	'Ifx_STM_TIM3',0,13,138,3,3
	.word	10011
	.byte	28
	.byte	'Ifx_STM_TIM4',0,13,146,3,3
	.word	10097
	.byte	28
	.byte	'Ifx_STM_TIM5',0,13,154,3,3
	.word	10183
	.byte	28
	.byte	'Ifx_STM_TIM6',0,13,162,3,3
	.word	10269
	.byte	13
	.word	12437
	.byte	28
	.byte	'Ifx_STM',0,13,201,3,3
	.word	60942
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,22,45,16,4,10
	.byte	'EN0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,22,79,3
	.word	60964
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,22,82,16,4,10
	.byte	'reserved_0',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,22,85,3
	.word	61525
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,22,88,16,4,10
	.byte	'SEL',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	500
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	325
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,22,95,3
	.word	61606
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,22,98,16,4,10
	.byte	'VLD0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	325
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,22,111,3
	.word	61759
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,22,114,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	325
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,22,121,3
	.word	62007
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,22,124,16,4,10
	.byte	'STATUS',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	325
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,22,128,1,3
	.word	62153
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,22,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,22,136,1,3
	.word	62251
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,22,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,22,144,1,3
	.word	62367
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,22,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	325
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	517
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,22,153,1,3
	.word	62483
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,22,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	325
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	517
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,22,162,1,3
	.word	62623
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,22,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	325
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	517
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,22,171,1,3
	.word	62763
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,22,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	500
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	500
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	517
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	500
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	500
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	500
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,22,193,1,3
	.word	62902
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,22,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	500
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	500
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	500
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,22,218,1,3
	.word	63264
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,22,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'RES1',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'RES4',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	517
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	500
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	500
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,22,254,1,3
	.word	63705
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,22,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	325
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	500
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,22,137,2,3
	.word	64309
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,22,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	500
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	325
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	500
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	500
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,22,156,2,3
	.word	64489
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,22,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	325
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,22,167,2,3
	.word	64811
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,22,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	325
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,22,174,2,3
	.word	64992
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,22,177,2,16,4,10
	.byte	'STRT',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	500
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,22,188,2,3
	.word	65092
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,22,191,2,16,4,10
	.byte	'DATA',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,22,194,2,3
	.word	65308
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,22,197,2,16,4,10
	.byte	'DATA',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,22,200,2,3
	.word	65387
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,22,203,2,16,4,10
	.byte	'MODREV',0,1
	.word	500
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	500
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,22,208,2,3
	.word	65466
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,22,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	517
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,22,221,2,3
	.word	65577
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,22,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'RES1',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	517
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,22,233,2,3
	.word	65791
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,22,236,2,16,4,10
	.byte	'L',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	500
	.byte	4,0,2,35,0,10
	.byte	'RES8',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'RES9',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'RES10',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'RES11',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'RES12',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'RES13',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'RES14',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'RES15',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	517
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	500
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,22,254,2,3
	.word	65977
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,22,129,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	500
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	325
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,22,135,3,3
	.word	66312
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,22,138,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	517
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,22,146,3,3
	.word	66455
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,149,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	517
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	500
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	500
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'BOOTSEL',0,1
	.word	500
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	517
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,166,3,3
	.word	66644
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,22,169,3,16,4,10
	.byte	'S0ROM',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	500
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	500
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,22,201,3,3
	.word	67003
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,22,204,3,16,4,10
	.byte	'S0L',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	500
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,22,235,3,3
	.word	67598
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,22,238,3,16,4,10
	.byte	'S0WOP',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	500
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	500
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	500
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	500
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	500
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	500
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	500
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	500
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	500
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	500
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	500
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	500
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	500
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	500
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	500
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	500
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	500
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	500
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	500
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	500
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	500
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,22,141,4,3
	.word	68122
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,22,144,4,16,4,10
	.byte	'TAG',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	325
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,22,148,4,3
	.word	68704
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,22,151,4,16,4,10
	.byte	'TAG',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	325
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,22,155,4,3
	.word	68806
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,22,158,4,16,4,10
	.byte	'TAG',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	325
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,22,162,4,3
	.word	68908
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,22,165,4,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	325
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,22,169,4,3
	.word	69010
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,22,172,4,16,4,10
	.byte	'STRT',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	500
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	500
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	500
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	500
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	500
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	500
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	517
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,22,183,4,3
	.word	69104
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,22,186,4,16,4,10
	.byte	'DATA',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,22,189,4,3
	.word	69314
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,22,192,4,16,4,10
	.byte	'DATA',0,4
	.word	325
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,22,195,4,3
	.word	69387
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,22,198,4,16,4,10
	.byte	'SEL',0,1
	.word	500
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	500
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	500
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	500
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	325
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,22,205,4,3
	.word	69460
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,22,208,4,16,4,10
	.byte	'VLD0',0,1
	.word	500
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	325
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,22,212,4,3
	.word	69615
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,22,215,4,16,4,10
	.byte	'reserved_0',0,1
	.word	500
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	325
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	500
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	500
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	500
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,22,222,4,3
	.word	69720
	.byte	11,22,230,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60964
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,22,235,4,3
	.word	69868
	.byte	11,22,238,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61525
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,22,243,4,3
	.word	69934
	.byte	11,22,246,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61606
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,22,251,4,3
	.word	70000
	.byte	11,22,254,4,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61759
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,22,131,5,3
	.word	70068
	.byte	11,22,134,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62007
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_TOP',0,22,139,5,3
	.word	70137
	.byte	11,22,142,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62153
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,22,147,5,3
	.word	70205
	.byte	11,22,150,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62251
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,22,155,5,3
	.word	70270
	.byte	11,22,158,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62367
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,22,163,5,3
	.word	70335
	.byte	11,22,166,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62483
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,22,171,5,3
	.word	70400
	.byte	11,22,174,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62623
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,22,179,5,3
	.word	70465
	.byte	11,22,182,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62763
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,22,187,5,3
	.word	70530
	.byte	11,22,190,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62902
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,22,195,5,3
	.word	70594
	.byte	11,22,198,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63264
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,22,203,5,3
	.word	70658
	.byte	11,22,206,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63705
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,22,211,5,3
	.word	70722
	.byte	11,22,214,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64309
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,22,219,5,3
	.word	70785
	.byte	11,22,222,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64489
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,22,227,5,3
	.word	70852
	.byte	11,22,230,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64811
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,22,235,5,3
	.word	70918
	.byte	11,22,238,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64992
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,22,243,5,3
	.word	70985
	.byte	11,22,246,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65092
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,22,251,5,3
	.word	71052
	.byte	11,22,254,5,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65308
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,22,131,6,3
	.word	71119
	.byte	11,22,134,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65387
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,22,139,6,3
	.word	71186
	.byte	11,22,142,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65466
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,22,147,6,3
	.word	71253
	.byte	11,22,150,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65577
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,22,155,6,3
	.word	71315
	.byte	11,22,158,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65791
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,22,163,6,3
	.word	71379
	.byte	11,22,166,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,22,171,6,3
	.word	71443
	.byte	11,22,174,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66312
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,22,179,6,3
	.word	71510
	.byte	11,22,182,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66455
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,22,187,6,3
	.word	71579
	.byte	11,22,190,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66644
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,22,195,6,3
	.word	71648
	.byte	11,22,198,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67003
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,22,203,6,3
	.word	71721
	.byte	11,22,206,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67598
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,22,211,6,3
	.word	71790
	.byte	11,22,214,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68122
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,22,219,6,3
	.word	71857
	.byte	11,22,222,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68704
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,22,227,6,3
	.word	71926
	.byte	11,22,230,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68806
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,22,235,6,3
	.word	71994
	.byte	11,22,238,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68908
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,22,243,6,3
	.word	72062
	.byte	11,22,246,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69010
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,22,251,6,3
	.word	72130
	.byte	11,22,254,6,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69104
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,22,131,7,3
	.word	72194
	.byte	11,22,134,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69314
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,22,139,7,3
	.word	72258
	.byte	11,22,142,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69387
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,22,147,7,3
	.word	72322
	.byte	11,22,150,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69460
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,22,155,7,3
	.word	72386
	.byte	11,22,158,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69615
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,22,163,7,3
	.word	72454
	.byte	11,22,166,7,9,4,12
	.byte	'U',0
	.word	325
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	341
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69720
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_TOP',0,22,171,7,3
	.word	72523
	.byte	17,36
	.word	500
	.byte	18,35,0,9
	.byte	'_Ifx_FLASH_CBAB',0,22,182,7,25,48,12
	.byte	'CFG',0
	.word	70000
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	70068
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	70137
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	72591
	.byte	36,2,35,12,0,13
	.word	72600
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,22,188,7,3
	.word	72683
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,22,191,7,25,48,12
	.byte	'CFG0',0
	.word	71926
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	71994
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	72062
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	72591
	.byte	36,2,35,12,0,13
	.word	72712
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,22,197,7,3
	.word	72796
	.byte	17,80
	.word	500
	.byte	18,79,0,9
	.byte	'_Ifx_FLASH_UBAB',0,22,200,7,25,92,12
	.byte	'CFG',0
	.word	72386
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	72454
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	72523
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	72824
	.byte	80,2,35,12,0,13
	.word	72833
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,22,206,7,3
	.word	72916
	.byte	31,1,1,6
	.word	72945
	.byte	28
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,11,129,1,16
	.word	72948
	.byte	30,11,197,5,9,8,12
	.byte	'value',0
	.word	1610
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1610
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_CcuconRegConfig',0,11,201,5,3
	.word	72993
	.byte	30,11,206,5,9,8,12
	.byte	'pDivider',0
	.word	500
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	500
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	500
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	9383
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_InitialStepConfig',0,11,212,5,3
	.word	73064
	.byte	30,11,216,5,9,12,12
	.byte	'k2Step',0
	.word	500
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	9383
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	72953
	.byte	4,2,35,8,0,28
	.byte	'IfxScuCcu_PllStepsConfig',0,11,221,5,3
	.word	73181
	.byte	6
	.word	72945
	.byte	30,11,229,5,9,40,12
	.byte	'ccucon0',0
	.word	72993
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	72993
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	72993
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	72993
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	72993
	.byte	8,2,35,32,0,28
	.byte	'IfxScuCcu_ClockDistributionConfig',0,11,236,5,3
	.word	73283
	.byte	30,11,240,5,9,8,12
	.byte	'value',0
	.word	1610
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1610
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,11,244,5,3
	.word	73418
	.byte	6
	.word	73181
	.byte	30,11,249,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	500
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	73494
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	73064
	.byte	8,2,35,8,0,28
	.byte	'IfxScuCcu_SysPllConfig',0,11,254,5,3
	.word	73499
	.byte	14,12,131,1,9,1,15
	.byte	'IfxStm_Comparator_0',0,0,15
	.byte	'IfxStm_Comparator_1',0,1,0,28
	.byte	'IfxStm_Comparator',0,12,135,1,3
	.word	73616
	.byte	14,12,139,1,9,1,15
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,15
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,28
	.byte	'IfxStm_ComparatorInterrupt',0,12,143,1,3
	.word	73694
	.byte	14,12,147,1,9,1,15
	.byte	'IfxStm_ComparatorOffset_0',0,0,15
	.byte	'IfxStm_ComparatorOffset_1',0,1,15
	.byte	'IfxStm_ComparatorOffset_2',0,2,15
	.byte	'IfxStm_ComparatorOffset_3',0,3,15
	.byte	'IfxStm_ComparatorOffset_4',0,4,15
	.byte	'IfxStm_ComparatorOffset_5',0,5,15
	.byte	'IfxStm_ComparatorOffset_6',0,6,15
	.byte	'IfxStm_ComparatorOffset_7',0,7,15
	.byte	'IfxStm_ComparatorOffset_8',0,8,15
	.byte	'IfxStm_ComparatorOffset_9',0,9,15
	.byte	'IfxStm_ComparatorOffset_10',0,10,15
	.byte	'IfxStm_ComparatorOffset_11',0,11,15
	.byte	'IfxStm_ComparatorOffset_12',0,12,15
	.byte	'IfxStm_ComparatorOffset_13',0,13,15
	.byte	'IfxStm_ComparatorOffset_14',0,14,15
	.byte	'IfxStm_ComparatorOffset_15',0,15,15
	.byte	'IfxStm_ComparatorOffset_16',0,16,15
	.byte	'IfxStm_ComparatorOffset_17',0,17,15
	.byte	'IfxStm_ComparatorOffset_18',0,18,15
	.byte	'IfxStm_ComparatorOffset_19',0,19,15
	.byte	'IfxStm_ComparatorOffset_20',0,20,15
	.byte	'IfxStm_ComparatorOffset_21',0,21,15
	.byte	'IfxStm_ComparatorOffset_22',0,22,15
	.byte	'IfxStm_ComparatorOffset_23',0,23,15
	.byte	'IfxStm_ComparatorOffset_24',0,24,15
	.byte	'IfxStm_ComparatorOffset_25',0,25,15
	.byte	'IfxStm_ComparatorOffset_26',0,26,15
	.byte	'IfxStm_ComparatorOffset_27',0,27,15
	.byte	'IfxStm_ComparatorOffset_28',0,28,15
	.byte	'IfxStm_ComparatorOffset_29',0,29,15
	.byte	'IfxStm_ComparatorOffset_30',0,30,15
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,28
	.byte	'IfxStm_ComparatorOffset',0,12,181,1,3
	.word	73803
	.byte	14,12,185,1,9,1,15
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,15
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,15
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,15
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,15
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,15
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,15
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,15
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,15
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,15
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,15
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,15
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,15
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,15
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,15
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,15
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,15
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,15
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,15
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,15
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,15
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,15
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,15
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,15
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,15
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,15
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,15
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,15
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,15
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,15
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,15
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,15
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,28
	.byte	'IfxStm_ComparatorSize',0,12,219,1,3
	.word	74761
	.byte	14,12,224,1,9,1,15
	.byte	'IfxStm_SleepMode_enable',0,0,15
	.byte	'IfxStm_SleepMode_disable',0,1,0,28
	.byte	'IfxStm_SleepMode',0,12,228,1,3
	.word	75781
.L121:
	.byte	17,88
	.word	13075
	.byte	18,10,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,11,1,0,0,17,1,1,11
	.byte	15,73,19,0,0,18,33,0,47,15,0,0,19,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,20,5,0,73,19,0,0,21,46,0
	.byte	3,8,54,15,39,12,63,12,60,12,0,0,22,46,1,49,19,0,0,23,5,0,49,19,0,0,24,29,1,49,19,0,0,25,11,0,49,19,0,0
	.byte	26,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,27,11,1,49,19,0,0,28,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,29,21,0,54,15,0,0,30,19,1,58,15,59,15,57,15,11,15,0,0,31,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L20:
	.word	.L142-.L141
.L141:
	.half	3
	.word	.L144-.L143
.L143:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Stm\\Std\\IfxStm.h',0
	.byte	0,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0,0,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L144:
.L142:
	.sdecl	'.debug_info',debug,cluster('initTime')
	.sect	'.debug_info'
.L21:
	.word	333
	.half	3
	.word	.L22
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L24,.L23
	.byte	2
	.word	.L17
	.byte	3
	.byte	'initTime',0,1,37,6,1,1,1
	.word	.L10,.L43,.L9
	.byte	4
	.word	.L44
	.byte	5
	.byte	'Fsys',0,1,39,12
	.word	.L45,.L46
	.byte	6
	.word	.L47,.L10,.L48
	.byte	7
	.word	.L49,.L50
	.byte	8
	.word	.L51,.L52
	.byte	6
	.word	.L55,.L10,.L48
	.byte	9
	.word	.L56,.L57
	.byte	0,10
	.word	.L55,.L53,.L58
	.byte	0,0,6
	.word	.L47,.L53,.L54
	.byte	7
	.word	.L49,.L50
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('initTime')
	.sect	'.debug_abbrev'
.L22:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,85,6,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,11,0,49,16,85,6,0,0,10,29,0,49,16,17,1,18,1
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('initTime')
	.sect	'.debug_line'
.L23:
	.word	.L146-.L145
.L145:
	.half	3
	.word	.L148-.L147
.L147:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0,0
.L148:
	.byte	4,2,5,40,7,0,5,2
	.word	.L10
	.byte	3,176,8,1,5,58,9
	.half	.L149-.L10
	.byte	1,4,1,5,5,9
	.half	.L48-.L149
	.byte	3,248,119,1,4,2,5,58,9
	.half	.L53-.L48
	.byte	3,136,8,1,4,1,5,5,3,248,119,1,4,2,5,58,9
	.half	.L150-.L53
	.byte	3,136,8,1,5,43,9
	.half	.L151-.L150
	.byte	1,4,1,5,38,9
	.half	.L58-.L151
	.byte	3,246,119,1,5,55,3,2,1,5,41,9
	.half	.L54-.L58
	.byte	1,5,34,9
	.half	.L152-.L54
	.byte	1,5,55,9
	.half	.L122-.L152
	.byte	3,1,1,5,41,9
	.half	.L153-.L122
	.byte	1,5,34,9
	.half	.L154-.L153
	.byte	1,5,52,9
	.half	.L155-.L154
	.byte	3,1,1,5,41,9
	.half	.L156-.L155
	.byte	1,5,34,9
	.half	.L157-.L156
	.byte	1,5,52,9
	.half	.L158-.L157
	.byte	3,1,1,5,41,9
	.half	.L159-.L158
	.byte	1,5,52,9
	.half	.L160-.L159
	.byte	3,1,1,5,34,3,127,1,5,41,9
	.half	.L123-.L160
	.byte	3,1,1,5,49,9
	.half	.L124-.L123
	.byte	3,1,1,5,34,3,127,1,5,41,9
	.half	.L125-.L124
	.byte	3,1,1,5,49,9
	.half	.L126-.L125
	.byte	3,1,1,5,34,3,127,1,5,41,9
	.half	.L127-.L126
	.byte	3,1,1,5,49,9
	.half	.L128-.L127
	.byte	3,1,1,5,34,3,127,1,5,41,9
	.half	.L129-.L128
	.byte	3,1,1,9
	.half	.L130-.L129
	.byte	3,2,1,5,34,3,126,1,5,41,9
	.half	.L161-.L130
	.byte	3,1,1,5,34,1,5,41,9
	.half	.L131-.L161
	.byte	3,1,1,5,34,1,5,41,9
	.half	.L132-.L131
	.byte	3,1,1,5,34,9
	.half	.L162-.L132
	.byte	1,5,1,9
	.half	.L163-.L162
	.byte	3,1,1,7,9
	.half	.L25-.L163
	.byte	0,1,1
.L146:
	.sdecl	'.debug_ranges',debug,cluster('initTime')
	.sect	'.debug_ranges'
.L24:
	.word	-1,.L10,0,.L25-.L10,0,0
.L44:
	.word	-1,.L10,0,.L43-.L10,-1,.L12,0,.L40-.L12,0,0
.L52:
	.word	-1,.L10,0,.L48-.L10,.L53-.L10,.L54-.L10,0,0
.L57:
	.word	-1,.L10,0,.L48-.L10,.L53-.L10,.L58-.L10,0,0
	.sdecl	'.debug_info',debug,cluster('waitPoll')
	.sect	'.debug_info'
.L26:
	.word	227
	.half	3
	.word	.L27
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L29,.L28
	.byte	2
	.word	.L17
	.byte	3
	.byte	'waitPoll',0,1,61,6,1,1,1
	.word	.L14,.L59,.L13
	.byte	4
	.word	.L14,.L59
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('waitPoll')
	.sect	'.debug_abbrev'
.L27:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('waitPoll')
	.sect	'.debug_line'
.L28:
	.word	.L165-.L164
.L164:
	.half	3
	.word	.L167-.L166
.L166:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0,0,0,0,0
.L167:
	.byte	5,2,7,0,5,2
	.word	.L14
	.byte	3,61,1,7,9
	.half	.L30-.L14
	.byte	0,1,1
.L165:
	.sdecl	'.debug_ranges',debug,cluster('waitPoll')
	.sect	'.debug_ranges'
.L29:
	.word	-1,.L14,0,.L30-.L14,0,0
	.sdecl	'.debug_info',debug,cluster('waitTime')
	.sect	'.debug_info'
.L31:
	.word	1000
	.half	3
	.word	.L32
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L34,.L33
	.byte	2
	.word	.L17
	.byte	3
	.byte	'waitTime',0,1,73,6,1,1,1
	.word	.L16,.L60,.L15
	.byte	4
	.byte	'timeout',0,1,73,28
	.word	.L61,.L62
	.byte	5
	.word	.L16,.L60
	.byte	6
	.word	.L63,.L16,.L64
	.byte	7
	.word	.L65,.L66
	.byte	8
	.word	.L67,.L16,.L64
	.byte	9
	.byte	'deadLine',0,2,145,3,18
	.word	.L61,.L68
	.byte	6
	.word	.L69,.L16,.L5
	.byte	7
	.word	.L70,.L71
	.byte	8
	.word	.L72,.L16,.L5
	.byte	9
	.byte	'deadLine',0,2,146,2,18
	.word	.L61,.L73
	.byte	6
	.word	.L74,.L75,.L4
	.byte	8
	.word	.L76,.L75,.L4
	.byte	9
	.byte	'stmNow',0,2,203,1,18
	.word	.L61,.L77
	.byte	6
	.word	.L78,.L75,.L79
	.byte	8
	.word	.L80,.L75,.L79
	.byte	6
	.word	.L81,.L75,.L79
	.byte	8
	.word	.L82,.L75,.L79
	.byte	6
	.word	.L83,.L75,.L84
	.byte	8
	.word	.L85,.L75,.L84
	.byte	9
	.byte	'reg',0,3,187,4,17
	.word	.L86,.L87
	.byte	0,0,0,0,0,0,6
	.word	.L88,.L79,.L89
	.byte	7
	.word	.L90,.L91
	.byte	8
	.word	.L92,.L79,.L89
	.byte	9
	.byte	'result',0,4,204,3,12
	.word	.L93,.L94
	.byte	0,0,6
	.word	.L95,.L96,.L4
	.byte	7
	.word	.L97,.L98
	.byte	8
	.word	.L99,.L96,.L4
	.byte	6
	.word	.L100,.L96,.L4
	.byte	7
	.word	.L101,.L102
	.byte	10
	.word	.L103,.L96,.L4
	.byte	0,0,0,0,0,0,0,6
	.word	.L104,.L5,.L64
	.byte	7
	.word	.L105,.L106
	.byte	8
	.word	.L107,.L5,.L64
	.byte	9
	.byte	'result',0,2,193,2,13
	.word	.L108,.L109
	.byte	6
	.word	.L74,.L110,.L8
	.byte	8
	.word	.L76,.L110,.L8
	.byte	9
	.byte	'stmNow',0,2,203,1,18
	.word	.L61,.L111
	.byte	6
	.word	.L78,.L110,.L112
	.byte	8
	.word	.L80,.L110,.L112
	.byte	6
	.word	.L81,.L110,.L112
	.byte	8
	.word	.L82,.L110,.L112
	.byte	6
	.word	.L83,.L110,.L113
	.byte	8
	.word	.L85,.L110,.L113
	.byte	9
	.byte	'reg',0,3,187,4,17
	.word	.L86,.L114
	.byte	0,0,0,0,0,0,6
	.word	.L88,.L112,.L115
	.byte	7
	.word	.L90,.L91
	.byte	11
	.word	.L92,.L116
	.byte	9
	.byte	'result',0,4,204,3,12
	.word	.L93,.L119
	.byte	0,0,6
	.word	.L88,.L117,.L118
	.byte	7
	.word	.L90,.L91
	.byte	0,6
	.word	.L95,.L120,.L8
	.byte	7
	.word	.L97,.L98
	.byte	8
	.word	.L99,.L120,.L8
	.byte	6
	.word	.L100,.L120,.L8
	.byte	7
	.word	.L101,.L102
	.byte	10
	.word	.L103,.L120,.L8
	.byte	0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('waitTime')
	.sect	'.debug_abbrev'
.L32:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('waitTime')
	.sect	'.debug_line'
.L33:
	.word	.L169-.L168
.L168:
	.half	3
	.word	.L171-.L170
.L170:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0,0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.h',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Stm\\Std\\IfxStm.h',0
	.byte	0,0,0,0
.L171:
	.byte	4,2,5,20,7,0,5,2
	.word	.L16
	.byte	3,147,2,1,5,17,9
	.half	.L133-.L16
	.byte	1,5,5,9
	.half	.L172-.L133
	.byte	1,4,3,5,19,7,9
	.half	.L75-.L172
	.byte	3,168,2,1,5,17,9
	.half	.L134-.L75
	.byte	3,1,1,5,21,9
	.half	.L135-.L134
	.byte	1,5,14,9
	.half	.L84-.L135
	.byte	3,8,1,5,10,9
	.half	.L173-.L84
	.byte	3,1,1,4,4,5,24,9
	.half	.L79-.L173
	.byte	3,136,127,1,5,32,9
	.half	.L174-.L79
	.byte	3,1,1,4,2,5,66,9
	.half	.L89-.L174
	.byte	3,128,126,1,4,3,5,5,9
	.half	.L96-.L89
	.byte	3,203,4,1,5,17,7,9
	.half	.L175-.L96
	.byte	3,2,1,4,2,5,26,9
	.half	.L4-.L175
	.byte	3,254,123,1,5,21,9
	.half	.L5-.L4
	.byte	3,41,1,5,18,9
	.half	.L176-.L5
	.byte	1,5,5,9
	.half	.L177-.L176
	.byte	1,4,3,5,19,7,9
	.half	.L110-.L177
	.byte	3,249,1,1,5,17,9
	.half	.L137-.L110
	.byte	3,1,1,5,21,9
	.half	.L138-.L137
	.byte	1,5,14,9
	.half	.L113-.L138
	.byte	3,8,1,5,10,9
	.half	.L178-.L113
	.byte	3,1,1,4,4,5,24,9
	.half	.L112-.L178
	.byte	3,136,127,1,4,2,5,68,9
	.half	.L115-.L112
	.byte	3,129,126,1,4,4,5,32,9
	.half	.L117-.L115
	.byte	3,128,2,1,4,2,5,66,9
	.half	.L118-.L117
	.byte	3,128,126,1,4,3,5,5,9
	.half	.L120-.L118
	.byte	3,203,4,1,5,17,7,9
	.half	.L179-.L120
	.byte	3,2,1,4,2,5,24,9
	.half	.L8-.L179
	.byte	3,173,124,1,5,41,9
	.half	.L7-.L8
	.byte	3,202,0,1,4,1,5,1,7,9
	.half	.L64-.L7
	.byte	3,185,125,1,7,9
	.half	.L35-.L64
	.byte	0,1,1
.L169:
	.sdecl	'.debug_ranges',debug,cluster('waitTime')
	.sect	'.debug_ranges'
.L34:
	.word	-1,.L16,0,.L35-.L16,0,0
.L116:
	.word	-1,.L16,.L112-.L16,.L115-.L16,.L117-.L16,.L118-.L16,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L36:
	.word	217
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L39,.L38
	.byte	2
	.word	.L17
	.byte	3
	.byte	'.cocofun_9',0,1,37,6,1
	.word	.L12,.L40,.L11
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L38:
	.word	.L181-.L180
.L180:
	.half	3
	.word	.L183-.L182
.L182:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0,0,0,0,0
.L183:
	.byte	5,41,7,0,5,2
	.word	.L12
	.byte	3,40,1,9
	.half	.L40-.L12
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,41,1,9
	.half	.L184-.L12
	.byte	3,127,1,7,9
	.half	.L40-.L184
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,42,1,9
	.half	.L184-.L12
	.byte	3,126,1,7,9
	.half	.L40-.L184
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,43,1,9
	.half	.L184-.L12
	.byte	3,125,1,7,9
	.half	.L40-.L184
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,44,1,9
	.half	.L184-.L12
	.byte	3,124,1,7,9
	.half	.L40-.L184
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,45,1,9
	.half	.L184-.L12
	.byte	3,123,1,7,9
	.half	.L40-.L184
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,46,1,9
	.half	.L184-.L12
	.byte	3,122,1,7,9
	.half	.L40-.L184
	.byte	0,1,1,5,41,0,5,2
	.word	.L12
	.byte	3,47,1,9
	.half	.L184-.L12
	.byte	3,121,1,7,9
	.half	.L40-.L184
	.byte	0,1,1
.L181:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L39:
	.word	-1,.L12,0,.L40-.L12,0,0
	.sdecl	'.debug_info',debug,cluster('TimeConst')
	.sect	'.debug_info'
.L41:
	.word	206
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Bsp\\Bsp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L17
	.byte	3
	.byte	'TimeConst',0,16,28,14
	.word	.L121
	.byte	1,5,3
	.word	TimeConst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('TimeConst')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L11:
	.word	-1,.L12,0,.L40-.L12
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('initTime')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L10,.L12-.L10,.L40-.L10
	.half	1
	.byte	82
	.word	.L122-.L10,.L123-.L10
	.half	1
	.byte	82
	.word	.L124-.L10,.L125-.L10
	.half	1
	.byte	82
	.word	.L126-.L10,.L127-.L10
	.half	1
	.byte	82
	.word	.L128-.L10,.L129-.L10
	.half	1
	.byte	82
	.word	.L130-.L10,.L43-.L10
	.half	1
	.byte	82
	.word	.L131-.L10,.L132-.L10
	.half	2
	.byte	144,32
	.word	0,0
.L9:
	.word	-1,.L10,0,.L43-.L10
	.half	2
	.byte	138,0
	.word	0,0
.L50:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('waitPoll')
	.sect	'.debug_loc'
.L13:
	.word	-1,.L14,0,.L59-.L14
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('waitTime')
	.sect	'.debug_loc'
.L73:
	.word	-1,.L16,.L133-.L16,.L60-.L16
	.half	2
	.byte	144,35
	.word	0,0
.L106:
	.word	0,0
.L68:
	.word	0,0
.L98:
	.word	0,0
.L102:
	.word	0,0
.L87:
	.word	-1,.L16,.L134-.L16,.L135-.L16
	.half	1
	.byte	95
	.word	0,0
.L114:
	.word	-1,.L16,.L137-.L16,.L138-.L16
	.half	1
	.byte	95
	.word	0,0
.L109:
	.word	-1,.L16,.L140-.L16,.L64-.L16
	.half	1
	.byte	95
	.word	0,0
.L94:
	.word	-1,.L16,.L89-.L16,.L136-.L16
	.half	2
	.byte	144,32
	.word	0,0
.L119:
	.word	-1,.L16,.L118-.L16,.L139-.L16
	.half	2
	.byte	144,32
	.word	0,0
.L91:
	.word	0,0
.L111:
	.word	-1,.L16,.L139-.L16,.L7-.L16
	.half	2
	.byte	144,32
	.word	0,0
.L77:
	.word	-1,.L16,.L136-.L16,.L5-.L16
	.half	2
	.byte	144,32
	.word	0,0
.L62:
	.word	-1,.L16,0,.L60-.L16
	.half	2
	.byte	144,34
	.word	0,0
.L71:
	.word	0,0
.L66:
	.word	0,0
.L15:
	.word	-1,.L16,0,.L60-.L16
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L185:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('initTime')
	.sect	'.debug_frame'
	.word	12
	.word	.L185,.L10,.L43-.L10
	.sdecl	'.debug_frame',debug,cluster('waitPoll')
	.sect	'.debug_frame'
	.word	24
	.word	.L185,.L14,.L59-.L14
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('waitTime')
	.sect	'.debug_frame'
	.word	24
	.word	.L185,.L16,.L60-.L16
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L186:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L186,.L12,.L40-.L12
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
