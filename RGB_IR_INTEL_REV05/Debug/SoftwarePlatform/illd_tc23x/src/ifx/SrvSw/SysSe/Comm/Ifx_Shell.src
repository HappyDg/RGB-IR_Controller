	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc24008a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\.Ifx_Shell.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c'

	
$TC16X
	.sdecl	'.zrodata.IfxStdIf_DPipe..32.cnt',data,rom
	.sect	'.zrodata.IfxStdIf_DPipe..32.cnt'
	.align	4
.32.cnt:	.type	object
	.size	.32.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_writeResult',code,cluster('Ifx_Shell_writeResult')
	.sect	'.text.Ifx_Shell.Ifx_Shell_writeResult'
	.align	2
	

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     2   * \file shell.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     3   * \brief shell functions.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    23   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    24  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    25  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    26  #include "Ifx_Shell.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    27  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    28  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    29  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    30  #include <string.h>
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    31  #include <stdlib.h>
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    32  #include <stdio.h>
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    33  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    34  #define IFX_SHELL_LLD              "%lld "
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    35  #define IFX_SHELL_LLX              "%llx "
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    36  #define IFX_SHELL_LLU              "%llu "
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    37  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    38  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    39  #define IFX_SHELL_MAX_MESSAGE_SIZE 255
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    40  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    41  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    42  /* Macro to detect space character */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    43  #define ISSPACE(c)           (((c) == ' ') || ((c) == '\t'))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    45  /* Macro to only execute parameter if echo is enabled for this shell */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    46  #define IFX_SHELL_IF_ECHO(X) {if (shell->control.echo) {X; }}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    47  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    48  /* Macro to write lots of spaces */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    49  #define IFX_SHELL_WRITE_SPACES(X) \ 
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    50      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, " "); }}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    51  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    52  /* Macro to write lots of backspaces */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    53  #define IFX_SHELL_WRITE_BACKSPACES(X) \ 
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    54      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, "\b"); }}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    55  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    56  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    57  char Ifx_Shell_cmdBuffer[IFX_SHELL_CMD_LINE_SIZE * IFX_SHELL_CMD_HISTORY_SIZE];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    58  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    59  void Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    60  void Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    61  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    62  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    63  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    64   * \brief Check whether the args is already at the end.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    65   * \param args The argument null-terminated string
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    66   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    67  IFX_INLINE boolean Ifx_Shell_isEndOfLine(pchar args)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    68  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    69      return ((args == NULL_PTR) || (*args == IFX_SHELL_NULL_CHAR)) ? TRUE : FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    70  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    71  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    72  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    73  static boolean Ifx_Shell_writeResult(Ifx_Shell *shell, Ifx_SizeT Code)
; Function Ifx_Shell_writeResult
.L242:
Ifx_Shell_writeResult:	.type	func
	sub.a	a10,#24
.L735:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    74  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    75      Ifx_SizeT length = sizeof(Code);
	mov	d15,#2
	st.h	[a10]20,d4
.L1429:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    76      boolean   result = IfxStdIf_DPipe_write(shell->io, &Code, &length, TIME_INFINITE);
	ld.a	a15,[a4]
.L1430:
	st.h	[a10]22,d15
.L710:
	lea	a5,[a10]20
.L1431:
	lea	a6,[a10]22
.L1432:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.a	a2,[a15]8
.L1433:
	ld.a	a4,[a15]
.L737:
	ld.d	e4,.32.cnt
.L736:
	calli	a2
.L1434:
	mov	d8,d2
.L711:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    77  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    78      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
	jne	d8,#0,.L2
.L1435:
	fcall	.cocofun_36
	st.a	[a10],a15
	movh.a	a15,#@his(.2.str)
	lea	a15,[a15]@los(.2.str)
	st.a	[a10]4,a15
	fcall	.cocofun_33
	st.a	[a10]8,a15
	mov	d15,#78
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999001___func__)
	lea	a15,[a15]@los(_999001___func__)
	st.a	[a10]16,a15
	fcall	.cocofun_34
	call	printf
.L2:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    79  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    80      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    81  }
	mov	d2,d8
	ret
.L704:
	
__Ifx_Shell_writeResult_function_end:
	.size	Ifx_Shell_writeResult,__Ifx_Shell_writeResult_function_end-Ifx_Shell_writeResult
.L441:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle',code,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle'
	.align	2
	
	.global	Ifx_Shell_showHelpSingle

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    82  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    83  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    84  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    85  boolean Ifx_Shell_showHelpSingle(pchar prefix, const void *commandList, IfxStdIf_DPipe *io)
; Function Ifx_Shell_showHelpSingle
.L244:
Ifx_Shell_showHelpSingle:	.type	func
	sub.a	a10,#8
.L738:
	mov.aa	a12,a4
.L739:
	mov.aa	a13,a6
.L740:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    86  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    87      const Ifx_Shell_Command *command = commandList;
	mov.aa	a15,a5
.L741:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    88  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    89      while (command->commandLine != NULL_PTR)
	j	.L4
.L5:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    90      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    91          if ((prefix != NULL_PTR) && (prefix[0] != IFX_SHELL_NULL_CHAR))
	jz.a	a12,.L6
.L1262:
	ld.bu	d15,[a12]
.L1263:
	jeq	d15,#0,.L7
.L1264:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    92          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    93              IfxStdIf_DPipe_print(io, "%s ", prefix);
	st.a	[a10],a12
.L1265:
	lea	a5,.4.str
	mov.aa	a4,a13
.L742:
	call	IfxStdIf_DPipe_print
.L7:
.L6:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    94          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    95  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    96          IfxStdIf_DPipe_print(io, command->commandLine);
	ld.a	a5,[a15]
	mov.aa	a4,a13
.L743:
	call	IfxStdIf_DPipe_print
.L744:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    97          IfxStdIf_DPipe_print(io, command->help);
	ld.a	a5,[a15]4
	mov.aa	a4,a13
.L745:
	call	IfxStdIf_DPipe_print
.L746:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    98          IfxStdIf_DPipe_print(io, ENDL);
	lea	a5,.5.str
	mov.aa	a4,a13
.L747:
	call	IfxStdIf_DPipe_print
.L748:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	    99          command = &command[1];
	lea	a15,[a15]16
.L4:
	ld.w	d15,[a15]
.L1266:
	jne	d15,#0,.L5
.L1267:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   100      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   102      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   103  }
	mov	d2,#1
	ret
.L633:
	
__Ifx_Shell_showHelpSingle_function_end:
	.size	Ifx_Shell_showHelpSingle,__Ifx_Shell_showHelpSingle_function_end-Ifx_Shell_showHelpSingle
.L406:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelp',code,cluster('Ifx_Shell_showHelp')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelp'
	.align	2
	
	.global	Ifx_Shell_showHelp

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   104  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   105  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   106  boolean Ifx_Shell_showHelp(pchar args, void *shellPtr, IfxStdIf_DPipe *io)
; Function Ifx_Shell_showHelp
.L246:
Ifx_Shell_showHelp:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   107  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   108      sint32     i;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   109      Ifx_Shell *shell = shellPtr;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   110  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   111      (void)args;                 /* ignore compiler warning */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   113      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   114      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   115          if (shell->commandList[i] != NULL_PTR)
	ld.a	a5,[a5]324
.L750:
	jz.a	a5,.L9
.L1272:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   116          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   117              Ifx_Shell_showHelpSingle("", shell->commandList[i], io);
	lea	a4,.6.str
.L749:
	call	Ifx_Shell_showHelpSingle
.L9:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   118          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   119      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   120  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   121      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   122  }
	mov	d2,#1
	ret
.L640:
	
__Ifx_Shell_showHelp_function_end:
	.size	Ifx_Shell_showHelp,__Ifx_Shell_showHelp_function_end-Ifx_Shell_showHelp
.L411:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_protocolStart',code,cluster('Ifx_Shell_protocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_protocolStart'
	.align	2
	
	.global	Ifx_Shell_protocolStart

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   123  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   124  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   125  boolean Ifx_Shell_protocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
; Function Ifx_Shell_protocolStart
.L248:
Ifx_Shell_protocolStart:	.type	func
	sub.a	a10,#8
.L751:
	st.a	[a10],a4
	mov.aa	a15,a5
.L755:
	mov.aa	a12,a6
.L756:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   126  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   127      Ifx_Shell *shell  = data;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   128      boolean    Result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   129  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   130      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
	mov	d15,#1
	mov.aa	a4,a10
.L752:
	lea	a5,.7.str
.L753:
	call	Ifx_Shell_matchToken
.L754:
	jeq	d2,#0,.L11
.L1285:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   131      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   132          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
	movh.a	a5,#@his(.8.str)
	lea	a5,[a5]@los(.8.str)
	mov.aa	a4,a12
.L758:
	call	IfxStdIf_DPipe_print
.L759:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   133          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	mov.aa	a4,a12
.L760:
	call	IfxStdIf_DPipe_print
.L761:
	j	.L12
.L11:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   134      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   135      else if (Ifx_Shell_matchToken(&args, "start") != FALSE)
	mov.aa	a4,a10
.L1286:
	lea	a5,.10.str
	call	Ifx_Shell_matchToken
.L1287:
	jeq	d2,#0,.L13
.L1288:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   136      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   137          if ((shell->protocol.start != NULL_PTR) && (shell->protocol.object != NULL_PTR))
	ld.a	a2,[a15]328
.L1289:
	jz.a	a2,.L14
.L1290:
	ld.a	a4,[a15]344
.L1291:
	jz.a	a4,.L15
.L1292:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   138          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   139              Result                  = shell->protocol.start(shell->protocol.object, io);
	mov.aa	a5,a12
.L762:
	calli	a2
.L757:
	mov	d15,d2
.L764:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   140              shell->protocol.started = (Result != FALSE);
	ne	d0,d15,#0
	st.b	[a15]348,d0
.L1293:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   141  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   142              if (shell->protocol.onStart != NULL_PTR)
	ld.a	a2,[a15]336
.L1294:
	jz.a	a2,.L16
.L1295:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   143              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   144                  shell->protocol.onStart(shell->protocol.object, shell->protocol.onStartData);
	ld.a	a4,[a15]344
.L1296:
	ld.a	a5,[a15]340
	calli	a2
.L763:
	j	.L17
.L15:
.L14:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   145              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   146          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   147          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   148          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   149              Result = FALSE;
	mov	d15,#0
.L17:
.L16:
.L13:
.L12:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   150          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   151      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   152      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   153      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   154  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   155      return Result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   156  }
	mov	d2,d15
	ret
.L651:
	
__Ifx_Shell_protocolStart_function_end:
	.size	Ifx_Shell_protocolStart,__Ifx_Shell_protocolStart_function_end-Ifx_Shell_protocolStart
.L421:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart',code,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart'
	.align	2
	
	.global	Ifx_Shell_bbProtocolStart

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   157  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   159  boolean Ifx_Shell_bbProtocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
; Function Ifx_Shell_bbProtocolStart
.L250:
Ifx_Shell_bbProtocolStart:	.type	func
	sub.a	a10,#8
.L765:
	st.a	[a10],a4
	mov.aa	a15,a5
.L769:
	mov.aa	a12,a6
.L770:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   160  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   161      boolean result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   162  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   163      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
	mov	d15,#1
	mov.aa	a4,a10
.L766:
	lea	a5,.7.str
.L767:
	call	Ifx_Shell_matchToken
.L768:
	jeq	d2,#0,.L19
.L1301:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   164      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   165          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
	movh.a	a5,#@his(.8.str)
	lea	a5,[a5]@los(.8.str)
	mov.aa	a4,a12
.L772:
	call	IfxStdIf_DPipe_print
.L773:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   166          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	mov.aa	a4,a12
.L774:
	call	IfxStdIf_DPipe_print
.L775:
	j	.L20
.L19:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   167      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   168      else if (Ifx_Shell_matchToken(&args, "protocol") != FALSE)
	mov.aa	a4,a10
.L1302:
	movh.a	a5,#@his(.11.str)
	lea	a5,[a5]@los(.11.str)
	call	Ifx_Shell_matchToken
.L1303:
	jeq	d2,#0,.L21
.L1304:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   169      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   170          result = Ifx_Shell_protocolStart(args, data, io);
	ld.a	a4,[a10]
.L1305:
	mov.aa	a5,a15
.L776:
	mov.aa	a6,a12
.L777:
	call	Ifx_Shell_protocolStart
.L771:
	mov	d15,d2
.L21:
.L20:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   171      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   172      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   173      {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   174  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   175      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   176  }
	mov	d2,d15
	ret
.L657:
	
__Ifx_Shell_bbProtocolStart_function_end:
	.size	Ifx_Shell_bbProtocolStart,__Ifx_Shell_bbProtocolStart_function_end-Ifx_Shell_bbProtocolStart
.L426:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_initConfig',code,cluster('Ifx_Shell_initConfig')
	.sect	'.text.Ifx_Shell.Ifx_Shell_initConfig'
	.align	2
	
	.global	Ifx_Shell_initConfig

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   177  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   178  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   179  //---------------------------------------------------------------------------
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   180  void Ifx_Shell_initConfig(Ifx_Shell_Config *config)
; Function Ifx_Shell_initConfig
.L252:
Ifx_Shell_initConfig:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   181  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   182      uint32 i;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   183  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   184      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   185      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   186          config->commandList[i] = NULL_PTR;
	mov.a	a15,#0
.L946:
	st.a	[a4]8,a15
.L947:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   187      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   188  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   189      config->standardIo           = NULL_PTR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   190      config->echo                 = TRUE;
	mov	d15,#1
	st.b	[a4]4,d15
.L948:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   191      config->protocol.execute     = NULL_PTR;
	st.a	[a4]16,a15
.L949:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   192      config->protocol.object      = NULL_PTR;
	st.a	[a4]28,a15
.L950:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   193      config->protocol.onStart     = NULL_PTR;
	st.a	[a4]20,a15
.L951:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   194      config->protocol.onStartData = NULL_PTR;
	st.a	[a4]24,a15
.L952:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   195      config->protocol.start       = NULL_PTR;
	st.a	[a4]12,a15
.L953:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   196      config->protocol.started     = FALSE;
	mov	d0,#0
	st.b	[a4]32,d0
.L954:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   197      config->sendResultCode       = FALSE;
	st.b	[a4]6,d0
.L955:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   198      config->showPrompt           = TRUE;
	st.b	[a4]5,d15
.L956:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   199      config->standardIo           = NULL_PTR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   200  }
	st.a	[a4],a15
	ret
.L499:
	
__Ifx_Shell_initConfig_function_end:
	.size	Ifx_Shell_initConfig,__Ifx_Shell_initConfig_function_end-Ifx_Shell_initConfig
.L321:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_init',code,cluster('Ifx_Shell_init')
	.sect	'.text.Ifx_Shell.Ifx_Shell_init'
	.align	2
	
	.global	Ifx_Shell_init

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   201  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   202  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   203  boolean Ifx_Shell_init(Ifx_Shell *shell, const Ifx_Shell_Config *config)
; Function Ifx_Shell_init
.L254:
Ifx_Shell_init:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   204  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   205      sint32 i;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   206      char **CmdHistory = NULL_PTR;   /* Pointer to array of pointers for command history items */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   207  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   208      /* Ensure state variable is cleared */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   209      memset(shell, 0, sizeof(*shell));
	mov	d4,#0
	mov.aa	a15,a4
.L779:
	mov	d5,#352
	mov.aa	a12,a5
.L780:
	call	memset
.L778:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   210  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   211      shell->protocol               = config->protocol;
	lea	a2,[a12]12
.L961:
	lea	a4,[a15]328
	mov.a	a5,#5
.L23:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L23
.L962:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   212      shell->protocol.started       = FALSE;
	mov	d4,#0
	st.b	[a15]348,d4
.L963:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   213  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   214      shell->io                     = config->standardIo;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   215      shell->control.showPrompt     = config->showPrompt;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   216      shell->control.sendResultCode = config->sendResultCode;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   217      shell->control.echo           = config->echo;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   218      shell->control.echoError      = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   219      shell->control.enabled        = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   220  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   221      shell->locals.escBracketNum   = IFX_SHELL_NULL_CHAR; /* Used to cache number in sequence "ESC [ 1/2/3/4 ~" */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   222      shell->locals.cmdState        = IFX_SHELL_CMD_STATE_NORMAL;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   223  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   224      /* Copy command line buffer pointer into state variable */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   225      shell->cmd.cmdStr = shell->locals.cmdStr;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   226  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   227      /* Initialize command history space and cache pointer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   228      memset(Ifx_Shell_cmdBuffer, 0, sizeof(Ifx_Shell_cmdBuffer));
	movh.a	a13,#@his(Ifx_Shell_cmdBuffer)
.L964:
	ld.a	a2,[a12]
.L965:
	st.a	[a15],a2
.L966:
	mov	d5,#1280
	lea	a2,[a15]191
.L967:
	ld.bu	d15,[a15]4
.L968:
	ld.bu	d0,[a12]5
.L969:
	lea	a13,[a13]@los(Ifx_Shell_cmdBuffer)
.L970:
	insert	d15,d15,d0,#0,#1
	st.b	[a15]4,d15
.L971:
	mov.aa	a4,a13
.L972:
	ld.bu	d0,[a12]6
.L973:
	insert	d15,d15,d0,#2,#1
	st.b	[a15]4,d15
.L974:
	ld.bu	d0,[a12]4
.L975:
	insert	d15,d15,d0,#3,#1
.L976:
	or	d15,#16
.L977:
	or	d15,#2
	st.b	[a15]4,d15
.L978:
	st.b	[a15]320,d4
.L979:
	st.b	[a15]319,d4
.L980:
	st.a	[a15]48,a2
.L981:
	call	memset
.L982:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   229      shell->cmdHistory[0] = &Ifx_Shell_cmdBuffer[0];
	st.a	[a15]8,a13
.L983:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   230  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   231      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   232      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   233          shell->commandList[i] = config->commandList[i];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   234      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   235  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   236      /* Initialize command history pointers */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   237      CmdHistory = shell->cmdHistory;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   238  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   239      for (i = 1; i < IFX_SHELL_CMD_HISTORY_SIZE; i++)
	mov.a	a5,#8
.L984:
	ld.a	a2,[a12]8
.L985:
	st.a	[a15]324,a2
.L986:
	lea	a2,[a15]8
.L781:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   240      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   241          CmdHistory[i] = &CmdHistory[i - 1][IFX_SHELL_CMD_LINE_SIZE];    /* Items are just offsets into a large allocated area */
	lea	a4,[a2]4
.L24:
	ld.a	a6,[a4]-4
.L987:
	lea	a6,[a6]128
.L988:
	st.a	[a4+],a6
	loop	a5,.L24
.L989:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   242      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   243  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   244      shell->cmd.historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
	mov	d15,#-1
	st.h	[a15]58,d15
.L990:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   245  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   246      /* Pre-load useful commands into history buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   247      strcpy(CmdHistory[0], "help");
	lea	a5,.12.str
.L991:
	ld.a	a4,[a2]
.L992:
	call	strcpy
.L782:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   248      strcpy(CmdHistory[1], "protocol start");
	ld.a	a4,[a15]12
.L993:
	movh.a	a5,#@his(.13.str)
	lea	a5,[a5]@los(.13.str)
	call	strcpy
.L994:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   249  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   250      if (shell->control.showPrompt != 0)
	ld.bu	d15,[a15]4
.L995:
	jz.t	d15:0,.L25
.L996:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   251      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   252          IfxStdIf_DPipe_print(shell->io, ENDL);
	ld.a	a4,[a15]
.L997:
	lea	a5,.5.str
	call	IfxStdIf_DPipe_print
.L998:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   253          IfxStdIf_DPipe_print(shell->io, IFX_SHELL_PROMPT);
	ld.a	a4,[a15]
.L999:
	lea	a5,.14.str
	call	IfxStdIf_DPipe_print
.L25:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   254      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   255  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   256      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   257  }
	mov	d2,#1
	ret
.L503:
	
__Ifx_Shell_init_function_end:
	.size	Ifx_Shell_init,__Ifx_Shell_init_function_end-Ifx_Shell_init
.L326:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_process',code,cluster('Ifx_Shell_process')
	.sect	'.text.Ifx_Shell.Ifx_Shell_process'
	.align	2
	
	.global	Ifx_Shell_process

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   258  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   259  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   260  void Ifx_Shell_process(Ifx_Shell *shell)
; Function Ifx_Shell_process
.L256:
Ifx_Shell_process:	.type	func
	mov.aa	a12,a4
.L805:
	sub.a	a10,#32
.L783:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   261  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   262      Ifx_SizeT          i, j;           /* Loop variables */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   263      Ifx_SizeT          count;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   264      Ifx_SizeT          readCount;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   265      boolean            NormalKeyPress; /* Indicates if this is a normal keypress, i.e. not part of an escape code */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   266  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   267      Ifx_Shell_CmdLine *Cmd         = &shell->cmd;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   268      char              *inputbuffer = shell->locals.inputbuffer;
	lea	a15,[a12]62
.L785:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   269      char              *cmdStr      = shell->locals.cmdStr;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   270      char             **CmdHistory  = shell->cmdHistory;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   271  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   272      if (shell->control.enabled == 0)
	ld.bu	d15,[a12]4
.L1021:
	st.a	[a10]24,a15
.L802:
	lea	a15,[a12]8
.L786:
	st.a	[a10]28,a15
.L797:
	lea	a13,[a12]191
.L800:
	jz.t	d15:1,.L27
.L1022:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   273      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   274          return;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   275      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   276  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   277      if ((shell->protocol.object != NULL_PTR) && (shell->protocol.started != FALSE))
	ld.a	a4,[a12]344
.L784:
	jz.a	a4,.L28
.L1023:
	ld.bu	d15,[a12]348
.L1024:
	jeq	d15,#0,.L29
.L1025:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   278      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   279          shell->protocol.execute(shell->protocol.object);
	ld.a	a15,[a12]332
.L787:
	ji	a15
.L29:
.L28:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   280      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   281      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   282      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   283          /**** NORMAL MODE ****/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   284  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   285          /********************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   286          /* Read all characters until enter inclusive.                                   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   287          /* If the command is bigger than IFX_SHELL_CMD_SIZE, the command is ignored.    */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   288          /*                                                                              */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   289          /* Escape sequences are handled by a state machine.                             */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   290          /* The following escape sequences (prefix "ESC [") are supported:               */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   291          /*                                                                              */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   292          /* A  - up      B - down       C - right     D - left                           */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   293          /* 1~ - HOME   2~ - INSERT    3~ - DELETE   5~ - END                            */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   294          /*                                                                              */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   295          /* Backspace ('\b') is also supported.                                          */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   296          /********************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   297  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   298          count     = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   299          readCount = IFX_SHELL_CMD_LINE_SIZE - count;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   300          IfxStdIf_DPipe_read(shell->io, &inputbuffer[count], &readCount, TIME_NULL);
	mov	d15,#128
	ld.a	a15,[a12]
.L788:
	st.h	[a10]20,d15
.L541:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   248  /** \copydoc IfxStdIf_DPipe_Read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   250  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   252      return stdif->read(stdif->driver, data, count, timeout);
	mov	e4,#0
	lea	a6,[a10]20
.L1026:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   248  /** \copydoc IfxStdIf_DPipe_Read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   250  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   252      return stdif->read(stdif->driver, data, count, timeout);
	ld.a	a5,[a10]24
.L789:
	ld.a	a2,[a15]12
.L1027:
	ld.a	a4,[a15]
.L1028:
	calli	a2
.L542:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   301          count    += readCount;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   302  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   303          for (i = 0; i < count; i++)
	mov	d10,#0
	ld.h	d8,[a10]20
.L801:
	mov	d9,d10
	j	.L31
.L32:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   304          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   305              /* By default, we assume character is part of escape sequence */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   306              NormalKeyPress = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   307  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   308              /* Process key pressed */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   309              switch (inputbuffer[i])
	ld.a	a15,[a10]24
.L790:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   310              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   311              /* New line (ENTER) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   312              case '\n':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   313              case '\r':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   314                  /* Print new line to terminal if requested */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   315                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, ENDL))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   316  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   317                  /* Execute command if length is valid - i.e. not an over-full buffer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   318                   * (prevents attempted execution of junk) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   319                  if (Cmd->length < IFX_SHELL_CMD_LINE_SIZE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   320                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   321                      cmdStr[Cmd->length] = IFX_SHELL_NULL_CHAR;  /* Terminate cmdStr */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   322  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   323                      if (Cmd->historyAdd != FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   324                      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   325                          /* Shuffle history up */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   326                          for (j = IFX_SHELL_CMD_HISTORY_SIZE - 1; j > 0; j--)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   327                          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   328                              /* Copy text */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   329                              strncpy(CmdHistory[j], CmdHistory[j - 1], IFX_SHELL_CMD_LINE_SIZE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   330                          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   331  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   332                          /* Copy in new entry */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   333                          strncpy(CmdHistory[0], cmdStr, IFX_SHELL_CMD_LINE_SIZE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   334                      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   335  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   336                      /* Execute command */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   337                      Ifx_Shell_execute(shell, cmdStr);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   338                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   339  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   340                  /* Show prompt if in main shell */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   341                  if (shell->control.showPrompt != 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   342                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   343                      IfxStdIf_DPipe_print(shell->io, IFX_SHELL_PROMPT);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   344                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   345  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   346                  /* Reset command line buffer length */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   347                  Cmd->length = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   348  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   349                  /* Reset command line buffer cursor position */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   350                  Cmd->cursor = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   351  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   352                  /* Clear flag */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   353                  Cmd->historyAdd = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   354  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   355                  /* Ensure we're not in command history list */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   356                  Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   357                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   358  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   359              /* Backspace (may occur in middle of text if cursor location is not at end) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   360              case '\b':
	mov	d15,#8
.L1029:
	mov	d11,#0
.L799:
	ld.b	d4,[a15]0
.L1030:
	jeq	d15,d4,.L33
.L1031:
	mov	d15,#10
	jeq	d15,d4,.L34
.L1032:
	mov	d15,#13
	jeq	d15,d4,.L35
.L1033:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   361  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   362                  if (Cmd->cursor > 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   363                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   364                      /* Update on screen */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   365                      if (shell->control.echo != 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   366                      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   367                          /* Move left one character */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   368                          IfxStdIf_DPipe_print(shell->io, "\b");
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   369  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   370                          /* Update line with new characters */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   371                          for (j = Cmd->cursor; j < Cmd->length; j++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   372                          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   373                              IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[j]);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   374                          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   375  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   376                          /* Write over duplicated character at end */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   377                          IfxStdIf_DPipe_print(shell->io, " ");
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   378                          IFX_SHELL_WRITE_BACKSPACES((Cmd->length - Cmd->cursor) + 1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   379                      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   380  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   381                      /* Update in command line variable. Shuffle text left */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   382                      strncpy(&cmdStr[Cmd->cursor - 1], &cmdStr[Cmd->cursor], Cmd->length - Cmd->cursor);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   383  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   384                      /* Terminate string at end of shorter string */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   385                      cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   386  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   387                      Cmd->length--;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   388                      Cmd->cursor--;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   389  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   390                      /* Command line has been modified */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   391                      Cmd->historyAdd = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   392                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   393  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   394                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   395  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   396              /* Escape character */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   397              case '\x1B':       /*'\x1B': */
	mov	d15,#27
	jeq	d15,d4,.L36
.L1034:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   398                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   399                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   400  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   401              /* '[' - check to see if this is second part of an escape sequence */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   402              case '[':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   403  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   404                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   405                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   406                      /* ESC [ pressed */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   407                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   408                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   409                  else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   410                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   411                      NormalKeyPress = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   412                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   413  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   414                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   415  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   416              /* Check for supported characters in escape sequences ( ESC [ A/B/C/D ) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   417              case 'A':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   418              case 'B':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   419              case 'C':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   420              case 'D':
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   421  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   422                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   423                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   424                      /* Process arrow keys */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   425                      Ifx_Shell_cmdEscapeProcess(shell, inputbuffer[i], 0);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   426  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   427                      /* End of escape sequence */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   428                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   429                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   430                  else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   431                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   432                      NormalKeyPress = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   433                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   434  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   435                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   436  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   437              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   438              case '1':
	mov	d15,#49
	jeq	d15,d4,.L37
.L1035:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   439              case '2':
	mov	d15,#50
	jeq	d15,d4,.L38
.L1036:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   440              case '3':
	mov	d15,#51
	jeq	d15,d4,.L39
.L1037:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   441              case '4':
	mov	d15,#52
	jeq	d15,d4,.L40
.L1038:
	mov	d15,#65
	jeq	d15,d4,.L41
.L1039:
	mov	d15,#66
	jeq	d15,d4,.L42
.L1040:
	mov	d15,#67
	jeq	d15,d4,.L43
.L1041:
	mov	d15,#68
	jeq	d15,d4,.L44
.L1042:
	mov	d15,#91
	jeq	d15,d4,.L45
.L1043:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   442  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   443                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   444                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   445                      /* Store number for use once complete escape sequence is confirmed (below) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   446                      shell->locals.escBracketNum = inputbuffer[i];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   447                      shell->locals.cmdState      = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   448                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   449                  else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   450                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   451                      NormalKeyPress = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   452                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   453  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   454                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   455  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   456              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   457              case '~':
	mov	d15,#126
	jeq	d15,d4,.L46
	j	.L47
.L35:
.L34:
	ld.bu	d15,[a12]4
	jz.t	d15:3,.L48
	ld.a	a4,[a12]
	lea	a5,.5.str
	call	IfxStdIf_DPipe_print
.L48:
	ld.h	d0,[a12]54
.L1044:
	mov	d15,#128
.L1045:
	jge	d0,d15,.L49
.L1046:
	addsc.a	a15,a13,d0,#0
.L791:
	mov	d15,#0
.L1047:
	st.b	[a15],d15
.L1048:
	ld.bu	d15,[a12]56
.L1049:
	jeq	d15,#0,.L50
.L1050:
	lea	a15,[a12]44
.L1051:
	mov.a	a14,#8
.L51:
	ld.a	a4,[a15]
.L1052:
	ld.a	a5,[+a15]-4
.L1053:
	mov	d4,#128
	call	strncpy
.L1054:
	loop	a14,.L51
.L1055:
	ld.a	a15,[a10]28
.L792:
	mov	d4,#128
	mov.aa	a5,a13
.L793:
	ld.a	a4,[a15]
.L1056:
	call	strncpy
.L50:
	mov.aa	a4,a12
.L794:
	mov.aa	a5,a13
.L795:
	call	Ifx_Shell_execute
.L49:
	ld.bu	d15,[a12]4
.L1057:
	jz.t	d15:0,.L52
.L1058:
	ld.a	a4,[a12]
.L1059:
	lea	a5,.14.str
	call	IfxStdIf_DPipe_print
.L52:
	st.h	[a12]54,d10
.L1060:
	st.h	[a12]52,d10
.L1061:
	st.b	[a12]56,d10
.L1062:
	mov	d15,#-1
	st.h	[a12]58,d15
.L1063:
	j	.L53
.L33:
	ld.h	d15,[a12]52
.L1064:
	jlt	d15,#1,.L54
.L1065:
	ld.bu	d15,[a12]4
.L1066:
	jz.t	d15:3,.L55
.L1067:
	fcall	.cocofun_35
.L1068:
	call	IfxStdIf_DPipe_print
.L1069:
	ld.h	d15,[a12]52
.L803:
	addsc.a	a15,a13,d15,#0
.L796:
	j	.L56
.L57:
	ld.b	d0,[a15+]1
	st.w	[a10],d0
.L1070:
	fcall	.cocofun_39
.L1071:
	call	IfxStdIf_DPipe_print
.L1072:
	add	d15,#1
.L804:
	extr	d15,d15,#0,#16
.L56:
	ld.h	d0,[a12]54
.L1073:
	jlt	d15,d0,.L57
.L1074:
	lea	a5,.17.str
.L553:
	mov	d12,#0
	j	.L58
.L59:
	add	d12,#1
	lea	a5,.15.str
.L58:
	ld.a	a4,[a12]
	call	IfxStdIf_DPipe_print
	fcall	.cocofun_40
.L798:
	jlt	d12,d15,.L59
.L55:
	ld.h	d15,[a12]52
.L1075:
	ld.h	d4,[a12]54
.L1076:
	addsc.a	a15,a12,d15,#0
.L1077:
	addsc.a	a5,a13,d15,#0
.L1078:
	sub	d4,d15
	lea	a4,[a15]190
.L1079:
	call	strncpy
.L1080:
	ld.h	d15,[a12]54
.L1081:
	addsc.a	a15,a12,d15,#0
.L1082:
	mov	d15,#0
.L1083:
	st.b	[a15]190,d15
.L1084:
	ld.h	d15,[a12]54
.L1085:
	add	d15,#-1
	st.h	[a12]54,d15
.L1086:
	ld.h	d15,[a12]52
.L1087:
	add	d15,#-1
	st.h	[a12]52,d15
.L1088:
	mov	d15,#1
	st.b	[a12]56,d15
.L1089:
	j	.L60
.L36:
	mov	d15,#1
	j	.L61
.L45:
	ld.bu	d15,[a12]319
.L1090:
	jne	d15,#1,.L62
.L1091:
	mov	d15,#2
	j	.L63
.L44:
.L43:
.L42:
.L41:
	ld.bu	d15,[a12]319
.L1092:
	jne	d15,#2,.L64
.L1093:
	mov	d5,#0
	j	.L65
.L40:
.L39:
.L38:
.L37:
	ld.bu	d15,[a12]319
.L1094:
	jne	d15,#2,.L66
.L1095:
	st.b	[a12]320,d4
.L1096:
	mov	d15,#3
	j	.L67
.L46:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   458  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   459                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER)
	ld.bu	d15,[a12]319
.L1097:
	jne	d15,#3,.L68
.L1098:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   460                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   461                      /* Process home/delete/end */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   462                      Ifx_Shell_cmdEscapeProcess(shell, shell->locals.escBracketNum, '~');
	mov	d5,#126
	ld.b	d4,[a12]320
.L65:
	mov.aa	a4,a12
.L808:
	call	Ifx_Shell_cmdEscapeProcess
.L809:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   463  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   464                      /* End of escape sequence */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   465                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
	mov	d15,#0
.L67:
.L63:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   466                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   467                  else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   468                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   469                      NormalKeyPress = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   470                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   471  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   472                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   473  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   474              /* Normal character - add to command string */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   475              default:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   476                  NormalKeyPress = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   477                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   478              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   479  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   480              IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length >= Cmd->cursor);    /* Sanity check */
.L61:
	st.b	[a12]319,d15
.L1099:
	j	.L69
.L68:
.L66:
.L64:
.L62:
.L47:
	mov	d11,#1
.L69:
.L60:
.L54:
.L53:
	fcall	.cocofun_41
.L807:
	jge	d15,d0,.L70
	fcall	.cocofun_36
	st.a	[a10],a15
	movh.a	a15,#@his(.18.str)
	lea	a15,[a15]@los(.18.str)
	st.a	[a10]4,a15
	fcall	.cocofun_33
	st.a	[a10]8,a15
	mov	d15,#480
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999002___func__)
	lea	a15,[a15]@los(_999002___func__)
	st.a	[a10]16,a15
	fcall	.cocofun_34
	call	printf
.L70:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   481  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   482              /* If this was a normal key press (not part of an escape sequence),
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   483               * add it to the command string */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   484              if (NormalKeyPress != FALSE)
	jeq	d11,#0,.L71
.L1100:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   485              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   486                  /* Ensure state machine is reset */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   487                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
	mov	d15,#0
	st.b	[a12]319,d15
.L1101:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   488  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   489                  /* If not filled buffer, add in this character */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   490                  if (Cmd->length < (IFX_SHELL_CMD_LINE_SIZE - 1))
	ld.h	d0,[a12]54
.L1102:
	mov	d15,#127
.L1103:
	jge	d0,d15,.L72
.L1104:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   491                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   492                      /* Command line has been modified */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   493                      Cmd->historyAdd = TRUE;
	mov	d15,#1
	st.b	[a12]56,d15
.L1105:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   494  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   495                      /* Copy into command line */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   496                      cmdStr[Cmd->cursor] = inputbuffer[i];
	ld.a	a15,[a10]24
.L811:
	ld.h	d15,[a12]52
.L1106:
	addsc.a	a2,a13,d15,#0
.L1107:
	ld.bu	d15,[a15]
.L1108:
	st.b	[a2],d15
.L1109:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   497                      Cmd->cursor++;
	ld.h	d15,[a12]52
.L1110:
	add	d15,#1
	st.h	[a12]52,d15
.L810:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   498  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   499                      /* Update length of buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   500                      Cmd->length = __max(Cmd->length, Cmd->cursor);
	fcall	.cocofun_41
.L812:
	max	d15,d15,d0
	st.h	[a12]54,d15
.L1111:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   501  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   502                      if (shell->control.echo != 0)
	ld.bu	d15,[a12]4
.L1112:
	jz.t	d15:3,.L73
.L1113:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   503                      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   504                          /* echo character to shell output if requested */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   505                          shell->locals.echo[0] = inputbuffer[i];
	ld.bu	d15,[a15]
.L1114:
	st.b	[a12]60,d15
.L1115:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   506                          IfxStdIf_DPipe_print(shell->io, shell->locals.echo);
	lea	a5,[a12]60
.L1116:
	ld.a	a4,[a12]
.L1117:
	call	IfxStdIf_DPipe_print
.L1118:
	j	.L74
.L72:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   507                      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   508                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   509                  else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   510                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   511                      /* Line too long - ignore further characters */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   512                      Cmd->historyAdd = FALSE;    /* Invalid command line */
	st.b	[a12]56,d10
.L74:
.L73:
.L71:
	ld.a	a15,[a10]24
.L814:
	add	d9,#1
.L813:
	extr	d9,d9,#0,#16
.L815:
	add.a	a15,#1
	st.a	[a10]24,a15
.L31:
	jlt	d9,d8,.L32

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   513                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   514              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   515          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   516      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   517  }
.L27:
	ret
.L524:
	
__Ifx_Shell_process_function_end:
	.size	Ifx_Shell_process,__Ifx_Shell_process_function_end-Ifx_Shell_process
.L346:
	; End of function
	
	.sdecl	'.text.Ifx_Shell..cocofun_41',code,cluster('.cocofun_41')
	.sect	'.text.Ifx_Shell..cocofun_41'
	.align	2
; Function .cocofun_41
.L258:
.cocofun_41:	.type	func
; Function body .cocofun_41, coco_iter:1
	ld.h	d15,[a12]54
.L1499:
	ld.h	d0,[a12]52
.L1500:
	fret
.L496:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_40',code,cluster('.cocofun_40')
	.sect	'.text.Ifx_Shell..cocofun_40'
	.align	2
; Function .cocofun_40
.L260:
.cocofun_40:	.type	func
; Function body .cocofun_40, coco_iter:0
	fcall	.cocofun_41
.L806:
	sub	d15,d0
.L1494:
	add	d15,#1
	fret
.L491:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_39',code,cluster('.cocofun_39')
	.sect	'.text.Ifx_Shell..cocofun_39'
	.align	2
; Function .cocofun_39
.L262:
.cocofun_39:	.type	func
; Function body .cocofun_39, coco_iter:0
	ld.a	a4,[a12]
.L1488:
	lea	a5,.16.str
.L1489:
	fret
.L486:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_36',code,cluster('.cocofun_36')
	.sect	'.text.Ifx_Shell..cocofun_36'
	.align	2
; Function .cocofun_36
.L264:
.cocofun_36:	.type	func
; Function body .cocofun_36, coco_iter:0
	movh.a	a15,#@his(verboseLevelStr+8)
	ld.a	a15,[a15]@los(verboseLevelStr+8)
.L1472:
	fret
.L471:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_35',code,cluster('.cocofun_35')
	.sect	'.text.Ifx_Shell..cocofun_35'
	.align	2
; Function .cocofun_35
.L266:
.cocofun_35:	.type	func
; Function body .cocofun_35, coco_iter:0
	ld.a	a4,[a12]
.L1466:
	lea	a5,.15.str
.L1467:
	fret
.L466:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_34',code,cluster('.cocofun_34')
	.sect	'.text.Ifx_Shell..cocofun_34'
	.align	2
; Function .cocofun_34
.L268:
.cocofun_34:	.type	func
; Function body .cocofun_34, coco_iter:0
	movh.a	a4,#@his(.1.str)
.L901:
	lea	a4,[a4]@los(.1.str)
.L1461:
	fret
.L461:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_33',code,cluster('.cocofun_33')
	.sect	'.text.Ifx_Shell..cocofun_33'
	.align	2
; Function .cocofun_33
.L270:
.cocofun_33:	.type	func
; Function body .cocofun_33, coco_iter:0
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
.L1456:
	fret
.L456:
	; End of function
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_deinit',code,cluster('Ifx_Shell_deinit')
	.sect	'.text.Ifx_Shell.Ifx_Shell_deinit'
	.align	2
	
	.global	Ifx_Shell_deinit

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   518  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   519  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   520  void Ifx_Shell_deinit(Ifx_Shell *shell)
; Function Ifx_Shell_deinit
.L272:
Ifx_Shell_deinit:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   521  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   522      (void)shell;                /* ignore compiler warning; */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   523      // tbd free necessary memory
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   524  }
	ret
.L512:
	
__Ifx_Shell_deinit_function_end:
	.size	Ifx_Shell_deinit,__Ifx_Shell_deinit_function_end-Ifx_Shell_deinit
.L331:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace',code,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace'
	.align	2
	
	.global	Ifx_Shell_skipWhitespace

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   525  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   526  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   527  pchar Ifx_Shell_skipWhitespace(pchar args)
; Function Ifx_Shell_skipWhitespace
.L274:
Ifx_Shell_skipWhitespace:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   528  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   529      if (args != NULL_PTR)
	jz.a	a4,.L75
.L1123:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   530      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   531          while ((*args != IFX_SHELL_NULL_CHAR) && (ISSPACE(*args)))
	j	.L76
.L77:
.L78:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   532          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   533              args = &args[1];
	add.a	a4,#1
.L76:
	ld.b	d0,[a4]0
.L1124:
	jeq	d0,#0,.L79
.L1125:
	mov	d15,#32
	jeq	d15,d0,.L78
	mov	d15,#9
	jeq	d15,d0,.L77
.L79:
.L75:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   534          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   535      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   536  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   537      return args;
	mov.aa	a2,a4
.L816:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   538  }
	ret
.L557:
	
__Ifx_Shell_skipWhitespace_function_end:
	.size	Ifx_Shell_skipWhitespace,__Ifx_Shell_skipWhitespace_function_end-Ifx_Shell_skipWhitespace
.L351:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchToken',code,cluster('Ifx_Shell_matchToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchToken'
	.align	2
	
	.global	Ifx_Shell_matchToken

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   539  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   540  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   541  boolean Ifx_Shell_matchToken(pchar *argsPtr, pchar token)
; Function Ifx_Shell_matchToken
.L276:
Ifx_Shell_matchToken:	.type	func
	lea	a10,[a10]-256
.L817:
	mov.aa	a15,a4
.L820:
	mov.aa	a12,a5
.L821:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   542  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   543      pchar   savedArguments = *argsPtr;
	ld.a	a13,[a15]
.L822:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   544      char    buffer[256];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   545      boolean result         = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   546  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   547      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) != FALSE)
	mov	d15,#0
	mov.aa	a5,a10
.L819:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L818:
	jeq	d2,#0,.L81
.L1130:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   548      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   549          if (strcmp(token, buffer) == 0)
	mov.aa	a5,a10
	mov.aa	a4,a12
.L823:
	call	strcmp
.L824:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   550          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   551              result = TRUE;
	sel	d15,d2,d15,#1
.L81:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   552          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   553      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   554  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   555      if (result == FALSE)
	jne	d15,#0,.L83
.L1131:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   556      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   557          // No match: don't advance pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   558          *argsPtr = savedArguments;
	st.a	[a15],a13
.L83:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   559      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   560  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   561      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   562  }
	mov	d2,d15
	ret
.L559:
	
__Ifx_Shell_matchToken_function_end:
	.size	Ifx_Shell_matchToken,__Ifx_Shell_matchToken_function_end-Ifx_Shell_matchToken
.L356:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchCommand',code,cluster('Ifx_Shell_matchCommand')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchCommand'
	.align	2
	

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   563  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   564  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   565  static boolean Ifx_Shell_matchCommand(pchar *argsPtr, pchar *match)
; Function Ifx_Shell_matchCommand
.L278:
Ifx_Shell_matchCommand:	.type	func
	lea	a10,[a10]-512
.L825:
	mov.aa	a15,a4
.L828:
	mov.aa	a12,a5
.L829:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   566  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   567      boolean result         = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   568      pchar   savedArguments = *argsPtr;
	mov	d15,#0
	ld.a	a13,[a15]
.L830:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   569      pchar   savedMatch     = *match;
	ld.a	a14,[a12]
.L831:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   570      char    buffer0[256];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   571      char    buffer1[256];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   572  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   573      if ((Ifx_Shell_parseToken(argsPtr, buffer0, Ifx_COUNTOF(buffer0)) != FALSE)
	mov.aa	a5,a10
.L827:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L826:
	jeq	d2,#0,.L85
.L1440:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   574          && (Ifx_Shell_parseToken(match, buffer1, Ifx_COUNTOF(buffer1)) != FALSE))
	lea	a5,[a10]256
.L1441:
	mov.aa	a4,a12
.L832:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L833:
	jeq	d2,#0,.L86
.L1442:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   575      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   576          if (strcmp(buffer1, buffer0) == 0)
	lea	a4,[a10]256
.L1443:
	mov.aa	a5,a10
	call	strcmp
.L1444:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   577          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   578              result = TRUE;
	sel	d15,d2,d15,#1
.L86:
.L85:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   579          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   580      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   581  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   582      if (result == FALSE)
	jne	d15,#0,.L88
.L1445:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   583      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   584          // No match: don't advance pointer
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   585          *argsPtr = savedArguments;
	st.a	[a15],a13
.L1446:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   586          *match   = savedMatch;
	st.a	[a12],a14
.L88:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   587      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   588  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   589      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   590  }
	mov	d2,d15
	ret
.L721:
	
__Ifx_Shell_matchCommand_function_end:
	.size	Ifx_Shell_matchCommand,__Ifx_Shell_matchCommand_function_end-Ifx_Shell_matchCommand
.L446:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseToken',code,cluster('Ifx_Shell_parseToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseToken'
	.align	2
	
	.global	Ifx_Shell_parseToken

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   591  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   592  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   593  boolean Ifx_Shell_parseToken(pchar *argsPtr, char *tokenBuffer, int bufferLength)
; Function Ifx_Shell_parseToken
.L280:
Ifx_Shell_parseToken:	.type	func
	mov	d8,d4
	mov.aa	a12,a4
.L836:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   594  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   595      int   mindex = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   596      pchar args   = Ifx_Shell_skipWhitespace(*argsPtr);
	mov	d9,#0
	ld.a	a4,[a12]
.L834:
	mov.aa	a15,a5
.L838:
	call	Ifx_Shell_skipWhitespace
.L835:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   597  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   598      tokenBuffer[0] = IFX_SHELL_NULL_CHAR;
	mov	d15,#0
	st.b	[a15],d15
.L1136:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   599  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   600      if (args == NULL_PTR)
	jz.a	a2,.L90
.L1137:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   601      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   602          return FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   603      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   604  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   605      if (*args == '\"')
	ld.b	d15,[a2]0
.L1138:
	mov	d0,#34
.L1139:
	jne	d15,d0,.L91
.L1140:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   606      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   607          args = &args[1];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   608  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   609          while ((*args != IFX_SHELL_NULL_CHAR) && (*args != '\"'))
	mov.aa	a4,a15
	j	.L92
.L93:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   610          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   611              if (mindex < bufferLength)
	jge	d9,d8,.L94
.L1141:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   612              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   613                  tokenBuffer[mindex] = *args;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   614                  mindex++;
	add	d9,#1
	ld.bu	d15,[a2]
.L1142:
	st.b	[a4+],d15
.L94:
.L92:
	ld.b	d0,[+a2]1
.L1143:
	jeq	d0,#0,.L95
.L1144:
	mov	d15,#34
.L1145:
	jne	d15,d0,.L93
.L95:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   615              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   616  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   617              args = &args[1];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   618          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   619  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   620          // error if no closing quote
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   621          if (*args != '\"')
	mov	d15,#34
.L1146:
	jne	d15,d0,.L96
.L1147:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   622          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   623              return FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   624          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   625  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   626          args = &args[1];
	add.a	a2,#1
.L1148:
	j	.L97
.L91:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   627      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   628      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   629      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   630          // don't allow unquoted empty tokens
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   631          if (*args == IFX_SHELL_NULL_CHAR)
	jne	d15,#0,.L98

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   632          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   633              return FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   634          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   635  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   636          while ((*args != IFX_SHELL_NULL_CHAR) && (!ISSPACE(*args)))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   637          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   638              if (mindex < bufferLength)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   639              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   640                  tokenBuffer[mindex] = *args;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   641                  mindex++;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   642              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   643  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   644              args = &args[1];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   645          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   646      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   647  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   648      // make sure string is zero terminated
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   649      if (bufferLength > 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   650      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   651          tokenBuffer[__min(mindex, bufferLength - 1)] = IFX_SHELL_NULL_CHAR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   652      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   653  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   654      *argsPtr = Ifx_Shell_skipWhitespace(args);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   655  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   656      return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   657  }
.L96:
.L90:
	mov	d2,#0
	ret
.L98:
	mov.aa	a4,a15
	j	.L100
.L101:
	jge	d9,d8,.L102
.L1149:
	add	d9,#1
	ld.bu	d15,[a2]
.L1150:
	st.b	[a4+],d15
.L102:
	add.a	a2,#1
.L100:
	ld.b	d0,[a2]0
.L1151:
	jeq	d0,#0,.L103
.L1152:
	mov	d15,#32
	jeq	d15,d0,.L104
	mov	d15,#9
	jne	d15,d0,.L101
.L104:
.L103:
.L97:
	jlt	d8,#1,.L105
.L1153:
	add	d8,#-1
.L837:
	min	d15,d9,d8
.L1154:
	addsc.a	a15,a15,d15,#0
.L839:
	mov	d15,#0
.L1155:
	st.b	[a15],d15
.L105:
	mov.aa	a4,a2
.L841:
	call	Ifx_Shell_skipWhitespace
.L840:
	st.a	[a12],a2
.L1156:
	mov	d2,#1
	ret
.L567:
	
__Ifx_Shell_parseToken_function_end:
	.size	Ifx_Shell_parseToken,__Ifx_Shell_parseToken_function_end-Ifx_Shell_parseToken
.L361:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseAddress',code,cluster('Ifx_Shell_parseAddress')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseAddress'
	.align	2
	
	.global	Ifx_Shell_parseAddress

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   658  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   659  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   660  boolean Ifx_Shell_parseAddress(pchar *argsPtr, void **address)
; Function Ifx_Shell_parseAddress
.L282:
Ifx_Shell_parseAddress:	.type	func
	sub.a	a10,#40
.L842:
	mov.aa	a15,a5
.L845:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   661  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   662      char    buffer[32];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   663      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   664  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   665      *address = 0;
	mov.a	a2,#0
.L1161:
	st.a	[a15],a2
.L1162:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   666  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   667      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
	lea	a5,[a10]4
.L843:
	mov	d4,#32
	call	Ifx_Shell_parseToken
.L844:
	jne	d2,#0,.L107
.L1163:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   668      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   669          result = FALSE;
	mov	d8,#0
	j	.L108
.L107:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   670      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   671      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   672      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   673          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%x ", (unsigned int *)address) == 1);
	ld.bu	d15,[a10]4
.L1164:
	mov	d8,#0
.L846:
	jeq	d15,#0,.L109
.L1165:
	st.a	[a10],a15
.L1166:
	lea	a4,[a10]4
.L1167:
	lea	a5,.19.str
	call	sscanf
.L1168:
	eq	d15,d2,#1
.L1169:
	cmov	d8,d15,#1
.L109:
.L108:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   674      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   675  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   676      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   677  }
	mov	d2,d8
	ret
.L573:
	
__Ifx_Shell_parseAddress_function_end:
	.size	Ifx_Shell_parseAddress,__Ifx_Shell_parseAddress_function_end-Ifx_Shell_parseAddress
.L366:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt32',code,cluster('Ifx_Shell_parseSInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt32'
	.align	2
	
	.global	Ifx_Shell_parseSInt32

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   678  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   679  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   680  boolean Ifx_Shell_parseSInt32(pchar *argsPtr, sint32 *value)
; Function Ifx_Shell_parseSInt32
.L284:
Ifx_Shell_parseSInt32:	.type	func
	sub.a	a10,#8
.L847:
	mov.aa	a15,a5
.L850:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   681  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   682      sint64  value64;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   683      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   684  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   685      *value = 0;
	mov	d15,#0
	st.w	[a15],d15
.L1174:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   686  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   687      if (Ifx_Shell_parseSInt64(argsPtr, &value64) == FALSE)
	mov.aa	a5,a10
.L849:
	call	Ifx_Shell_parseSInt64
.L848:
	jne	d2,#0,.L112
.L1175:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   688      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   689          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   690      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   691      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   692      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   693          *value = (sint32)value64;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   694          result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   695      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   696  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   697      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   698  }
	ret
.L112:
	ld.d	e0,[a10]0
.L1176:
	st.w	[a15],d0
.L1177:
	mov	d2,#1
	ret
.L580:
	
__Ifx_Shell_parseSInt32_function_end:
	.size	Ifx_Shell_parseSInt32,__Ifx_Shell_parseSInt32_function_end-Ifx_Shell_parseSInt32
.L371:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt32',code,cluster('Ifx_Shell_parseUInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt32'
	.align	2
	
	.global	Ifx_Shell_parseUInt32

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   699  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   700  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   701  boolean Ifx_Shell_parseUInt32(pchar *argsPtr, uint32 *value, boolean hex)
; Function Ifx_Shell_parseUInt32
.L286:
Ifx_Shell_parseUInt32:	.type	func
	sub.a	a10,#8
.L851:
	mov.aa	a15,a5
.L854:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   702  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   703      uint64  value64;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   704      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   705  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   706      *value = 0;
	mov	d15,#0
	st.w	[a15],d15
.L1182:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   707  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   708      if (Ifx_Shell_parseUInt64(argsPtr, &value64, hex) == FALSE)
	mov.aa	a5,a10
.L853:
	call	Ifx_Shell_parseUInt64
.L852:
	jne	d2,#0,.L115
.L1183:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   709      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   710          result = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   711      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   712      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   713      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   714          *value = (uint32)value64;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   715          result = TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   716      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   717  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   718      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   719  }
	ret
.L115:
	ld.d	e0,[a10]0
.L1184:
	st.w	[a15],d0
.L1185:
	mov	d2,#1
	ret
.L587:
	
__Ifx_Shell_parseUInt32_function_end:
	.size	Ifx_Shell_parseUInt32,__Ifx_Shell_parseUInt32_function_end-Ifx_Shell_parseUInt32
.L376:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt64',code,cluster('Ifx_Shell_parseSInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt64'
	.align	2
	
	.global	Ifx_Shell_parseSInt64

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   720  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   721  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   722  boolean Ifx_Shell_parseSInt64(pchar *argsPtr, sint64 *value)
; Function Ifx_Shell_parseSInt64
.L288:
Ifx_Shell_parseSInt64:	.type	func
	sub.a	a10,#72
.L855:
	mov.aa	a15,a5
.L858:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   723  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   724      char    buffer[64];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   725      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   726  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   727      *value = 0;
	mov	e0,#0
	st.d	[a15]0,e0
.L1190:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   728  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   729      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
	lea	a5,[a10]4
.L857:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L856:
	jne	d2,#0,.L118
.L1191:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   730      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   731          result = FALSE;
	mov	d8,#0
	j	.L119
.L118:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   732      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   733      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   734      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   735          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, IFX_SHELL_LLD, value) == 1);
	ld.bu	d15,[a10]4
.L1192:
	mov	d8,#0
.L859:
	jeq	d15,#0,.L120
.L1193:
	st.a	[a10],a15
.L1194:
	lea	a4,[a10]4
.L1195:
	lea	a5,.20.str
	call	sscanf
.L1196:
	eq	d15,d2,#1
.L1197:
	cmov	d8,d15,#1
.L120:
.L119:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   736      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   737  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   738      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   739  }
	mov	d2,d8
	ret
.L595:
	
__Ifx_Shell_parseSInt64_function_end:
	.size	Ifx_Shell_parseSInt64,__Ifx_Shell_parseSInt64_function_end-Ifx_Shell_parseSInt64
.L381:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt64',code,cluster('Ifx_Shell_parseUInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt64'
	.align	2
	
	.global	Ifx_Shell_parseUInt64

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   740  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   741  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   742  boolean Ifx_Shell_parseUInt64(pchar *argsPtr, uint64 *value, boolean hex)
; Function Ifx_Shell_parseUInt64
.L290:
Ifx_Shell_parseUInt64:	.type	func
	mov	d8,d4
	sub.a	a10,#72
.L860:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   743  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   744      char    buffer[64];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   745      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   746  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   747      *value = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   748  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   749      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
	mov	d4,#64
	mov.aa	a15,a5
.L862:
	mov	e0,#0
	st.d	[a15]0,e0
.L1202:
	lea	a5,[a10]4
.L863:
	call	Ifx_Shell_parseToken
.L861:
	jne	d2,#0,.L123
.L1203:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   750      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   751          result = FALSE;
	mov	d8,#0
	j	.L124
.L123:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   752      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   753      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   754      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   755          char *bufferPointer = buffer;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   756  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   757          if ((buffer[0] == '0') && (buffer[1] == 'x'))
	mov	d15,#48
	ld.b	d0,[a10]4
.L1204:
	lea	a4,[a10]4
.L865:
	jne	d15,d0,.L125
.L1205:
	ld.b	d0,[a10]5
.L1206:
	mov	d15,#120
.L1207:
	jne	d15,d0,.L126
.L1208:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   758          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   759              bufferPointer = &bufferPointer[2];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   760              hex           = TRUE;
	mov	d8,#1
	lea	a4,[a10]6
.L126:
.L125:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   761          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   762  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   763          if (hex != FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   764          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   765              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLX, value) == 1);
	ld.b	d15,[a4]0
.L1209:
	jeq	d8,#0,.L127
.L1210:
	mov	d8,#0
.L864:
	jeq	d15,#0,.L130
.L1211:
	st.a	[a10],a15
.L1212:
	lea	a5,.21.str
	call	sscanf
.L866:
	eq	d15,d2,#1
.L1213:
	cmov	d8,d15,#1
	j	.L130
.L127:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   766          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   767          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   768          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   769              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLU, value) == 1);
	jeq	d15,#0,.L131
.L1214:
	st.a	[a10],a15
.L1215:
	lea	a5,.22.str
	call	sscanf
.L867:
	eq	d15,d2,#1
.L868:
	cmov	d8,d15,#1
.L131:
.L130:
.L124:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   770          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   771      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   772  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   773      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   774  }
	mov	d2,d8
	ret
.L602:
	
__Ifx_Shell_parseUInt64_function_end:
	.size	Ifx_Shell_parseUInt64,__Ifx_Shell_parseUInt64_function_end-Ifx_Shell_parseUInt64
.L386:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat64',code,cluster('Ifx_Shell_parseFloat64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat64'
	.align	2
	
	.global	Ifx_Shell_parseFloat64

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   775  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   776  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   777  boolean Ifx_Shell_parseFloat64(pchar *argsPtr, float64 *value)
; Function Ifx_Shell_parseFloat64
.L292:
Ifx_Shell_parseFloat64:	.type	func
	sub.a	a10,#72
.L869:
	mov.aa	a15,a5
.L872:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   778  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   779      char    buffer[64];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   780      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   781  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   782      *value = 0;
	mov	d15,#0
	st.w	[a15],d15
.L1220:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   783  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   784      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
	lea	a5,[a10]4
.L871:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L870:
	jne	d2,#0,.L134
.L1221:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   785      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   786          result = FALSE;
	mov	d8,#0
	j	.L135
.L134:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   787      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   788      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   789      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   790          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%lf ", value) == 1);
	ld.bu	d15,[a10]4
.L1222:
	mov	d8,#0
.L873:
	jeq	d15,#0,.L136
.L1223:
	st.a	[a10],a15
.L1224:
	lea	a4,[a10]4
.L1225:
	lea	a5,.23.str
	call	sscanf
.L1226:
	eq	d15,d2,#1
.L1227:
	cmov	d8,d15,#1
.L136:
.L135:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   791      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   792  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   793      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   794  }
	mov	d2,d8
	ret
.L610:
	
__Ifx_Shell_parseFloat64_function_end:
	.size	Ifx_Shell_parseFloat64,__Ifx_Shell_parseFloat64_function_end-Ifx_Shell_parseFloat64
.L391:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat32',code,cluster('Ifx_Shell_parseFloat32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat32'
	.align	2
	
	.global	Ifx_Shell_parseFloat32

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   795  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   796  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   797  boolean Ifx_Shell_parseFloat32(pchar *argsPtr, float32 *value)
; Function Ifx_Shell_parseFloat32
.L294:
Ifx_Shell_parseFloat32:	.type	func
	sub.a	a10,#72
.L874:
	mov.aa	a15,a5
.L877:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   798  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   799      char    buffer[64];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   800      boolean result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   801  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   802      *value = 0;
	mov	d15,#0
	st.w	[a15],d15
.L1232:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   803  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   804      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
	lea	a5,[a10]4
.L876:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L875:
	jne	d2,#0,.L139
.L1233:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   805      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   806          result = FALSE;
	mov	d8,#0
	j	.L140
.L139:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   807      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   808      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   809      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   810          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%f ", value) == 1);
	ld.bu	d15,[a10]4
.L1234:
	mov	d8,#0
.L878:
	jeq	d15,#0,.L141
.L1235:
	st.a	[a10],a15
.L1236:
	lea	a4,[a10]4
.L1237:
	lea	a5,.24.str
	call	sscanf
.L1238:
	eq	d15,d2,#1
.L1239:
	cmov	d8,d15,#1
.L141:
.L140:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   811      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   812  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   813      return result;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   814  }
	mov	d2,d8
	ret
.L616:
	
__Ifx_Shell_parseFloat32_function_end:
	.size	Ifx_Shell_parseFloat32,__Ifx_Shell_parseFloat32_function_end-Ifx_Shell_parseFloat32
.L396:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandFind',code,cluster('Ifx_Shell_commandFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandFind'
	.align	2
	
	.global	Ifx_Shell_commandFind

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   815  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   816  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   817  const Ifx_Shell_Command *Ifx_Shell_commandFind(const Ifx_Shell_Command *commandList, pchar commandLine, pchar *args)
; Function Ifx_Shell_commandFind
.L296:
Ifx_Shell_commandFind:	.type	func
	lea	a10,[a10]-264
.L879:
	mov.aa	a15,a5
.L880:
	mov.aa	a12,a6
.L882:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   818  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   819      const Ifx_Shell_Command *command = commandList;
	mov.aa	a13,a4
.L883:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   820      const Ifx_Shell_Command *result  = NULL_PTR;
	mov.a	a14,#0
.L884:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   821  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   822      while (command->commandLine != NULL_PTR)
	j	.L144
.L145:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   823      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   824          pchar   commandTemp     = (pchar)command->commandLine;
	ld.a	a2,[a13]
.L1244:
	st.a	[a10],a2
.L1245:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   825          pchar   commandLineTemp = commandLine;
	st.a	[a10]4,a15
.L1246:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   826          char    buffer[256];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   827          boolean commandFound    = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   828  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   829          while (Ifx_Shell_matchCommand(&commandLineTemp, &commandTemp) != FALSE)
	mov	d15,#0
	j	.L146
.L147:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   830          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   831              commandFound = TRUE;
	mov	d15,#1
.L146:
	lea	a4,[a10]4
.L1247:
	mov.aa	a5,a10
	call	Ifx_Shell_matchCommand
.L1248:
	jne	d2,#0,.L147
.L1249:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   832          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   833  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   834          if ((commandFound != FALSE) && (Ifx_Shell_parseToken(&commandTemp, buffer, Ifx_COUNTOF(buffer)) == FALSE))
	jeq	d15,#0,.L148
.L1250:
	mov.aa	a4,a10
.L1251:
	lea	a5,[a10]8
.L1252:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L1253:
	jne	d2,#0,.L149
.L1254:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   835          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   836              *args  = commandLineTemp;
	ld.a	a15,[a10]4
.L881:
	st.a	[a12],a15
.L1255:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   837              result = command;
	mov.aa	a14,a13
.L1256:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   838              break;
	j	.L150
.L149:
.L148:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   839          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   840  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   841          command = &command[1];
	lea	a13,[a13]16
.L144:
	ld.w	d15,[a13]
.L1257:
	jne	d15,#0,.L145

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   842      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   843  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   844      return result;
.L150:
	mov.aa	a2,a14
.L885:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   845  }
	ret
.L623:
	
__Ifx_Shell_commandFind_function_end:
	.size	Ifx_Shell_commandFind,__Ifx_Shell_commandFind_function_end-Ifx_Shell_commandFind
.L401:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandListFind',code,cluster('Ifx_Shell_commandListFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandListFind'
	.align	2
	
	.global	Ifx_Shell_commandListFind

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   846  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   847  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   848  const Ifx_Shell_Command *Ifx_Shell_commandListFind(Ifx_Shell *shell, pchar commandLine, pchar *args)
; Function Ifx_Shell_commandListFind
.L298:
Ifx_Shell_commandListFind:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   849  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   850      int                      i;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   851      const Ifx_Shell_Command *shellCommand = NULL_PTR;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   852  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   853      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   854      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   855          if (shell->commandList[i] != NULL_PTR)
	ld.a	a4,[a4]324
.L886:
	mov.a	a2,#0
.L887:
	jz.a	a4,.L152
.L1451:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   856          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   857              shellCommand = Ifx_Shell_commandFind(shell->commandList[i], commandLine, args);
	j	Ifx_Shell_commandFind
.L152:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   858  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   859              if (shellCommand != NULL_PTR)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   860              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   861                  break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   862              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   863          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   864      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   865  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   866      return shellCommand;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   867  }
	ret
.L729:
	
__Ifx_Shell_commandListFind_function_end:
	.size	Ifx_Shell_commandListFind,__Ifx_Shell_commandListFind_function_end-Ifx_Shell_commandListFind
.L451:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_execute',code,cluster('Ifx_Shell_execute')
	.sect	'.text.Ifx_Shell.Ifx_Shell_execute'
	.align	2
	
	.global	Ifx_Shell_execute

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   868  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   869  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   870  void Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine)
; Function Ifx_Shell_execute
.L300:
Ifx_Shell_execute:	.type	func
	sub.a	a10,#8
.L888:
	mov.aa	a15,a4
.L890:
	mov.aa	a12,a5
.L891:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   871  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   872      pchar                    args         = NULL_PTR;
	mov.a	a2,#0
.L1310:
	st.a	[a10]4,a2
.L1311:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   873      const Ifx_Shell_Command *shellCommand = Ifx_Shell_commandListFind(shell, commandLine, &args);
	lea	a6,[a10]4
	call	Ifx_Shell_commandListFind
.L889:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   874  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   875      if (shellCommand != NULL_PTR)
	jz.a	a2,.L154
.L1312:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   876      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   877          if (shellCommand->call(args, shellCommand->data, shell->io) != FALSE)
	ld.a	a7,[a2]12
.L1313:
	ld.a	a4,[a10]4
.L1314:
	ld.a	a5,[a2]8
.L1315:
	ld.a	a6,[a15]
	calli	a7
.L892:
	jeq	d2,#0,.L155
.L1316:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   878          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   879              if (shell->control.sendResultCode != 0)
	ld.bu	d15,[a15]4
.L1317:
	jz.t	d15:2,.L156
.L1318:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   880              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   881                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_ok);
	mov	d4,#255
	j	.L157
.L155:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   882              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   883          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   884          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   885          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   886              if (shell->control.sendResultCode != 0)
	ld.bu	d15,[a15]4
.L1319:
	jz.t	d15:2,.L158
.L1320:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   887              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   888                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_nok);
	mov	d4,#129
	j	.L159
.L158:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   889              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   890              else if (shell->control.echoError != 0)
	jz.t	d15:4,.L160
.L1321:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   891              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   892                  IfxStdIf_DPipe_print(shell->io, "\r\nShell command error: %s" ENDL, commandLine);
	movh.a	a5,#@his(.25.str)
	lea	a5,[a5]@los(.25.str)
.L1322:
	j	.L161
.L154:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   893              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   894              else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   895              {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   896          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   897      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   898      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   899      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   900          if (commandLine[0] != IFX_SHELL_NULL_CHAR)
	ld.bu	d15,[a12]
.L1323:
	jeq	d15,#0,.L162
.L1324:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   901          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   902              if (shell->control.sendResultCode != 0)
	ld.bu	d15,[a15]4
.L1325:
	jz.t	d15:2,.L163
.L1326:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   903              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   904                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_unknown);
	mov	d4,#128
.L157:
.L159:
	mov.aa	a4,a15
.L893:
	j	Ifx_Shell_writeResult
.L163:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   905              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   906              else if (shell->control.echoError != 0)
	jz.t	d15:4,.L165
.L1327:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   907              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   908                  IfxStdIf_DPipe_print(shell->io, "\r\nUnknown command: %s" ENDL, commandLine);
	movh.a	a5,#@his(.26.str)
	lea	a5,[a5]@los(.26.str)
.L161:
	ld.a	a4,[a15]
.L1328:
	st.a	[a10],a12
.L1329:
	j	IfxStdIf_DPipe_print
.L165:
.L162:
.L160:
.L156:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   909              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   910              else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   911              {}
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   912          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   913      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   914  }
	ret
.L662:
	
__Ifx_Shell_execute_function_end:
	.size	Ifx_Shell_execute,__Ifx_Shell_execute_function_end-Ifx_Shell_execute
.L431:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess',code,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess'
	.align	2
	
	.global	Ifx_Shell_cmdEscapeProcess

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   915  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   916  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   917  /****************************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   918  /* Processes escape sequences, including handling command history.                      */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   919  /* The following escape sequences (prefix "ESC [") are supported:                       */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   920  /* A - up     B - down      C - right     D - left                                      */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   921  /* 1~ - HOME  2~ - INSERT   3~ - DELETE   4~ - END                                      */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   922  /*                                                                                      */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   923  /* Parameters:                                                                          */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   924  /*      EscapeChar1 - First character to follow ESC [                                   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   925  /*      EscapeChar2 - Second character following ESC [ , if applicable                  */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   926  /*                                                                                      */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   927  /****************************************************************************************/
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   928  void Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2)
; Function Ifx_Shell_cmdEscapeProcess
.L302:
Ifx_Shell_cmdEscapeProcess:	.type	func
	mov.aa	a12,a4
.L898:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   929  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   930      Ifx_Shell_CmdLine *Cmd    = NULL_PTR; /* Command line editing state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   931      char              *cmdStr = NULL_PTR; /* Cached pointer to command line being edited */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   932      sint32             i      = 0;        /* Loop variable */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   933  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   934      /* Validate parameters */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   935      boolean            result = (shell != NULL_PTR);
	mov	d9,d4
	mov.a	a2,#0
.L896:
	ne.a	d8,a12,a2
.L897:
	mov	d10,d5
	sub.a	a10,#24
.L894:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   936  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   937      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
	jne	d8,#0,.L166
.L1334:
	movh.a	a2,#@his(verboseLevelStr+8)
	ld.a	a2,[a2]@los(verboseLevelStr+8)
	st.a	[a10],a2
	movh.a	a15,#@his(.2.str)
	lea	a15,[a15]@los(.2.str)
	st.a	[a10]4,a15
	fcall	.cocofun_33
	st.a	[a10]8,a15
	mov	d15,#937
	st.w	[a10]12,d15
.L895:
	fcall	.cocofun_37
.L899:
	st.a	[a10]16,a15
	fcall	.cocofun_34
.L900:
	call	printf
.L166:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   938  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   939      if (result == FALSE)
	jeq	d8,#0,.L167
.L1335:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   940      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   941          return;                 /* ERROR CASE - no thread data available! */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   942      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   943  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   944      /* Cache command state and command line pointer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   945      Cmd    = &shell->cmd;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   946      cmdStr = Cmd->cmdStr;
	ld.a	a13,[a12]48
.L903:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   947  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   948      /* Validate command line state */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   949      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, cmdStr != NULL_PTR);
	jnz.a	a13,.L168
.L1336:
	fcall	.cocofun_36
	st.a	[a10],a15
	movh.a	a15,#@his(.27.str)
	lea	a15,[a15]@los(.27.str)
	st.a	[a10]4,a15
	fcall	.cocofun_33
	st.a	[a10]8,a15
	mov	d15,#949
	st.w	[a10]12,d15
.L902:
	fcall	.cocofun_37
.L904:
	st.a	[a10]16,a15
	fcall	.cocofun_34
	call	printf
.L168:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   950      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->cursor < IFX_SHELL_CMD_LINE_SIZE);
	ld.h	d0,[a12]52
	mov	d15,#128
	jlt	d0,d15,.L169
	fcall	.cocofun_36
	st.a	[a10],a15
	movh.a	a15,#@his(.28.str)
	lea	a15,[a15]@los(.28.str)
	st.a	[a10]4,a15
	fcall	.cocofun_33
	st.a	[a10]8,a15
	mov	d15,#950
	st.w	[a10]12,d15
.L905:
	fcall	.cocofun_37
.L906:
	st.a	[a10]16,a15
	fcall	.cocofun_34
	call	printf
.L169:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   951      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length < IFX_SHELL_CMD_LINE_SIZE);
	ld.h	d0,[a12]54
	mov	d15,#128
	jlt	d0,d15,.L170
	fcall	.cocofun_36
	st.a	[a10],a15
	movh.a	a15,#@his(.29.str)
	lea	a15,[a15]@los(.29.str)
	st.a	[a10]4,a15
	fcall	.cocofun_33
	st.a	[a10]8,a15
	mov	d15,#951
	st.w	[a10]12,d15
.L907:
	fcall	.cocofun_37
.L909:
	st.a	[a10]16,a15
	fcall	.cocofun_34
	call	printf
.L170:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   952  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   953      /* Switch on first character after ESC [ */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   954      switch (EscapeChar1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   955      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   956      case 'A':                  /* Up arrow */
	mov	d15,#65
	jeq	d15,d9,.L171
.L1337:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   957  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   958          if (Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   959          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   960              /* Not using list at the moment - take most recent item [0] */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   961              Cmd->historyItem = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   962          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   963          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   964          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   965              if (Cmd->historyItem < (IFX_SHELL_CMD_HISTORY_SIZE - 1))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   966              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   967                  /* If not already at oldest, go back one in list */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   968                  Cmd->historyItem++;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   969              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   970          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   971  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   972          /* Copy text into buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   973          strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_SHELL_CMD_LINE_SIZE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   974  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   975          /* echo to screen if requested */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   976          if (shell->control.echo != 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   977          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   978              IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   979              IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   980              IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   981              IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   982          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   983  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   984          Cmd->cursor     = (Ifx_SizeT)strlen(cmdStr); /* Store cursor position */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   985          Cmd->length     = Cmd->cursor;               /* Store command line length */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   986          Cmd->historyAdd = FALSE;                     /* Don't add back to history unless modified */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   987          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   988  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   989      case 'B':                                        /* Down arrow */
	mov	d15,#66
	jeq	d15,d9,.L172
.L1338:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   990  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   991          if ((Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM) || (Cmd->historyItem == 0))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   992          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   993              /* Not using list at the moment, or have dropped off the end - just clear command line */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   994              if (shell->control.echo != 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   995              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   996                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)       /* Move cursor back to start */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   997                  IFX_SHELL_WRITE_SPACES(Cmd->length)           /* Overwrite text with spaces */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   998                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)       /* Move cursor back to start */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	   999              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1000  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1001              Cmd->length      = 0;                             /* Reset command line length */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1002              Cmd->cursor      = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1003              Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM; /* Ensure we are not using list */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1004          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1005          else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1006          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1007              /* Within list - move to more recent entry */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1008              Cmd->historyItem--;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1009  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1010              /* Copy text into buffer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1011              strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_SHELL_CMD_LINE_SIZE);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1012  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1013              if (shell->control.echo != 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1014              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1015                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1016                  IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1017                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1018                  IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1019              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1020  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1021              Cmd->cursor = (Ifx_SizeT)strlen(cmdStr);     /* Store cursor position */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1022              Cmd->length = Cmd->cursor;                   /* Store command line length */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1023          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1024  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1025          Cmd->historyAdd = FALSE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1026          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1027  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1028      case 'C':                  /* Right arrow */
	mov	d15,#67
	jeq	d15,d9,.L173
.L1339:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1029  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1030          if (Cmd->cursor < Cmd->length)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1031          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1032              /* Move cursor one place to right */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1033              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1034          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1035  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1036          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1037  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1038      case 'D':                  /* Left arrow */
	mov	d15,#68
	jeq	d15,d9,.L174
	j	.L175
.L171:
	ld.h	d15,[a12]58
.L1340:
	jne	d15,#-1,.L176
.L1341:
	mov	d15,#0
	j	.L177
.L176:
	mov	d0,#9
.L1342:
	jge	d15,d0,.L178
.L1343:
	add	d15,#1
.L177:
	st.h	[a12]58,d15
.L178:
	fcall	.cocofun_38
.L910:
	call	strncpy
.L911:
	ld.bu	d15,[a12]4
.L1344:
	jz.t	d15:3,.L179
.L678:
	mov	d15,#0
	j	.L180
.L181:
	fcall	.cocofun_35
.L912:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L180:
	ld.h	d0,[a12]52
	jlt	d15,d0,.L181
.L679:
	mov	d15,#0
	j	.L182
.L183:
	ld.a	a4,[a12]
	lea	a5,.17.str
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L182:
	ld.h	d0,[a12]54
	jlt	d15,d0,.L183
.L681:
	mov	d15,#0
	j	.L184
.L185:
	fcall	.cocofun_35
.L913:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L184:
	ld.h	d0,[a12]54
	jlt	d15,d0,.L185
.L683:
	j	.L186
.L172:
	ld.h	d15,[a12]58
.L1345:
	jeq	d15,#-1,.L187
.L1346:
	jne	d15,#0,.L188
.L187:
	ld.bu	d15,[a12]4
.L1347:
	jz.t	d15:3,.L189
.L685:
	mov	d15,#0
	j	.L190
.L191:
	fcall	.cocofun_35
.L914:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L190:
	ld.h	d0,[a12]52
	jlt	d15,d0,.L191
.L686:
	mov	d15,#0
	j	.L192
.L193:
	ld.a	a4,[a12]
	lea	a5,.17.str
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L192:
	ld.h	d0,[a12]54
	jlt	d15,d0,.L193
.L688:
	mov	d15,#0
	j	.L194
.L195:
	fcall	.cocofun_35
.L915:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L194:
	ld.h	d0,[a12]54
	jlt	d15,d0,.L195
.L189:
	mov	d15,#0
	st.h	[a12]54,d15
.L1348:
	st.h	[a12]52,d15
.L1349:
	mov	d15,#-1
	st.h	[a12]58,d15
.L1350:
	j	.L196
.L188:
	add	d15,#-1
	st.h	[a12]58,d15
.L916:
	fcall	.cocofun_38
.L917:
	call	strncpy
.L918:
	ld.bu	d15,[a12]4
.L1351:
	jz.t	d15:3,.L197
.L691:
	mov	d15,#0
	j	.L198
.L199:
	fcall	.cocofun_35
.L919:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L198:
	ld.h	d0,[a12]52
	jlt	d15,d0,.L199
.L692:
	mov	d15,#0
	j	.L200
.L201:
	ld.a	a4,[a12]
	lea	a5,.17.str
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L200:
	ld.h	d0,[a12]54
	jlt	d15,d0,.L201
.L694:
	mov	d15,#0
	j	.L202
.L203:
	fcall	.cocofun_35
.L920:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L202:
	ld.h	d0,[a12]54
	jlt	d15,d0,.L203

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1039  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1040          if (Cmd->cursor > 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1041          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1042              /* Move cursor one place to left */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1043              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "\b")) Cmd->cursor--;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1044          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1045  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1046          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1047  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1048      default:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1049          break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1050      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1051  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1052      /* If second character after ESC [ is ~ then switch on number */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1053      if (EscapeChar2 == '~')
.L186:
	ld.a	a4,[a12]
.L1352:
	mov.aa	a5,a13
.L921:
	call	IfxStdIf_DPipe_print
.L197:
.L179:
	mov.aa	a4,a13
.L922:
	call	strlen
.L923:
	st.h	[a12]52,d2
.L1353:
	ld.h	d15,[a12]52
.L1354:
	st.h	[a12]54,d15
.L196:
	mov	d15,#0
	st.b	[a12]56,d15
.L1355:
	j	.L204
.L173:
	ld.h	d0,[a12]52
.L1356:
	ld.h	d15,[a12]54
.L1357:
	jge	d0,d15,.L205
.L1358:
	ld.bu	d15,[a12]4
	jz.t	d15:3,.L206
	addsc.a	a15,a13,d0,#0
	ld.b	d15,[a15]0
	st.w	[a10],d15
	fcall	.cocofun_39
	call	IfxStdIf_DPipe_print
.L206:
	ld.h	d15,[a12]52
.L1359:
	add	d15,#1
	j	.L207
.L174:
	ld.h	d15,[a12]52
.L1360:
	jlt	d15,#1,.L208
.L1361:
	ld.bu	d15,[a12]4
	jz.t	d15:3,.L209
	fcall	.cocofun_35
	call	IfxStdIf_DPipe_print
.L209:
	ld.h	d15,[a12]52
.L1362:
	add	d15,#-1
.L207:
	st.h	[a12]52,d15
.L208:
.L205:
.L204:
.L175:
	mov	d15,#126
.L1363:
	jne	d15,d10,.L210
.L1364:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1054      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1055          switch (EscapeChar1)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1056          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1057          case '1':              /* HOME - move to start of buffer */
	mov	d15,#49
	jeq	d15,d9,.L211
.L1365:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1058  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1059              if (Cmd->cursor > 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1060              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1061                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor) Cmd->cursor = 0;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1062              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1063  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1064              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1065  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1066          case '2':              /* INSERT - insert blank character at cursor and move all remaining characters right one */
	mov	d15,#50
	jeq	d15,d9,.L212
.L1366:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1067  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1068              if ((Cmd->cursor < Cmd->length) && (Cmd->length < (IFX_SHELL_CMD_LINE_SIZE - 1)))
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1069              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1070                  /* Update on screen */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1071                  if (shell->control.echo != FALSE)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1072                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1073                      /* write over duplicated character at cursor */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1074                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1075  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1076                      /* Update line with new characters */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1077                      for (i = Cmd->cursor; i < Cmd->length; i++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1078                      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1079                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i]);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1080                      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1081  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1082                      /* Move cursor back to new place */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1083                      IFX_SHELL_WRITE_BACKSPACES((Cmd->length + 1) - Cmd->cursor)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1084                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1085  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1086                  /* Update in command line variable */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1087                  for (i = Cmd->length; i > Cmd->cursor; i--)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1088                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1089                      cmdStr[i] = cmdStr[i - 1];                 /* Shuffle text right */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1090                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1091  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1092                  cmdStr[Cmd->length + 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of longer string */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1093                  cmdStr[Cmd->cursor]     = ' ';                 /* Blank character at cursor */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1094  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1095                  Cmd->length++;                                 /* Now one character longer */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1096              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1097  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1098              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1099  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1100          case '3':              /* DELETE - delete character to right and move all remaining characters left one */
	mov	d15,#51
	jeq	d15,d9,.L213
.L1367:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1101  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1102              if (Cmd->cursor < Cmd->length)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1103              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1104                  /* Update on screen */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1105                  if (shell->control.echo != 0)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1106                  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1107                      for (i = Cmd->cursor; i < (Cmd->length - 1); i++)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1108                      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1109                          /* Update line with new characters */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1110                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i + 1]);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1111                      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1112  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1113                      /* write over duplicated character at end */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1114                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1115  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1116                      /* Move cursor back to right place */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1117                      IFX_SHELL_WRITE_BACKSPACES(Cmd->length - Cmd->cursor)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1118                  }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1119  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1120                  /* Update in command line variable. Shuffle text left */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1121                  strncpy(&cmdStr[Cmd->cursor], &cmdStr[Cmd->cursor + 1], Cmd->length - Cmd->cursor - 1);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1122  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1123                  cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of shorter string */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1124                  Cmd->length--;                                 /* Now one character shorter */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1125              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1126  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1127              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1128  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1129          case '4':              /* END - ensure cursor is at end */
	mov	d15,#52
	jeq	d15,d9,.L236
.L210:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1130  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1131              while (Cmd->cursor < Cmd->length)
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1132              {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1133                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1134              }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1135  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1136              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1137  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1138          default:
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1139              break;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1140          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1141      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1142  }
.L167:
	ret
.L211:
	ld.h	d15,[a12]52
.L1368:
	jlt	d15,#1,.L216
.L697:
	mov	d15,#0
.L217:
	fcall	.cocofun_35
	call	IfxStdIf_DPipe_print
	add	d15,#1
	ld.h	d0,[a12]52
	jlt	d15,d0,.L217
.L698:
	mov	d15,#0
	st.h	[a12]52,d15
.L216:
	ret
.L212:
	ld.h	d0,[a12]54
.L1369:
	ld.h	d15,[a12]52
.L1370:
	jge	d15,d0,.L219
.L1371:
	mov	d15,#127
.L1372:
	jge	d0,d15,.L220
.L1373:
	ld.bu	d15,[a12]4
.L1374:
	jz.t	d15:3,.L221
.L1375:
	ld.a	a4,[a12]
.L1376:
	lea	a5,.17.str
	call	IfxStdIf_DPipe_print
.L1377:
	ld.h	d15,[a12]52
.L924:
	addsc.a	a15,a13,d15,#0
.L1378:
	j	.L222
.L223:
	ld.b	d0,[a15+]1
	st.w	[a10],d0
.L1379:
	fcall	.cocofun_39
.L1380:
	call	IfxStdIf_DPipe_print
.L1381:
	add	d15,#1
.L222:
	ld.h	d0,[a12]54
.L1382:
	jlt	d15,d0,.L223
.L700:
	mov	d8,#0
	j	.L224
.L225:
	fcall	.cocofun_35
.L925:
	call	IfxStdIf_DPipe_print
	add	d8,#1
.L224:
	fcall	.cocofun_40
	jlt	d8,d15,.L225
.L221:
	ld.h	d15,[a12]54
.L926:
	addsc.a	a15,a13,d15,#0
.L1383:
	j	.L226
.L227:
	add	d15,#-1
	lea	a2,[a15]-1
.L1384:
	ld.b	d0,[a15]-1
.L1385:
	st.b	[a15],d0
.L1386:
	mov.aa	a15,a2
.L226:
	ld.h	d0,[a12]52
.L1387:
	jlt	d0,d15,.L227
.L1388:
	ld.h	d15,[a12]54
.L927:
	addsc.a	a15,a13,d15,#0
.L1389:
	mov	d15,#0
.L1390:
	st.b	[a15]1,d15
.L1391:
	ld.h	d15,[a12]52
.L1392:
	addsc.a	a15,a13,d15,#0
.L1393:
	mov	d15,#32
.L1394:
	st.b	[a15],d15
.L1395:
	ld.h	d15,[a12]54
.L1396:
	add	d15,#1
	j	.L228
.L213:
	ld.h	d0,[a12]54
.L1397:
	ld.h	d8,[a12]52
.L928:
	jge	d8,d0,.L229
.L1398:
	ld.bu	d15,[a12]4
.L1399:
	jz.t	d15:3,.L230
.L1400:
	addsc.a	a15,a13,d8,#0
.L1401:
	add	d0,#-1
.L1402:
	lea	a15,[a15]1
.L1403:
	jge	d8,d0,.L231
.L232:
	ld.b	d15,[a15+]1
	st.w	[a10],d15
.L1404:
	fcall	.cocofun_39
.L1405:
	call	IfxStdIf_DPipe_print
.L1406:
	ld.h	d15,[a12]54
.L1407:
	add	d8,#1
.L1408:
	add	d15,#-1
.L1409:
	jlt	d8,d15,.L232
.L231:
	lea	a5,.17.str
.L702:
	mov	d8,#0
	j	.L233
.L234:
	add	d8,#1
	lea	a5,.15.str
.L233:
	ld.a	a4,[a12]
	call	IfxStdIf_DPipe_print
	fcall	.cocofun_41
	sub	d15,d0
	jlt	d8,d15,.L234
.L230:
	ld.h	d15,[a12]52
.L1410:
	ld.h	d0,[a12]54
.L1411:
	addsc.a	a4,a13,d15,#0
.L1412:
	sub	d0,d15
.L1413:
	lea	a5,[a4]1
.L1414:
	add	d4,d0,#-1
	call	strncpy
.L1415:
	ld.h	d15,[a12]54
.L1416:
	addsc.a	a15,a13,d15,#0
.L1417:
	mov	d15,#0
.L1418:
	st.b	[a15]-1,d15
.L1419:
	ld.h	d15,[a12]54
.L1420:
	add	d15,#-1
.L228:
	st.h	[a12]54,d15
.L229:
.L220:
.L219:
	ret
.L237:
	ld.bu	d15,[a12]4
	jz.t	d15:3,.L238
	ld.h	d15,[a12]52
	addsc.a	a15,a13,d15,#0
	ld.b	d15,[a15]0
	st.w	[a10],d15
	fcall	.cocofun_39
	call	IfxStdIf_DPipe_print
.L238:
	ld.h	d15,[a12]52
.L1421:
	add	d15,#1
	st.h	[a12]52,d15
.L236:
	ld.h	d15,[a12]52
.L1422:
	ld.h	d0,[a12]54
.L1423:
	jlt	d15,d0,.L237
.L1424:
	ret
.L667:
	
__Ifx_Shell_cmdEscapeProcess_function_end:
	.size	Ifx_Shell_cmdEscapeProcess,__Ifx_Shell_cmdEscapeProcess_function_end-Ifx_Shell_cmdEscapeProcess
.L436:
	; End of function
	
	.sdecl	'.text.Ifx_Shell..cocofun_38',code,cluster('.cocofun_38')
	.sect	'.text.Ifx_Shell..cocofun_38'
	.align	2
; Function .cocofun_38
.L304:
.cocofun_38:	.type	func
; Function body .cocofun_38, coco_iter:0
	ld.h	d15,[a12]58
.L1482:
	mov	d4,#128
	mov.aa	a4,a13
.L908:
	addsc.a	a15,a12,d15,#2
	ld.a	a5,[a15]8
.L1483:
	fret
.L481:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_37',code,cluster('.cocofun_37')
	.sect	'.text.Ifx_Shell..cocofun_37'
	.align	2
; Function .cocofun_37
.L306:
.cocofun_37:	.type	func
; Function body .cocofun_37, coco_iter:0
	movh.a	a15,#@his(_999003___func__)
	lea	a15,[a15]@los(_999003___func__)
.L1477:
	fret
.L476:
	; End of function
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_enable',code,cluster('Ifx_Shell_enable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_enable'
	.align	2
	
	.global	Ifx_Shell_enable

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1143  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1144  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1145  void Ifx_Shell_enable(Ifx_Shell *shell)
; Function Ifx_Shell_enable
.L308:
Ifx_Shell_enable:	.type	func
	mov.aa	a15,a4
.L930:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1146  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1147      // Clear the Rx buffer!
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1148      IfxStdIf_DPipe_clearRx(shell->io);
	ld.a	a2,[a15]
.L517:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   245  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   246  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   248  /** \copydoc IfxStdIf_DPipe_Read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   249   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   250  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   251  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   252      return stdif->read(stdif->driver, data, count, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   253  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   254  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   256  /** \copydoc IfxStdIf_DPipe_GetReadCount
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   257   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   258  IFX_INLINE sint32 IfxStdIf_DPipe_getReadCount(IfxStdIf_DPipe *stdif)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   259  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   260      return stdif->getReadCount(stdif->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   261  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   262  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   264  /** \copydoc IfxStdIf_DPipe_GetWriteCount
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   266  IFX_INLINE sint32 IfxStdIf_DPipe_getWriteCount(IfxStdIf_DPipe *stdif)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   267  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   268      return stdif->getWriteCount(stdif->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   269  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   270  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   272  /** \copydoc IfxStdIf_DPipe_CanReadCount
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   273   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   274  IFX_INLINE boolean IfxStdIf_DPipe_canReadCount(IfxStdIf_DPipe *stdif, Ifx_SizeT count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   275  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   276      return stdif->canReadCount(stdif->driver, count, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   277  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   280  /** \copydoc IfxStdIf_DPipe_CanWriteCount
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   281   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   282  IFX_INLINE boolean IfxStdIf_DPipe_canWriteCount(IfxStdIf_DPipe *stdif, Ifx_SizeT count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   283  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   284      return stdif->canWriteCount(stdif->driver, count, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   285  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   286  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   288  /** \copydoc IfxStdIf_DPipe_GetReadEvent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   290  IFX_INLINE IfxStdIf_DPipe_ReadEvent IfxStdIf_DPipe_getReadEvent(IfxStdIf_DPipe *stdif)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   291  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   292      return stdif->getReadEvent(stdif->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   293  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   294  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   295  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   296  /** \copydoc IfxStdIf_DPipe_GetWriteEvent
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   297   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   298  IFX_INLINE IfxStdIf_DPipe_WriteEvent IfxStdIf_DPipe_getWriteEvent(IfxStdIf_DPipe *stdif)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   299  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   300      return stdif->getWriteEvent(stdif->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   301  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   303  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   304  /** \copydoc IfxStdIf_DPipe_FlushTx
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   305   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   306  IFX_INLINE boolean IfxStdIf_DPipe_flushTx(IfxStdIf_DPipe *stdif, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   307  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   308      return stdif->flushTx(stdif->driver, timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   309  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   310  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   312  /** \copydoc IfxStdIf_DPipe_ClearTx
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   313   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   314  IFX_INLINE void IfxStdIf_DPipe_clearTx(IfxStdIf_DPipe *stdif)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   315  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   316      stdif->clearTx(stdif->driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   317  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   320  /** \copydoc IfxStdIf_DPipe_ClearRx
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   321   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   322  IFX_INLINE void IfxStdIf_DPipe_clearRx(IfxStdIf_DPipe *stdif)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   323  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   324      stdif->clearRx(stdif->driver);
	ld.a	a5,[a2]48
.L1008:
	ld.a	a4,[a2]
.L929:
	calli	a5
.L518:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1149      // Enable the shell
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1150      shell->control.enabled = 1;
	ld.bu	d15,[a15]4
.L1009:
	or	d15,#2
	st.b	[a15]4,d15
.L1010:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1151  }
	ret
.L514:
	
__Ifx_Shell_enable_function_end:
	.size	Ifx_Shell_enable,__Ifx_Shell_enable_function_end-Ifx_Shell_enable
.L336:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_disable',code,cluster('Ifx_Shell_disable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_disable'
	.align	2
	
	.global	Ifx_Shell_disable

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1152  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1153  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1154  void Ifx_Shell_disable(Ifx_Shell *shell)
; Function Ifx_Shell_disable
.L310:
Ifx_Shell_disable:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1155  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1156      shell->control.enabled = 0;
	ld.bu	d15,[a4]4
.L1015:
	insert	d15,d15,#0,#1,#1
	st.b	[a4]4,d15
.L1016:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1157  }
	ret
.L522:
	
__Ifx_Shell_disable_function_end:
	.size	Ifx_Shell_disable,__Ifx_Shell_disable_function_end-Ifx_Shell_disable
.L341:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_printSyntax',code,cluster('Ifx_Shell_printSyntax')
	.sect	'.text.Ifx_Shell.Ifx_Shell_printSyntax'
	.align	2
	
	.global	Ifx_Shell_printSyntax

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1158  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1159  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1160  void Ifx_Shell_printSyntax(const Ifx_Shell_Syntax *syntaxList, IfxStdIf_DPipe *io)
; Function Ifx_Shell_printSyntax
.L312:
Ifx_Shell_printSyntax:	.type	func
	sub.a	a10,#8
.L931:
	mov.aa	a12,a5
.L932:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1161  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1162      const Ifx_Shell_Syntax *syntax = syntaxList;
	mov.aa	a15,a4
.L933:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1163  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1164      while (syntax->syntax != NULL_PTR)
	j	.L239
.L240:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1165      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1166          IfxStdIf_DPipe_print(io, "Syntax     : %s" ENDL, syntax->syntax);
	ld.a	a2,[a15]
	st.a	[a10],a2
.L1277:
	movh.a	a5,#@his(.30.str)
	lea	a5,[a5]@los(.30.str)
	mov.aa	a4,a12
.L934:
	call	IfxStdIf_DPipe_print
.L935:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1167          IfxStdIf_DPipe_print(io, "           > %s" ENDL, syntax->description);
	ld.a	a2,[a15]4
	st.a	[a10],a2
.L1278:
	movh.a	a5,#@his(.31.str)
	lea	a5,[a5]@los(.31.str)
	mov.aa	a4,a12
.L936:
	call	IfxStdIf_DPipe_print
.L937:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1168          syntax = &syntax[1];
	lea	a15,[a15]8
.L239:
	ld.w	d15,[a15]
.L1279:
	jne	d15,#0,.L240
.L1280:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1169      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Shell.c	  1170  }
	ret
.L646:
	
__Ifx_Shell_printSyntax_function_end:
	.size	Ifx_Shell_printSyntax,__Ifx_Shell_printSyntax_function_end-Ifx_Shell_printSyntax
.L416:
	; End of function
	
	.sdecl	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer',data,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer'
	.global	Ifx_Shell_cmdBuffer
Ifx_Shell_cmdBuffer:	.type	object
	.size	Ifx_Shell_cmdBuffer,1280
	.space	1280
	.sdecl	'.rodata.Ifx_Shell..1.str',data,rom
	.sect	'.rodata.Ifx_Shell..1.str'
.1.str:	.type	object
	.size	.1.str,43
	.byte	91,65,83,83
	.byte	69,82,84,58
	.byte	37,115,93,32
	.byte	39,37,115,39
	.byte	32,105,110,32
	.byte	37,115,58,37
	.byte	100,32,40,102
	.byte	117,110,99,116
	.byte	105,111,110,32
	.byte	39,37,115,39
	.byte	41,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..2.str',data,rom
	.sect	'.rodata.Ifx_Shell..2.str'
.2.str:	.type	object
	.size	.2.str,16
	.byte	114,101,115,117
	.byte	108,116,32,33
	.byte	61,32,70,65
	.byte	76,83,69
	.space	1
	.sdecl	'.rodata.Ifx_Shell..3.str',data,rom
	.sect	'.rodata.Ifx_Shell..3.str'
.3.str:	.type	object
	.size	.3.str,68
	.byte	46,46,92,83
	.byte	111,102,116,119
	.byte	97,114,101,80
	.byte	108,97,116,102
	.byte	111,114,109,92
	.byte	105,108,108,100
	.byte	95,116,99,50
	.byte	51,120,92,115
	.byte	114,99,92,105
	.byte	102,120,92,83
	.byte	114,118,83,119
	.byte	92,83,121,115
	.byte	83,101,92,67
	.byte	111,109,109,92
	.byte	73,102,120,95
	.byte	83,104,101,108
	.byte	108,46,99
	.space	1
	.sdecl	'.rodata.Ifx_Shell._999001___func__',data,rom,cluster('_999001___func__')
	.sect	'.rodata.Ifx_Shell._999001___func__'
_999001___func__:	.type	object
	.size	_999001___func__,22
	.byte	73,102,120,95
	.byte	83,104,101,108
	.byte	108,95,119,114
	.byte	105,116,101,82
	.byte	101,115,117,108
	.byte	116
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..4.str',data,rom
	.sect	'.zrodata.Ifx_Shell..4.str'
.4.str:	.type	object
	.size	.4.str,4
	.byte	37,115,32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..5.str',data,rom
	.sect	'.zrodata.Ifx_Shell..5.str'
.5.str:	.type	object
	.size	.5.str,3
	.byte	13,10
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..6.str',data,rom
	.sect	'.zrodata.Ifx_Shell..6.str'
.6.str:	.type	object
	.size	.6.str,1
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..7.str',data,rom
	.sect	'.zrodata.Ifx_Shell..7.str'
.7.str:	.type	object
	.size	.7.str,2
	.byte	63
	.space	1
	.sdecl	'.rodata.Ifx_Shell..8.str',data,rom
	.sect	'.rodata.Ifx_Shell..8.str'
.8.str:	.type	object
	.size	.8.str,30
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,32,115,116
	.byte	97,114,116,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..9.str',data,rom
	.sect	'.rodata.Ifx_Shell..9.str'
.9.str:	.type	object
	.size	.9.str,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,115,116,97
	.byte	114,116,32,97
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,13,10
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..10.str',data,rom
	.sect	'.zrodata.Ifx_Shell..10.str'
.10.str:	.type	object
	.size	.10.str,6
	.byte	115,116,97,114
	.byte	116
	.space	1
	.sdecl	'.rodata.Ifx_Shell..11.str',data,rom
	.sect	'.rodata.Ifx_Shell..11.str'
.11.str:	.type	object
	.size	.11.str,9
	.byte	112,114,111,116
	.byte	111,99,111,108
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..12.str',data,rom
	.sect	'.zrodata.Ifx_Shell..12.str'
.12.str:	.type	object
	.size	.12.str,5
	.byte	104,101,108,112
	.space	1
	.sdecl	'.rodata.Ifx_Shell..13.str',data,rom
	.sect	'.rodata.Ifx_Shell..13.str'
.13.str:	.type	object
	.size	.13.str,15
	.byte	112,114,111,116
	.byte	111,99,111,108
	.byte	32,115,116,97
	.byte	114,116
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..14.str',data,rom
	.sect	'.zrodata.Ifx_Shell..14.str'
.14.str:	.type	object
	.size	.14.str,7
	.byte	83,104,101,108
	.byte	108,62
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..15.str',data,rom
	.sect	'.zrodata.Ifx_Shell..15.str'
.15.str:	.type	object
	.size	.15.str,2
	.byte	8
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..16.str',data,rom
	.sect	'.zrodata.Ifx_Shell..16.str'
.16.str:	.type	object
	.size	.16.str,3
	.byte	37,99
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..17.str',data,rom
	.sect	'.zrodata.Ifx_Shell..17.str'
.17.str:	.type	object
	.size	.17.str,2
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..18.str',data,rom
	.sect	'.rodata.Ifx_Shell..18.str'
.18.str:	.type	object
	.size	.18.str,27
	.byte	67,109,100,45
	.byte	62,108,101,110
	.byte	103,116,104,32
	.byte	62,61,32,67
	.byte	109,100,45,62
	.byte	99,117,114,115
	.byte	111,114
	.space	1
	.sdecl	'.rodata.Ifx_Shell._999002___func__',data,rom,cluster('_999002___func__')
	.sect	'.rodata.Ifx_Shell._999002___func__'
_999002___func__:	.type	object
	.size	_999002___func__,18
	.byte	73,102,120,95
	.byte	83,104,101,108
	.byte	108,95,112,114
	.byte	111,99,101,115
	.byte	115
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..19.str',data,rom
	.sect	'.zrodata.Ifx_Shell..19.str'
.19.str:	.type	object
	.size	.19.str,4
	.byte	37,120,32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..20.str',data,rom
	.sect	'.zrodata.Ifx_Shell..20.str'
.20.str:	.type	object
	.size	.20.str,6
	.byte	37,108,108,100
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..21.str',data,rom
	.sect	'.zrodata.Ifx_Shell..21.str'
.21.str:	.type	object
	.size	.21.str,6
	.byte	37,108,108,120
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..22.str',data,rom
	.sect	'.zrodata.Ifx_Shell..22.str'
.22.str:	.type	object
	.size	.22.str,6
	.byte	37,108,108,117
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..23.str',data,rom
	.sect	'.zrodata.Ifx_Shell..23.str'
.23.str:	.type	object
	.size	.23.str,5
	.byte	37,108,102,32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..24.str',data,rom
	.sect	'.zrodata.Ifx_Shell..24.str'
.24.str:	.type	object
	.size	.24.str,4
	.byte	37,102,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..25.str',data,rom
	.sect	'.rodata.Ifx_Shell..25.str'
.25.str:	.type	object
	.size	.25.str,28
	.byte	13,10,83,104
	.byte	101,108,108,32
	.byte	99,111,109,109
	.byte	97,110,100,32
	.byte	101,114,114,111
	.byte	114,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..26.str',data,rom
	.sect	'.rodata.Ifx_Shell..26.str'
.26.str:	.type	object
	.size	.26.str,24
	.byte	13,10,85,110
	.byte	107,110,111,119
	.byte	110,32,99,111
	.byte	109,109,97,110
	.byte	100,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell._999003___func__',data,rom,cluster('_999003___func__')
	.sect	'.rodata.Ifx_Shell._999003___func__'
_999003___func__:	.type	object
	.size	_999003___func__,27
	.byte	73,102,120,95
	.byte	83,104,101,108
	.byte	108,95,99,109
	.byte	100,69,115,99
	.byte	97,112,101,80
	.byte	114,111,99,101
	.byte	115,115
	.space	1
	.sdecl	'.rodata.Ifx_Shell..27.str',data,rom
	.sect	'.rodata.Ifx_Shell..27.str'
.27.str:	.type	object
	.size	.27.str,19
	.byte	99,109,100,83
	.byte	116,114,32,33
	.byte	61,32,78,85
	.byte	76,76,95,80
	.byte	84,82
	.space	1
	.sdecl	'.rodata.Ifx_Shell..28.str',data,rom
	.sect	'.rodata.Ifx_Shell..28.str'
.28.str:	.type	object
	.size	.28.str,38
	.byte	67,109,100,45
	.byte	62,99,117,114
	.byte	115,111,114,32
	.byte	60,32,73,70
	.byte	88,95,83,72
	.byte	69,76,76,95
	.byte	67,77,68,95
	.byte	76,73,78,69
	.byte	95,83,73,90
	.byte	69
	.space	1
	.sdecl	'.rodata.Ifx_Shell..29.str',data,rom
	.sect	'.rodata.Ifx_Shell..29.str'
.29.str:	.type	object
	.size	.29.str,38
	.byte	67,109,100,45
	.byte	62,108,101,110
	.byte	103,116,104,32
	.byte	60,32,73,70
	.byte	88,95,83,72
	.byte	69,76,76,95
	.byte	67,77,68,95
	.byte	76,73,78,69
	.byte	95,83,73,90
	.byte	69
	.space	1
	.sdecl	'.rodata.Ifx_Shell..30.str',data,rom
	.sect	'.rodata.Ifx_Shell..30.str'
.30.str:	.type	object
	.size	.30.str,18
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,37,115,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..31.str',data,rom
	.sect	'.rodata.Ifx_Shell..31.str'
.31.str:	.type	object
	.size	.31.str,18
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,37,115,13
	.byte	10
	.space	1
	.calls	'Ifx_Shell_writeResult','__INDIRECT__'
	.calls	'Ifx_Shell_writeResult','printf'
	.calls	'Ifx_Shell_showHelpSingle','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_showHelp','Ifx_Shell_showHelpSingle'
	.calls	'Ifx_Shell_protocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_protocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_protocolStart','__INDIRECT__'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_bbProtocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_protocolStart'
	.calls	'Ifx_Shell_init','memset'
	.calls	'Ifx_Shell_init','strcpy'
	.calls	'Ifx_Shell_init','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','__INDIRECT__'
	.calls	'Ifx_Shell_process','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','strncpy'
	.calls	'Ifx_Shell_process','Ifx_Shell_execute'
	.calls	'Ifx_Shell_process','Ifx_Shell_cmdEscapeProcess'
	.calls	'Ifx_Shell_process','printf'
	.calls	'Ifx_Shell_matchToken','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchToken','strcmp'
	.calls	'Ifx_Shell_matchCommand','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchCommand','strcmp'
	.calls	'Ifx_Shell_parseToken','Ifx_Shell_skipWhitespace'
	.calls	'Ifx_Shell_parseAddress','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseAddress','sscanf'
	.calls	'Ifx_Shell_parseSInt32','Ifx_Shell_parseSInt64'
	.calls	'Ifx_Shell_parseUInt32','Ifx_Shell_parseUInt64'
	.calls	'Ifx_Shell_parseSInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseSInt64','sscanf'
	.calls	'Ifx_Shell_parseUInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseUInt64','sscanf'
	.calls	'Ifx_Shell_parseFloat64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat64','sscanf'
	.calls	'Ifx_Shell_parseFloat32','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat32','sscanf'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_matchCommand'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_commandListFind','Ifx_Shell_commandFind'
	.calls	'Ifx_Shell_execute','Ifx_Shell_commandListFind'
	.calls	'Ifx_Shell_execute','__INDIRECT__'
	.calls	'Ifx_Shell_execute','Ifx_Shell_writeResult'
	.calls	'Ifx_Shell_execute','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','printf'
	.calls	'Ifx_Shell_cmdEscapeProcess','strncpy'
	.calls	'Ifx_Shell_cmdEscapeProcess','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strlen'
	.calls	'Ifx_Shell_enable','__INDIRECT__'
	.calls	'Ifx_Shell_printSyntax','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_writeResult','.cocofun_36'
	.calls	'Ifx_Shell_writeResult','.cocofun_33'
	.calls	'Ifx_Shell_writeResult','.cocofun_34'
	.calls	'Ifx_Shell_process','.cocofun_35'
	.calls	'Ifx_Shell_process','.cocofun_39'
	.calls	'Ifx_Shell_process','.cocofun_40'
	.calls	'Ifx_Shell_process','.cocofun_41'
	.calls	'Ifx_Shell_process','.cocofun_36'
	.calls	'Ifx_Shell_process','.cocofun_33'
	.calls	'Ifx_Shell_process','.cocofun_34'
	.calls	'.cocofun_40','.cocofun_41'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_33'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_37'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_34'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_36'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_38'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_35'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_39'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_40'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_41'
	.calls	'Ifx_Shell_writeResult','',24
	.calls	'Ifx_Shell_showHelpSingle','',8
	.calls	'Ifx_Shell_showHelp','',0
	.calls	'Ifx_Shell_protocolStart','',8
	.calls	'Ifx_Shell_bbProtocolStart','',8
	.calls	'Ifx_Shell_initConfig','',0
	.calls	'Ifx_Shell_init','',0
	.calls	'Ifx_Shell_process','',32
	.calls	'.cocofun_41','',0
	.calls	'.cocofun_40','',0
	.calls	'.cocofun_39','',0
	.calls	'.cocofun_36','',0
	.calls	'.cocofun_35','',0
	.calls	'.cocofun_34','',0
	.calls	'.cocofun_33','',0
	.calls	'Ifx_Shell_deinit','',0
	.calls	'Ifx_Shell_skipWhitespace','',0
	.calls	'Ifx_Shell_matchToken','',256
	.calls	'Ifx_Shell_matchCommand','',512
	.calls	'Ifx_Shell_parseToken','',0
	.calls	'Ifx_Shell_parseAddress','',40
	.calls	'Ifx_Shell_parseSInt32','',8
	.calls	'Ifx_Shell_parseUInt32','',8
	.calls	'Ifx_Shell_parseSInt64','',72
	.calls	'Ifx_Shell_parseUInt64','',72
	.calls	'Ifx_Shell_parseFloat64','',72
	.calls	'Ifx_Shell_parseFloat32','',72
	.calls	'Ifx_Shell_commandFind','',264
	.calls	'Ifx_Shell_commandListFind','',0
	.calls	'Ifx_Shell_execute','',8
	.calls	'Ifx_Shell_cmdEscapeProcess','',24
	.calls	'.cocofun_38','',0
	.calls	'.cocofun_37','',0
	.calls	'Ifx_Shell_enable','',0
	.calls	'Ifx_Shell_disable','',0
	.extern	printf
	.extern	sscanf
	.extern	verboseLevelStr
	.extern	IfxStdIf_DPipe_print
	.extern	strcpy
	.extern	strncpy
	.extern	strcmp
	.extern	strlen
	.extern	memset
	.extern	__printf_int
	.extern	__scanf_float
	.extern	__scanf_llong
	.extern	__INDIRECT__
	.calls	'Ifx_Shell_printSyntax','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L314:
	.word	4551
	.half	3
	.word	.L315
	.byte	4
.L313:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L316
.L502:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'void',0
.L642:
	.byte	4
	.word	207
	.byte	5
	.byte	'IfxStdIf_InterfaceDriver',0,2,97,15
	.word	213
.L527:
	.byte	2
	.byte	'short int',0,2,5,4
	.word	251
.L584:
	.byte	2
	.byte	'long long int',0,8,5,6
	.word	190
	.byte	1,1,7
	.word	213
	.byte	7
	.word	213
	.byte	7
	.word	264
	.byte	7
	.word	269
	.byte	0,4
	.word	286
	.byte	5
	.byte	'IfxStdIf_DPipe_Write',0,1,72,19
	.word	314
	.byte	5
	.byte	'IfxStdIf_DPipe_Read',0,1,87,19
	.word	314
.L508:
	.byte	2
	.byte	'long int',0,4,5,6
	.word	376
	.byte	1,1,7
	.word	213
	.byte	0,4
	.word	388
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadCount',0,1,95,18
	.word	401
	.byte	8
	.word	190
	.byte	4
	.word	442
	.byte	6
	.word	447
	.byte	1,1,7
	.word	213
	.byte	0,4
	.word	452
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadEvent',0,1,103,36
	.word	465
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteCount',0,1,127,18
	.word	401
	.byte	4
	.word	452
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteEvent',0,1,135,1,37
	.word	543
	.byte	6
	.word	190
	.byte	1,1,7
	.word	213
	.byte	7
	.word	251
	.byte	7
	.word	269
	.byte	0,4
	.word	586
	.byte	5
	.byte	'IfxStdIf_DPipe_CanReadCount',0,1,146,1,19
	.word	609
	.byte	5
	.byte	'IfxStdIf_DPipe_CanWriteCount',0,1,157,1,19
	.word	609
	.byte	6
	.word	190
	.byte	1,1,7
	.word	213
	.byte	7
	.word	269
	.byte	0,4
	.word	689
	.byte	5
	.byte	'IfxStdIf_DPipe_FlushTx',0,1,166,1,19
	.word	707
	.byte	9,1,1,7
	.word	213
	.byte	0,4
	.word	744
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearTx',0,1,180,1,16
	.word	753
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearRx',0,1,173,1,16
	.word	753
	.byte	5
	.byte	'IfxStdIf_DPipe_OnReceive',0,1,188,1,16
	.word	753
	.byte	5
	.byte	'IfxStdIf_DPipe_OnTransmit',0,1,195,1,16
	.word	753
	.byte	5
	.byte	'IfxStdIf_DPipe_OnError',0,1,202,1,16
	.word	753
	.byte	2
	.byte	'unsigned long int',0,4,7,6
	.word	923
	.byte	1,1,7
	.word	213
	.byte	0,4
	.word	944
	.byte	5
	.byte	'IfxStdIf_DPipe_GetSendCount',0,1,111,18
	.word	957
	.byte	6
	.word	269
	.byte	1,1,7
	.word	213
	.byte	0,4
	.word	998
	.byte	5
	.byte	'IfxStdIf_DPipe_GetTxTimeStamp',0,1,119,24
	.word	1011
	.byte	5
	.byte	'IfxStdIf_DPipe_ResetSendCount',0,1,209,1,16
	.word	753
	.byte	10
	.byte	'IfxStdIf_DPipe_',0,1,213,1,8,76,11
	.byte	'driver',0
	.word	218
	.byte	4,2,35,0,11
	.byte	'txDisabled',0
	.word	190
	.byte	1,2,35,4,11
	.byte	'write',0
	.word	319
	.byte	4,2,35,8,11
	.byte	'read',0
	.word	348
	.byte	4,2,35,12,11
	.byte	'getReadCount',0
	.word	406
	.byte	4,2,35,16,11
	.byte	'getReadEvent',0
	.word	470
	.byte	4,2,35,20,11
	.byte	'getWriteCount',0
	.word	506
	.byte	4,2,35,24,11
	.byte	'getWriteEvent',0
	.word	548
	.byte	4,2,35,28,11
	.byte	'canReadCount',0
	.word	614
	.byte	4,2,35,32,11
	.byte	'canWriteCount',0
	.word	651
	.byte	4,2,35,36,11
	.byte	'flushTx',0
	.word	712
	.byte	4,2,35,40,11
	.byte	'clearTx',0
	.word	758
	.byte	4,2,35,44,11
	.byte	'clearRx',0
	.word	790
	.byte	4,2,35,48,11
	.byte	'onReceive',0
	.word	822
	.byte	4,2,35,52,11
	.byte	'onTransmit',0
	.word	856
	.byte	4,2,35,56,11
	.byte	'onError',0
	.word	891
	.byte	4,2,35,60,11
	.byte	'getSendCount',0
	.word	962
	.byte	4,2,35,64,11
	.byte	'getTxTimeStamp',0
	.word	1016
	.byte	4,2,35,68,11
	.byte	'resetSendCount',0
	.word	1054
	.byte	4,2,35,72,0
.L637:
	.byte	4
	.word	1093
	.byte	4
	.word	251
.L709:
	.byte	12
	.byte	'IfxStdIf_DPipe_write',0,3,1,242,1,20
	.word	190
	.byte	1,1
.L712:
	.byte	13
	.byte	'stdif',0,1,242,1,57
	.word	1493
.L714:
	.byte	13
	.byte	'data',0,1,242,1,70
	.word	213
.L716:
	.byte	13
	.byte	'count',0,1,242,1,87
	.word	1498
.L718:
	.byte	13
	.byte	'timeout',0,1,242,1,107
	.word	269
.L720:
	.byte	14,0,4
	.word	207
	.byte	4
	.word	286
	.byte	4
	.word	286
	.byte	4
	.word	388
	.byte	4
	.word	452
	.byte	4
	.word	388
	.byte	4
	.word	452
	.byte	4
	.word	586
	.byte	4
	.word	586
	.byte	4
	.word	689
	.byte	4
	.word	744
	.byte	4
	.word	744
	.byte	4
	.word	744
	.byte	4
	.word	744
	.byte	4
	.word	744
	.byte	4
	.word	944
	.byte	4
	.word	998
	.byte	4
	.word	744
.L540:
	.byte	12
	.byte	'IfxStdIf_DPipe_read',0,3,1,250,1,20
	.word	190
	.byte	1,1
.L543:
	.byte	13
	.byte	'stdif',0,1,250,1,56
	.word	1493
.L545:
	.byte	13
	.byte	'data',0,1,250,1,69
	.word	213
.L547:
	.byte	13
	.byte	'count',0,1,250,1,86
	.word	1498
.L549:
	.byte	13
	.byte	'timeout',0,1,250,1,106
	.word	269
.L551:
	.byte	14,0
.L516:
	.byte	15
	.byte	'IfxStdIf_DPipe_clearRx',0,3,1,194,2,17,1,1
.L519:
	.byte	13
	.byte	'stdif',0,1,194,2,56
	.word	1493
.L521:
	.byte	14,0
.L592:
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'__ld64',0,3,3,110,19
	.word	1832
	.byte	1,1,13
	.byte	'addr',0,3,110,32
	.word	213
	.byte	14,0,15
	.byte	'__st64',0,3,3,118,17,1,1,13
	.byte	'addr',0,3,118,30
	.word	213
	.byte	13
	.byte	'value',0,3,118,43
	.word	1832
	.byte	14,0
.L554:
	.byte	2
	.byte	'int',0,4,5,16
	.byte	'__max',0
	.word	1934
	.byte	1,1,1,1,7
	.word	1934
	.byte	7
	.word	1934
	.byte	0,16
	.byte	'__min',0
	.word	1934
	.byte	1,1,1,1,7
	.word	1934
	.byte	7
	.word	1934
	.byte	0
.L669:
	.byte	2
	.byte	'char',0,1,6,17
	.word	1993
	.byte	4
	.word	2001
	.byte	18
	.word	2006
	.byte	19
	.byte	'printf',0,4,143,1,16
	.word	1934
	.byte	1,1,1,1,20,4,143,1,38
	.word	2011
	.byte	21,4,143,1,50,0,18
	.word	2006
	.byte	18
	.word	2006
	.byte	19
	.byte	'sscanf',0,4,147,1,16
	.word	1934
	.byte	1,1,1,1,20,4,147,1,38
	.word	2051
	.byte	20,4,147,1,61
	.word	2056
	.byte	21,4,147,1,73,0,22
	.word	1503
	.byte	23
	.word	1536
	.byte	23
	.word	1551
	.byte	23
	.word	1565
	.byte	23
	.word	1580
	.byte	14,0,22
	.word	1689
	.byte	23
	.word	1721
	.byte	23
	.word	1736
	.byte	23
	.word	1750
	.byte	23
	.word	1765
	.byte	14,0,22
	.word	1784
	.byte	23
	.word	1815
	.byte	14,0
.L556:
	.byte	5
	.byte	'pchar',0,5,39,28
	.word	2006
	.byte	24
	.byte	'IfxStdIf_DPipe_print',0,1,248,2,17,1,1,1,1,13
	.byte	'stdif',0,1,248,2,54
	.word	1493
	.byte	13
	.byte	'format',0,1,248,2,67
	.word	2171
	.byte	21,1,248,2,75,0,17
	.word	1993
	.byte	4
	.word	2252
	.byte	4
	.word	1093
	.byte	6
	.word	190
	.byte	1,1,7
	.word	2006
	.byte	7
	.word	213
	.byte	7
	.word	2262
	.byte	0,4
	.word	2267
	.byte	5
	.byte	'Ifx_Shell_Call',0,6,67,19
	.word	2290
	.byte	25,6,70,9,16,11
	.byte	'commandLine',0
	.word	2171
	.byte	4,2,35,0,11
	.byte	'help',0
	.word	2171
	.byte	4,2,35,4,11
	.byte	'data',0
	.word	213
	.byte	4,2,35,8,11
	.byte	'call',0
	.word	2295
	.byte	4,2,35,12,0,17
	.word	2318
.L622:
	.byte	4
	.word	2387
	.byte	26,4
	.word	2392
	.byte	27,0,0,6
	.word	190
	.byte	1,1,7
	.word	213
	.byte	7
	.word	2262
	.byte	0,4
	.word	2406
	.byte	9,1,1,7
	.word	213
	.byte	7
	.word	213
	.byte	0,4
	.word	2429
	.byte	25,6,98,9,24,11
	.byte	'start',0
	.word	2424
	.byte	4,2,35,0,11
	.byte	'execute',0
	.word	753
	.byte	4,2,35,4,11
	.byte	'onStart',0
	.word	2443
	.byte	4,2,35,8,11
	.byte	'onStartData',0
	.word	213
	.byte	4,2,35,12,11
	.byte	'object',0
	.word	213
	.byte	4,2,35,16,11
	.byte	'started',0
	.word	190
	.byte	1,2,35,20,0,25,6,155,1,9,36,11
	.byte	'standardIo',0
	.word	1493
	.byte	4,2,35,0,11
	.byte	'echo',0
	.word	190
	.byte	1,2,35,4,11
	.byte	'showPrompt',0
	.word	190
	.byte	1,2,35,5,11
	.byte	'sendResultCode',0
	.word	190
	.byte	1,2,35,6,11
	.byte	'commandList',0
	.word	2397
	.byte	4,2,35,8,11
	.byte	'protocol',0
	.word	2448
	.byte	24,2,35,12,0
.L500:
	.byte	4
	.word	2557
	.byte	4
	.word	2267
	.byte	25,6,109,9,1,28
	.byte	'showPrompt',0,1
	.word	190
	.byte	1,7,2,35,0,28
	.byte	'enabled',0,1
	.word	190
	.byte	1,6,2,35,0,28
	.byte	'sendResultCode',0,1
	.word	190
	.byte	1,5,2,35,0,28
	.byte	'echo',0,1
	.word	190
	.byte	1,4,2,35,0,28
	.byte	'echoError',0,1
	.word	190
	.byte	1,3,2,35,0,0
.L535:
	.byte	4
	.word	1993
	.byte	26,40
	.word	2801
	.byte	27,9,0,25,6,79,9,12,11
	.byte	'cmdStr',0
	.word	2801
	.byte	4,2,35,0,11
	.byte	'cursor',0
	.word	251
	.byte	2,2,35,4,11
	.byte	'length',0
	.word	251
	.byte	2,2,35,6,11
	.byte	'historyAdd',0
	.word	190
	.byte	1,2,35,8,11
	.byte	'historyItem',0
	.word	251
	.byte	2,2,35,10,0,26,2
	.word	1993
	.byte	27,1,0,26,129,1
	.word	1993
	.byte	27,128,1,0,26,128,1
	.word	1993
	.byte	27,127,0,29,6,89,9,1,30
	.byte	'IFX_SHELL_CMD_STATE_NORMAL',0,0,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE',0,1,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET',0,2,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER',0,3,0,25,6,119,9,136,2,11
	.byte	'echo',0
	.word	2910
	.byte	2,2,35,0,11
	.byte	'inputbuffer',0
	.word	2919
	.byte	129,1,2,35,2,11
	.byte	'cmdStr',0
	.word	2930
	.byte	128,1,3,35,131,1,11
	.byte	'cmdState',0
	.word	2940
	.byte	1,3,35,131,2,11
	.byte	'escBracketNum',0
	.word	1993
	.byte	1,3,35,132,2,0,25,6,131,1,9,224,2,11
	.byte	'io',0
	.word	1493
	.byte	4,2,35,0,11
	.byte	'control',0
	.word	2691
	.byte	1,2,35,4,11
	.byte	'cmdHistory',0
	.word	2806
	.byte	40,2,35,8,11
	.byte	'cmd',0
	.word	2815
	.byte	12,2,35,48,11
	.byte	'locals',0
	.word	3085
	.byte	136,2,2,35,60,11
	.byte	'commandList',0
	.word	2397
	.byte	4,3,35,196,2,11
	.byte	'protocol',0
	.word	2448
	.byte	24,3,35,200,2,0
.L504:
	.byte	4
	.word	3189
	.byte	17
	.word	2557
.L506:
	.byte	4
	.word	3322
.L510:
	.byte	4
	.word	2801
.L533:
	.byte	4
	.word	2815
	.byte	26,18
	.word	1993
	.byte	27,17,0
.L539:
	.byte	17
	.word	3342
.L560:
	.byte	4
	.word	2171
.L564:
	.byte	26,128,2
	.word	1993
	.byte	27,255,1,0
.L575:
	.byte	4
	.word	213
.L577:
	.byte	26,32
	.word	1993
	.byte	27,31,0
.L582:
	.byte	4
	.word	376
.L589:
	.byte	4
	.word	923
.L597:
	.byte	4
	.word	269
.L599:
	.byte	26,64
	.word	1993
	.byte	27,63,0
.L604:
	.byte	4
	.word	1832
	.byte	2
	.byte	'float',0,4,4
.L612:
	.byte	4
	.word	3415
.L618:
	.byte	4
	.word	3415
	.byte	17
	.word	207
.L635:
	.byte	4
	.word	3434
	.byte	25,6,165,1,9,8,11
	.byte	'syntax',0
	.word	2171
	.byte	4,2,35,0,11
	.byte	'description',0
	.word	2171
	.byte	4,2,35,4,0,17
	.word	3444
.L647:
	.byte	4
	.word	3488
	.byte	22
	.word	1858
	.byte	23
	.word	1876
	.byte	14,0,22
	.word	1891
	.byte	23
	.word	1905
	.byte	23
	.word	1918
	.byte	14,0,18
	.word	2801
	.byte	18
	.word	2006
	.byte	19
	.byte	'strcpy',0,7,39,17
	.word	2801
	.byte	1,1,1,1,20,7,39,33
	.word	3527
	.byte	20,7,39,56
	.word	3532
	.byte	0,18
	.word	2801
	.byte	18
	.word	2006
	.byte	2
	.byte	'unsigned int',0,4,7,19
	.byte	'strncpy',0,7,40,17
	.word	2801
	.byte	1,1,1,1,20,7,40,33
	.word	3573
	.byte	20,7,40,56
	.word	3578
	.byte	20,7,40,68
	.word	3583
	.byte	0,19
	.byte	'strcmp',0,7,50,17
	.word	1934
	.byte	1,1,1,1,20,7,50,39
	.word	2006
	.byte	20,7,50,53
	.word	2006
	.byte	0,19
	.byte	'strlen',0,7,52,17
	.word	3583
	.byte	1,1,1,1,20,7,52,39
	.word	2006
	.byte	0,19
	.byte	'memset',0,7,56,17
	.word	213
	.byte	1,1,1,1,20,7,56,33
	.word	213
	.byte	20,7,56,36
	.word	1934
	.byte	20,7,56,41
	.word	3583
	.byte	0,26,27
	.word	1993
	.byte	27,26,0
.L677:
	.byte	17
	.word	3752
	.byte	26,22
	.word	1993
	.byte	27,21,0
.L708:
	.byte	17
	.word	3766
	.byte	31
	.byte	'__INDIRECT__',0,8,1,1,1,1,1,5
	.byte	'__wchar_t',0,8,1,1
	.word	251
	.byte	5
	.byte	'__size_t',0,8,1,1
	.word	3583
	.byte	5
	.byte	'__ptrdiff_t',0,8,1,1
	.word	1934
	.byte	32,1,4
	.word	3855
	.byte	5
	.byte	'__codeptr',0,8,1,1
	.word	3857
	.byte	5
	.byte	'__intptr_t',0,8,1,1
	.word	1934
	.byte	5
	.byte	'__uintptr_t',0,8,1,1
	.word	3583
	.byte	5
	.byte	'size_t',0,9,24,25
	.word	3583
	.byte	2
	.byte	'unsigned short int',0,2,7,5
	.byte	'_iob_flag_t',0,4,82,25
	.word	3934
	.byte	26,24
	.word	2006
	.byte	27,5,0,33
	.byte	'verboseLevelStr',0,10,29,20
	.word	3976
	.byte	1,1,5
	.byte	'uint8',0,11,89,24
	.word	190
	.byte	5
	.byte	'sint16',0,11,90,24
	.word	251
	.byte	5
	.byte	'uint16',0,11,91,24
	.word	3934
	.byte	5
	.byte	'sint32',0,11,92,24
	.word	376
	.byte	5
	.byte	'uint32',0,11,93,24
	.word	923
	.byte	5
	.byte	'float32',0,11,94,24
	.word	3415
	.byte	5
	.byte	'float64',0,11,95,24
	.word	3415
	.byte	5
	.byte	'boolean',0,11,104,24
	.word	190
	.byte	5
	.byte	'sint64',0,5,36,28
	.word	269
	.byte	5
	.byte	'uint64',0,5,37,28
	.word	1832
	.byte	5
	.byte	'pvoid',0,5,40,28
	.word	213
	.byte	5
	.byte	'Ifx_TickTime',0,5,43,28
	.word	269
	.byte	5
	.byte	'Ifx_SizeT',0,5,56,16
	.word	251
	.byte	5
	.byte	'IfxStdIf_DPipe',0,1,51,32
	.word	1093
	.byte	8
	.word	190
	.byte	4
	.word	4239
	.byte	5
	.byte	'IfxStdIf_DPipe_WriteEvent',0,1,53,32
	.word	4244
	.byte	5
	.byte	'IfxStdIf_DPipe_ReadEvent',0,1,54,32
	.word	4244
	.byte	5
	.byte	'Ifx_Shell_Command',0,6,76,3
	.word	2318
	.byte	5
	.byte	'Ifx_Shell_CmdLine',0,6,86,3
	.word	2815
	.byte	5
	.byte	'Ifx_Shell_CmdState',0,6,95,3
	.word	2940
	.byte	5
	.byte	'Ifx_Shell_Protocol',0,6,106,3
	.word	2448
	.byte	5
	.byte	'Ifx_Shell_Flags',0,6,116,3
	.word	2691
	.byte	5
	.byte	'Ifx_Shell_Runtime',0,6,126,3
	.word	3085
	.byte	5
	.byte	'Ifx_Shell',0,6,150,1,3
	.word	3189
	.byte	5
	.byte	'Ifx_Shell_Config',0,6,163,1,3
	.word	2557
	.byte	5
	.byte	'Ifx_Shell_Syntax',0,6,169,1,3
	.word	3444
.L734:
	.byte	26,128,10
	.word	1993
	.byte	27,255,9,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L315:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,22,0,3,8,58,15,59,15,57,15,73,19,0,0,6,21,1,73,19,54,15,39,12,0,0,7,5,0,73,19,0,0,8,53,0,73,19,0,0
	.byte	9,21,1,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,13,5,0,3,8,58,15,59,15,57,15,73,19,0,0,14,11,0,0,0
	.byte	15,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,16,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,17,38
	.byte	0,73,19,0,0,18,55,0,73,19,0,0,19,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,20,5,0,58
	.byte	15,59,15,57,15,73,19,0,0,21,24,0,58,15,59,15,57,15,0,0,22,46,1,49,19,0,0,23,5,0,49,19,0,0,24,46,1,3,8
	.byte	58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,25,19,1,58,15,59,15,57,15,11,15,0,0,26,1,1,11,15,73,19,0
	.byte	0,27,33,0,47,15,0,0,28,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,29,4,1,58,15,59,15,57,15,11,15,0,0,30
	.byte	40,0,3,8,28,13,0,0,31,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,32,21,0,54,15,0,0,33,52,0,3,8,58
	.byte	15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L316:
	.word	.L939-.L938
.L938:
	.half	3
	.word	.L941-.L940
.L940:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_common\\ifx_cfg\\include',0
	.byte	0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'stdio.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.h',0,0,0,0
	.byte	'string.h',0,1,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'stddef.h',0,1,0,0
	.byte	'Ifx_Cfg.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0,0
.L941:
.L939:
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_info'
.L317:
	.word	267
	.half	3
	.word	.L318
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L320,.L319
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_initConfig',0,1,180,1,6,1,1,1
	.word	.L252,.L499,.L251
	.byte	4
	.byte	'config',0,1,180,1,45
	.word	.L500,.L501
	.byte	5
	.word	.L252,.L499
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_abbrev'
.L318:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_line'
.L319:
	.word	.L943-.L942
.L942:
	.half	3
	.word	.L945-.L944
.L944:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L945:
	.byte	5,34,7,0,5,2
	.word	.L252
	.byte	3,185,1,1,5,32,9
	.half	.L946-.L252
	.byte	1,5,36,9
	.half	.L947-.L946
	.byte	3,4,1,5,34,1,9
	.half	.L948-.L947
	.byte	3,1,1,9
	.half	.L949-.L948
	.byte	3,1,1,9
	.half	.L950-.L949
	.byte	3,1,1,9
	.half	.L951-.L950
	.byte	3,1,1,9
	.half	.L952-.L951
	.byte	3,1,1,5,36,9
	.half	.L953-.L952
	.byte	3,1,1,5,34,1,9
	.half	.L954-.L953
	.byte	3,1,1,9
	.half	.L955-.L954
	.byte	3,1,1,5,1,9
	.half	.L956-.L955
	.byte	3,2,1,9
	.half	.L321-.L956
	.byte	0,1,1
.L943:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_ranges'
.L320:
	.word	-1,.L252,0,.L321-.L252,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_info'
.L322:
	.word	324
	.half	3
	.word	.L323
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L325,.L324
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_init',0,1,203,1,9
	.word	.L502
	.byte	1,1,1
	.word	.L254,.L503,.L253
	.byte	4
	.byte	'shell',0,1,203,1,35
	.word	.L504,.L505
	.byte	4
	.byte	'config',0,1,203,1,66
	.word	.L506,.L507
	.byte	5
	.word	.L254,.L503
	.byte	6
	.byte	'i',0,1,205,1,12
	.word	.L508,.L509
	.byte	6
	.byte	'CmdHistory',0,1,206,1,12
	.word	.L510,.L511
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_abbrev'
.L323:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_line'
.L324:
	.word	.L958-.L957
.L957:
	.half	3
	.word	.L960-.L959
.L959:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L960:
	.byte	5,19,7,0,5,2
	.word	.L254
	.byte	3,208,1,1,5,9,3,122,1,5,22,9
	.half	.L779-.L254
	.byte	3,6,1,5,9,3,122,1,5,22,9
	.half	.L780-.L779
	.byte	3,6,1,5,43,9
	.half	.L778-.L780
	.byte	3,2,1,5,35,9
	.half	.L961-.L778
	.byte	1,5,37,9
	.half	.L962-.L961
	.byte	3,1,1,5,35,1,5,12,9
	.half	.L963-.L962
	.byte	3,16,1,5,43,9
	.half	.L964-.L963
	.byte	3,114,1,5,35,9
	.half	.L965-.L964
	.byte	1,5,36,9
	.half	.L966-.L965
	.byte	3,14,1,5,30,3,125,1,5,19,9
	.half	.L967-.L966
	.byte	3,118,1,5,43,9
	.half	.L968-.L967
	.byte	1,5,12,9
	.half	.L969-.L968
	.byte	3,13,1,5,35,9
	.half	.L970-.L969
	.byte	3,115,1,5,36,9
	.half	.L971-.L970
	.byte	3,13,1,5,43,9
	.half	.L972-.L971
	.byte	3,116,1,5,35,9
	.half	.L973-.L972
	.byte	1,5,43,9
	.half	.L974-.L973
	.byte	3,1,1,5,35,9
	.half	.L975-.L974
	.byte	1,9
	.half	.L976-.L975
	.byte	3,1,1,9
	.half	.L977-.L976
	.byte	3,1,1,9
	.half	.L978-.L977
	.byte	3,2,1,9
	.half	.L979-.L978
	.byte	3,1,1,5,23,9
	.half	.L980-.L979
	.byte	3,3,1,5,36,9
	.half	.L981-.L980
	.byte	3,3,1,5,26,9
	.half	.L982-.L981
	.byte	3,1,1,5,47,9
	.half	.L983-.L982
	.byte	3,10,1,5,52,9
	.half	.L984-.L983
	.byte	3,122,1,5,31,9
	.half	.L985-.L984
	.byte	1,5,23,9
	.half	.L986-.L985
	.byte	3,4,1,5,39,9
	.half	.L781-.L986
	.byte	3,4,1,5,36,9
	.half	.L24-.L781
	.byte	1,5,43,9
	.half	.L987-.L24
	.byte	1,5,23,9
	.half	.L988-.L987
	.byte	1,5,47,3,126,1,5,30,7,9
	.half	.L989-.L988
	.byte	3,5,1,5,28,1,5,27,9
	.half	.L990-.L989
	.byte	3,3,1,5,22,9
	.half	.L991-.L990
	.byte	1,5,27,9
	.half	.L992-.L991
	.byte	1,5,22,9
	.half	.L782-.L992
	.byte	3,1,1,5,27,9
	.half	.L993-.L782
	.byte	1,5,23,9
	.half	.L994-.L993
	.byte	3,2,1,5,5,9
	.half	.L995-.L994
	.byte	1,5,35,7,9
	.half	.L996-.L995
	.byte	3,2,1,5,41,9
	.half	.L997-.L996
	.byte	1,5,35,9
	.half	.L998-.L997
	.byte	3,1,1,5,41,9
	.half	.L999-.L998
	.byte	1,5,12,9
	.half	.L25-.L999
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L326-.L25
	.byte	0,1,1
.L958:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_ranges'
.L325:
	.word	-1,.L254,0,.L326-.L254,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_info'
.L327:
	.word	262
	.half	3
	.word	.L328
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L330,.L329
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_deinit',0,1,136,4,6,1,1,1
	.word	.L272,.L512,.L271
	.byte	4
	.byte	'shell',0,1,136,4,34
	.word	.L504,.L513
	.byte	5
	.word	.L272,.L512
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_abbrev'
.L328:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_line'
.L329:
	.word	.L1001-.L1000
.L1000:
	.half	3
	.word	.L1003-.L1002
.L1002:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1003:
	.byte	5,1,7,0,5,2
	.word	.L272
	.byte	3,139,4,1,7,9
	.half	.L331-.L272
	.byte	0,1,1
.L1001:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_ranges'
.L330:
	.word	-1,.L272,0,.L331-.L272,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_info'
.L332:
	.word	299
	.half	3
	.word	.L333
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L335,.L334
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_enable',0,1,249,8,6,1,1,1
	.word	.L308,.L514,.L307
	.byte	4
	.byte	'shell',0,1,249,8,34
	.word	.L504,.L515
	.byte	5
	.word	.L308,.L514
	.byte	6
	.word	.L516,.L517,.L518
	.byte	7
	.word	.L519,.L520
	.byte	8
	.word	.L521,.L517,.L518
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_abbrev'
.L333:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_line'
.L334:
	.word	.L1005-.L1004
.L1004:
	.half	3
	.word	.L1007-.L1006
.L1006:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1007:
	.byte	5,6,7,0,5,2
	.word	.L308
	.byte	3,248,8,1,5,33,9
	.half	.L930-.L308
	.byte	3,3,1,4,2,5,10,9
	.half	.L517-.L930
	.byte	3,200,121,1,5,25,9
	.half	.L1008-.L517
	.byte	1,4,1,5,19,9
	.half	.L518-.L1008
	.byte	3,186,6,1,5,28,9
	.half	.L1009-.L518
	.byte	1,5,1,9
	.half	.L1010-.L1009
	.byte	3,1,1,7,9
	.half	.L336-.L1010
	.byte	0,1,1
.L1005:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_ranges'
.L335:
	.word	-1,.L308,0,.L336-.L308,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_info'
.L337:
	.word	263
	.half	3
	.word	.L338
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L340,.L339
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_disable',0,1,130,9,6,1,1,1
	.word	.L310,.L522,.L309
	.byte	4
	.byte	'shell',0,1,130,9,35
	.word	.L504,.L523
	.byte	5
	.word	.L310,.L522
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_abbrev'
.L338:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_line'
.L339:
	.word	.L1012-.L1011
.L1011:
	.half	3
	.word	.L1014-.L1013
.L1013:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1014:
	.byte	5,19,7,0,5,2
	.word	.L310
	.byte	3,131,9,1,5,28,9
	.half	.L1015-.L310
	.byte	1,5,1,9
	.half	.L1016-.L1015
	.byte	3,1,1,7,9
	.half	.L341-.L1016
	.byte	0,1,1
.L1012:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_ranges'
.L340:
	.word	-1,.L310,0,.L341-.L310,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_info'
.L342:
	.word	555
	.half	3
	.word	.L343
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L345,.L344
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_process',0,1,132,2,6,1,1,1
	.word	.L256,.L524,.L255
	.byte	4
	.byte	'shell',0,1,132,2,35
	.word	.L504,.L525
	.byte	5
	.word	.L526
	.byte	6
	.byte	'i',0,1,134,2,24
	.word	.L527,.L528
	.byte	6
	.byte	'j',0,1,134,2,27
	.word	.L527,.L529
	.byte	6
	.byte	'count',0,1,135,2,24
	.word	.L527,.L530
	.byte	6
	.byte	'readCount',0,1,136,2,24
	.word	.L527,.L531
	.byte	6
	.byte	'NormalKeyPress',0,1,137,2,24
	.word	.L502,.L532
	.byte	6
	.byte	'Cmd',0,1,139,2,24
	.word	.L533,.L534
	.byte	6
	.byte	'inputbuffer',0,1,140,2,24
	.word	.L535,.L536
	.byte	6
	.byte	'cmdStr',0,1,141,2,24
	.word	.L535,.L537
	.byte	6
	.byte	'CmdHistory',0,1,142,2,24
	.word	.L510,.L538
	.byte	7
	.byte	'__func__',0,1,224,3,13
	.word	.L539
	.byte	5,3
	.word	_999002___func__
	.byte	8
	.word	.L540,.L541,.L542
	.byte	9
	.word	.L543,.L544
	.byte	9
	.word	.L545,.L546
	.byte	9
	.word	.L547,.L548
	.byte	9
	.word	.L549,.L550
	.byte	10
	.word	.L551,.L541,.L542
	.byte	0,5
	.word	.L552
	.byte	6
	.byte	'ii',0,1,250,2,25
	.word	.L554,.L555
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_abbrev'
.L343:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5
	.byte	0,49,16,2,6,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_line'
.L344:
	.word	.L1018-.L1017
.L1017:
	.half	3
	.word	.L1020-.L1019
.L1019:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1020:
	.byte	5,6,7,0,5,2
	.word	.L256
	.byte	3,131,2,1,5,43,9
	.half	.L783-.L256
	.byte	3,8,1,5,23,9
	.half	.L785-.L783
	.byte	3,4,1,5,43,9
	.half	.L1021-.L785
	.byte	3,124,1,9
	.half	.L802-.L1021
	.byte	3,2,1,9
	.half	.L797-.L802
	.byte	3,127,1,5,5,9
	.half	.L800-.L797
	.byte	3,3,1,5,25,7,9
	.half	.L1022-.L800
	.byte	3,5,1,5,9,9
	.half	.L784-.L1022
	.byte	1,5,65,7,9
	.half	.L1023-.L784
	.byte	1,5,74,9
	.half	.L1024-.L1023
	.byte	1,5,24,7,9
	.half	.L1025-.L1024
	.byte	3,2,1,5,48,9
	.half	.L787-.L1025
	.byte	1,5,45,7,9
	.half	.L28-.L787
	.byte	3,20,1,5,34,3,1,1,5,19,9
	.half	.L788-.L28
	.byte	3,127,1,4,2,5,52,9
	.half	.L541-.L788
	.byte	3,81,1,4,1,5,62,3,48,1,4,2,5,52,9
	.half	.L1026-.L541
	.byte	3,80,1,5,17,9
	.half	.L789-.L1026
	.byte	1,5,29,9
	.half	.L1027-.L789
	.byte	1,5,52,9
	.half	.L1028-.L1027
	.byte	1,4,1,5,18,9
	.half	.L542-.L1028
	.byte	3,51,1,5,21,3,126,1,5,16,9
	.half	.L801-.L542
	.byte	3,2,1,5,30,1,5,32,9
	.half	.L32-.L801
	.byte	3,6,1,5,18,9
	.half	.L790-.L32
	.byte	3,51,1,5,28,9
	.half	.L1029-.L790
	.byte	3,74,1,5,32,9
	.half	.L799-.L1029
	.byte	3,3,1,5,18,9
	.half	.L1030-.L799
	.byte	3,51,1,7,9
	.half	.L1031-.L1030
	.byte	3,80,1,9
	.half	.L1032-.L1031
	.byte	3,1,1,9
	.half	.L1033-.L1032
	.byte	3,212,0,1,9
	.half	.L1034-.L1033
	.byte	3,41,1,9
	.half	.L1035-.L1034
	.byte	3,1,1,9
	.half	.L1036-.L1035
	.byte	3,1,1,9
	.half	.L1037-.L1036
	.byte	3,1,1,9
	.half	.L1038-.L1037
	.byte	3,104,1,9
	.half	.L1039-.L1038
	.byte	3,1,1,9
	.half	.L1040-.L1039
	.byte	3,1,1,9
	.half	.L1041-.L1040
	.byte	3,1,1,9
	.half	.L1042-.L1041
	.byte	3,110,1,9
	.half	.L1043-.L1042
	.byte	3,55,1,5,17,9
	.half	.L34-.L1043
	.byte	3,242,126,1,5,24,9
	.half	.L48-.L34
	.byte	3,4,1,5,35,9
	.half	.L1044-.L48
	.byte	1,5,17,9
	.half	.L1045-.L1044
	.byte	1,5,27,7,9
	.half	.L1046-.L1045
	.byte	3,2,1,5,43,9
	.half	.L791-.L1046
	.byte	1,5,41,9
	.half	.L1047-.L791
	.byte	1,5,28,9
	.half	.L1048-.L1047
	.byte	3,2,1,5,21,9
	.half	.L1049-.L1048
	.byte	1,5,62,7,9
	.half	.L1050-.L1049
	.byte	3,6,1,5,71,9
	.half	.L1051-.L1050
	.byte	3,125,1,5,47,9
	.half	.L51-.L1051
	.byte	3,3,1,5,62,9
	.half	.L1052-.L51
	.byte	1,5,71,9
	.half	.L1053-.L1052
	.byte	1,9
	.half	.L1054-.L1053
	.byte	3,125,1,5,43,7,9
	.half	.L1055-.L1054
	.byte	3,7,1,5,56,9
	.half	.L792-.L1055
	.byte	1,5,43,9
	.half	.L793-.L792
	.byte	1,5,56,9
	.half	.L1056-.L793
	.byte	1,5,46,9
	.half	.L50-.L1056
	.byte	3,4,1,5,35,9
	.half	.L49-.L50
	.byte	3,4,1,5,17,9
	.half	.L1057-.L49
	.byte	1,5,47,7,9
	.half	.L1058-.L1057
	.byte	3,2,1,5,53,9
	.half	.L1059-.L1058
	.byte	1,5,29,9
	.half	.L52-.L1059
	.byte	3,4,1,9
	.half	.L1060-.L52
	.byte	3,3,1,5,33,9
	.half	.L1061-.L1060
	.byte	3,3,1,5,36,9
	.half	.L1062-.L1061
	.byte	3,3,1,5,34,1,5,17,9
	.half	.L1063-.L1062
	.byte	3,1,1,5,24,9
	.half	.L33-.L1063
	.byte	3,5,1,5,17,9
	.half	.L1064-.L33
	.byte	1,5,39,7,9
	.half	.L1065-.L1064
	.byte	3,3,1,5,21,9
	.half	.L1066-.L1065
	.byte	1,5,51,7,9
	.half	.L1067-.L1066
	.byte	3,3,1,5,57,9
	.half	.L1068-.L1067
	.byte	1,5,37,9
	.half	.L1069-.L1068
	.byte	3,3,1,5,73,9
	.half	.L803-.L1069
	.byte	3,2,1,5,62,9
	.half	.L796-.L803
	.byte	3,126,1,5,73,9
	.half	.L57-.L796
	.byte	3,2,1,5,55,9
	.half	.L1070-.L57
	.byte	1,5,61,9
	.half	.L1071-.L1070
	.byte	1,5,65,9
	.half	.L1072-.L1071
	.byte	3,126,1,5,54,9
	.half	.L56-.L1072
	.byte	1,5,62,9
	.half	.L1073-.L56
	.byte	1,5,57,7,9
	.half	.L1074-.L1073
	.byte	3,6,1,5,25,9
	.half	.L553-.L1074
	.byte	3,1,1,5,40,9
	.half	.L55-.L553
	.byte	3,4,1,5,80,9
	.half	.L1075-.L55
	.byte	1,5,36,9
	.half	.L1076-.L1075
	.byte	1,5,62,9
	.half	.L1077-.L1076
	.byte	1,5,89,9
	.half	.L1078-.L1077
	.byte	1,5,36,1,5,89,9
	.half	.L1079-.L1078
	.byte	1,5,31,9
	.half	.L1080-.L1079
	.byte	3,3,1,5,27,9
	.half	.L1081-.L1080
	.byte	1,5,47,9
	.half	.L1082-.L1081
	.byte	1,5,45,9
	.half	.L1083-.L1082
	.byte	1,5,24,9
	.half	.L1084-.L1083
	.byte	3,2,1,5,32,9
	.half	.L1085-.L1084
	.byte	1,5,24,9
	.half	.L1086-.L1085
	.byte	3,1,1,5,32,9
	.half	.L1087-.L1086
	.byte	1,5,39,9
	.half	.L1088-.L1087
	.byte	3,3,1,5,37,1,5,17,9
	.half	.L1089-.L1088
	.byte	3,3,1,5,42,9
	.half	.L36-.L1089
	.byte	3,4,1,5,17,3,1,1,5,34,9
	.half	.L45-.L36
	.byte	3,5,1,5,17,9
	.half	.L1090-.L45
	.byte	1,5,46,7,9
	.half	.L1091-.L1090
	.byte	3,3,1,5,80,1,5,34,9
	.half	.L41-.L1091
	.byte	3,15,1,5,17,9
	.half	.L1092-.L41
	.byte	1,5,71,7,9
	.half	.L1093-.L1092
	.byte	3,3,1,5,73,1,5,34,9
	.half	.L37-.L1093
	.byte	3,18,1,5,17,9
	.half	.L1094-.L37
	.byte	1,5,49,7,9
	.half	.L1095-.L1094
	.byte	3,3,1,5,51,9
	.half	.L1096-.L1095
	.byte	3,1,1,5,65,3,127,1,5,34,9
	.half	.L46-.L1096
	.byte	3,13,1,5,17,9
	.half	.L1097-.L46
	.byte	1,5,84,7,9
	.half	.L1098-.L1097
	.byte	3,3,1,5,68,1,5,84,9
	.half	.L65-.L1098
	.byte	1,5,46,9
	.half	.L809-.L65
	.byte	3,3,1,5,44,9
	.half	.L61-.L809
	.byte	1,5,88,9
	.half	.L1099-.L61
	.byte	3,125,1,5,32,9
	.half	.L47-.L1099
	.byte	3,14,1,5,13,9
	.half	.L53-.L47
	.byte	3,4,1,9
	.half	.L70-.L53
	.byte	3,4,1,5,42,7,9
	.half	.L1100-.L70
	.byte	3,3,1,5,40,1,5,24,9
	.half	.L1101-.L1100
	.byte	3,3,1,5,60,9
	.half	.L1102-.L1101
	.byte	1,5,17,9
	.half	.L1103-.L1102
	.byte	1,5,39,7,9
	.half	.L1104-.L1103
	.byte	3,3,1,5,37,1,5,54,9
	.half	.L1105-.L1104
	.byte	3,3,1,5,31,9
	.half	.L811-.L1105
	.byte	1,5,27,9
	.half	.L1106-.L811
	.byte	1,5,54,9
	.half	.L1107-.L1106
	.byte	1,5,41,9
	.half	.L1108-.L1107
	.byte	1,5,24,9
	.half	.L1109-.L1108
	.byte	3,1,1,5,32,9
	.half	.L1110-.L1109
	.byte	1,5,44,9
	.half	.L810-.L1110
	.byte	3,3,1,5,40,9
	.half	.L812-.L810
	.byte	1,5,33,1,5,39,9
	.half	.L1111-.L812
	.byte	3,2,1,5,21,9
	.half	.L1112-.L1111
	.byte	1,5,60,7,9
	.half	.L1113-.L1112
	.byte	3,3,1,5,47,9
	.half	.L1114-.L1113
	.byte	1,5,62,9
	.half	.L1115-.L1114
	.byte	3,1,1,5,51,9
	.half	.L1116-.L1115
	.byte	1,5,70,9
	.half	.L1117-.L1116
	.byte	1,5,21,9
	.half	.L1118-.L1117
	.byte	3,124,1,5,37,9
	.half	.L72-.L1118
	.byte	3,10,1,5,33,9
	.half	.L71-.L72
	.byte	3,175,126,1,5,30,9
	.half	.L31-.L71
	.byte	1,5,1,7,9
	.half	.L27-.L31
	.byte	3,214,1,1,7,9
	.half	.L346-.L27
	.byte	0,1,1
.L1018:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_ranges'
.L345:
	.word	-1,.L256,0,.L346-.L256,0,0
.L526:
	.word	-1,.L256,0,.L524-.L256,-1,.L258,0,.L496-.L258,-1,.L262,0,.L486-.L262,-1,.L264,0,.L471-.L264,-1,.L266,0
	.word	.L466-.L266,-1,.L268,0,.L461-.L268,-1,.L270,0,.L456-.L270,0,0
.L552:
	.word	-1,.L256,.L553-.L256,.L55-.L256,-1,.L260,0,.L491-.L260,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_info'
.L347:
	.word	273
	.half	3
	.word	.L348
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L350,.L349
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_skipWhitespace',0,1,143,4,7
	.word	.L556
	.byte	1,1,1
	.word	.L274,.L557,.L273
	.byte	4
	.byte	'args',0,1,143,4,38
	.word	.L556,.L558
	.byte	5
	.word	.L274,.L557
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_abbrev'
.L348:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_line'
.L349:
	.word	.L1120-.L1119
.L1119:
	.half	3
	.word	.L1122-.L1121
.L1121:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1122:
	.byte	5,5,7,0,5,2
	.word	.L274
	.byte	3,144,4,1,5,66,7,9
	.half	.L1123-.L274
	.byte	3,2,1,5,25,9
	.half	.L78-.L1123
	.byte	3,2,1,5,17,9
	.half	.L76-.L78
	.byte	3,126,1,5,16,9
	.half	.L1124-.L76
	.byte	1,5,51,7,9
	.half	.L1125-.L1124
	.byte	1,5,5,9
	.half	.L75-.L1125
	.byte	3,6,1,5,1,9
	.half	.L816-.L75
	.byte	3,1,1,7,9
	.half	.L351-.L816
	.byte	0,1,1
.L1120:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_ranges'
.L350:
	.word	-1,.L274,0,.L351-.L274,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_info'
.L352:
	.word	360
	.half	3
	.word	.L353
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L355,.L354
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_matchToken',0,1,157,4,9
	.word	.L502
	.byte	1,1,1
	.word	.L276,.L559,.L275
	.byte	4
	.byte	'argsPtr',0,1,157,4,37
	.word	.L560,.L561
	.byte	4
	.byte	'token',0,1,157,4,52
	.word	.L556,.L562
	.byte	5
	.word	.L276,.L559
	.byte	6
	.byte	'savedArguments',0,1,159,4,13
	.word	.L556,.L563
	.byte	6
	.byte	'buffer',0,1,160,4,13
	.word	.L564,.L565
	.byte	6
	.byte	'result',0,1,161,4,13
	.word	.L502,.L566
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_abbrev'
.L353:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_line'
.L354:
	.word	.L1127-.L1126
.L1126:
	.half	3
	.word	.L1129-.L1128
.L1128:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1129:
	.byte	5,9,7,0,5,2
	.word	.L276
	.byte	3,156,4,1,5,30,9
	.half	.L821-.L276
	.byte	3,2,1,5,28,9
	.half	.L822-.L821
	.byte	3,2,1,5,39,3,2,1,5,47,9
	.half	.L819-.L822
	.byte	1,5,5,9
	.half	.L818-.L819
	.byte	1,5,27,7,9
	.half	.L1130-.L818
	.byte	3,2,1,5,20,9
	.half	.L824-.L1130
	.byte	3,2,1,5,5,9
	.half	.L81-.L824
	.byte	3,4,1,5,18,7,9
	.half	.L1131-.L81
	.byte	3,3,1,5,5,9
	.half	.L83-.L1131
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L356-.L83
	.byte	0,1,1
.L1127:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_ranges'
.L355:
	.word	-1,.L276,0,.L356-.L276,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_info'
.L357:
	.word	362
	.half	3
	.word	.L358
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L360,.L359
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseToken',0,1,209,4,9
	.word	.L502
	.byte	1,1,1
	.word	.L280,.L567,.L279
	.byte	4
	.byte	'argsPtr',0,1,209,4,37
	.word	.L560,.L568
	.byte	4
	.byte	'tokenBuffer',0,1,209,4,52
	.word	.L535,.L569
	.byte	4
	.byte	'bufferLength',0,1,209,4,69
	.word	.L554,.L570
	.byte	5
	.word	.L280,.L567
	.byte	6
	.byte	'mindex',0,1,211,4,11
	.word	.L554,.L571
	.byte	6
	.byte	'args',0,1,212,4,11
	.word	.L556,.L572
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_abbrev'
.L358:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_line'
.L359:
	.word	.L1133-.L1132
.L1132:
	.half	3
	.word	.L1135-.L1134
.L1134:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1135:
	.byte	5,9,7,0,5,2
	.word	.L280
	.byte	3,208,4,1,5,18,9
	.half	.L836-.L280
	.byte	3,2,1,5,45,3,1,1,5,9,9
	.half	.L834-.L836
	.byte	3,125,1,5,45,9
	.half	.L838-.L834
	.byte	3,3,1,5,22,9
	.half	.L835-.L838
	.byte	3,2,1,5,20,1,5,5,9
	.half	.L1136-.L835
	.byte	3,2,1,5,9,7,9
	.half	.L1137-.L1136
	.byte	3,5,1,5,18,9
	.half	.L1138-.L1137
	.byte	1,5,5,9
	.half	.L1139-.L1138
	.byte	1,5,65,7,9
	.half	.L1140-.L1139
	.byte	3,4,1,5,13,9
	.half	.L93-.L1140
	.byte	3,2,1,5,23,7,9
	.half	.L1141-.L93
	.byte	3,3,1,5,39,3,127,1,5,37,9
	.half	.L1142-.L1141
	.byte	1,5,17,9
	.half	.L92-.L1142
	.byte	3,124,1,5,16,9
	.half	.L1143-.L92
	.byte	1,5,60,7,9
	.half	.L1144-.L1143
	.byte	1,5,57,9
	.half	.L1145-.L1144
	.byte	1,5,22,7,9
	.half	.L95-.L1145
	.byte	3,12,1,5,9,9
	.half	.L1146-.L95
	.byte	1,5,21,7,9
	.half	.L1147-.L1146
	.byte	3,5,1,5,24,9
	.half	.L1148-.L1147
	.byte	1,5,9,9
	.half	.L91-.L1148
	.byte	3,5,1,5,20,7,9
	.half	.L90-.L91
	.byte	3,2,1,5,1,3,24,1,5,67,7,9
	.half	.L98-.L90
	.byte	3,107,1,5,13,9
	.half	.L101-.L98
	.byte	3,2,1,5,23,7,9
	.half	.L1149-.L101
	.byte	3,3,1,5,39,3,127,1,5,37,9
	.half	.L1150-.L1149
	.byte	1,5,25,9
	.half	.L102-.L1150
	.byte	3,4,1,5,17,9
	.half	.L100-.L102
	.byte	3,120,1,5,16,9
	.half	.L1151-.L100
	.byte	1,5,52,7,9
	.half	.L1152-.L1151
	.byte	1,5,5,9
	.half	.L97-.L1152
	.byte	3,13,1,5,48,7,9
	.half	.L1153-.L97
	.byte	3,2,1,5,26,9
	.half	.L837-.L1153
	.byte	1,5,20,9
	.half	.L1154-.L837
	.byte	1,5,56,9
	.half	.L839-.L1154
	.byte	1,5,54,9
	.half	.L1155-.L839
	.byte	1,5,41,9
	.half	.L105-.L1155
	.byte	3,3,1,5,14,9
	.half	.L840-.L105
	.byte	1,5,12,9
	.half	.L1156-.L840
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L361-.L1156
	.byte	0,1,1
.L1133:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_ranges'
.L360:
	.word	-1,.L280,0,.L361-.L280,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_info'
.L362:
	.word	336
	.half	3
	.word	.L363
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L365,.L364
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseAddress',0,1,148,5,9
	.word	.L502
	.byte	1,1,1
	.word	.L282,.L573,.L281
	.byte	4
	.byte	'argsPtr',0,1,148,5,39
	.word	.L560,.L574
	.byte	4
	.byte	'address',0,1,148,5,55
	.word	.L575,.L576
	.byte	5
	.word	.L282,.L573
	.byte	6
	.byte	'buffer',0,1,150,5,13
	.word	.L577,.L578
	.byte	6
	.byte	'result',0,1,151,5,13
	.word	.L502,.L579
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_abbrev'
.L363:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_line'
.L364:
	.word	.L1158-.L1157
.L1157:
	.half	3
	.word	.L1160-.L1159
.L1159:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1160:
	.byte	5,9,7,0,5,2
	.word	.L282
	.byte	3,147,5,1,5,16,9
	.half	.L845-.L282
	.byte	3,5,1,5,14,9
	.half	.L1161-.L845
	.byte	1,5,39,9
	.half	.L1162-.L1161
	.byte	3,2,1,5,47,9
	.half	.L843-.L1162
	.byte	1,5,5,9
	.half	.L844-.L843
	.byte	1,5,16,7,9
	.half	.L1163-.L844
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L107-.L1163
	.byte	3,4,1,5,53,9
	.half	.L1164-.L107
	.byte	1,5,18,9
	.half	.L846-.L1164
	.byte	1,5,79,7,9
	.half	.L1165-.L846
	.byte	1,5,64,9
	.half	.L1166-.L1165
	.byte	1,5,72,9
	.half	.L1167-.L1166
	.byte	1,5,104,9
	.half	.L1168-.L1167
	.byte	1,5,53,9
	.half	.L1169-.L1168
	.byte	1,5,5,9
	.half	.L108-.L1169
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L366-.L108
	.byte	0,1,1
.L1158:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_ranges'
.L365:
	.word	-1,.L282,0,.L366-.L282,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_info'
.L367:
	.word	334
	.half	3
	.word	.L368
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L370,.L369
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseSInt32',0,1,168,5,9
	.word	.L502
	.byte	1,1,1
	.word	.L284,.L580,.L283
	.byte	4
	.byte	'argsPtr',0,1,168,5,38
	.word	.L560,.L581
	.byte	4
	.byte	'value',0,1,168,5,55
	.word	.L582,.L583
	.byte	5
	.word	.L284,.L580
	.byte	6
	.byte	'value64',0,1,170,5,13
	.word	.L584,.L585
	.byte	6
	.byte	'result',0,1,171,5,13
	.word	.L502,.L586
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_abbrev'
.L368:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_line'
.L369:
	.word	.L1171-.L1170
.L1170:
	.half	3
	.word	.L1173-.L1172
.L1172:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1173:
	.byte	5,9,7,0,5,2
	.word	.L284
	.byte	3,167,5,1,5,14,9
	.half	.L850-.L284
	.byte	3,5,1,5,12,1,5,41,9
	.half	.L1174-.L850
	.byte	3,2,1,5,5,9
	.half	.L848-.L1174
	.byte	1,5,1,7,9
	.half	.L1175-.L848
	.byte	3,11,1,5,26,7,9
	.half	.L112-.L1175
	.byte	3,123,1,5,16,9
	.half	.L1176-.L112
	.byte	1,9
	.half	.L1177-.L1176
	.byte	3,1,1,5,1,3,4,1,7,9
	.half	.L371-.L1177
	.byte	0,1,1
.L1171:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_ranges'
.L370:
	.word	-1,.L284,0,.L371-.L284,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_info'
.L372:
	.word	351
	.half	3
	.word	.L373
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L375,.L374
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseUInt32',0,1,189,5,9
	.word	.L502
	.byte	1,1,1
	.word	.L286,.L587,.L285
	.byte	4
	.byte	'argsPtr',0,1,189,5,38
	.word	.L560,.L588
	.byte	4
	.byte	'value',0,1,189,5,55
	.word	.L589,.L590
	.byte	4
	.byte	'hex',0,1,189,5,70
	.word	.L502,.L591
	.byte	5
	.word	.L286,.L587
	.byte	6
	.byte	'value64',0,1,191,5,13
	.word	.L592,.L593
	.byte	6
	.byte	'result',0,1,192,5,13
	.word	.L502,.L594
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_abbrev'
.L373:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_line'
.L374:
	.word	.L1179-.L1178
.L1178:
	.half	3
	.word	.L1181-.L1180
.L1180:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1181:
	.byte	5,9,7,0,5,2
	.word	.L286
	.byte	3,188,5,1,5,14,9
	.half	.L854-.L286
	.byte	3,5,1,5,12,1,5,41,9
	.half	.L1182-.L854
	.byte	3,2,1,5,50,9
	.half	.L853-.L1182
	.byte	1,5,5,9
	.half	.L852-.L853
	.byte	1,5,1,7,9
	.half	.L1183-.L852
	.byte	3,11,1,5,26,7,9
	.half	.L115-.L1183
	.byte	3,123,1,5,16,9
	.half	.L1184-.L115
	.byte	1,9
	.half	.L1185-.L1184
	.byte	3,1,1,5,1,3,4,1,7,9
	.half	.L376-.L1185
	.byte	0,1,1
.L1179:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_ranges'
.L375:
	.word	-1,.L286,0,.L376-.L286,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_info'
.L377:
	.word	333
	.half	3
	.word	.L378
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L380,.L379
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseSInt64',0,1,210,5,9
	.word	.L502
	.byte	1,1,1
	.word	.L288,.L595,.L287
	.byte	4
	.byte	'argsPtr',0,1,210,5,38
	.word	.L560,.L596
	.byte	4
	.byte	'value',0,1,210,5,55
	.word	.L597,.L598
	.byte	5
	.word	.L288,.L595
	.byte	6
	.byte	'buffer',0,1,212,5,13
	.word	.L599,.L600
	.byte	6
	.byte	'result',0,1,213,5,13
	.word	.L502,.L601
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_abbrev'
.L378:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_line'
.L379:
	.word	.L1187-.L1186
.L1186:
	.half	3
	.word	.L1189-.L1188
.L1188:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1189:
	.byte	5,9,7,0,5,2
	.word	.L288
	.byte	3,209,5,1,5,14,9
	.half	.L858-.L288
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1190-.L858
	.byte	3,2,1,5,47,9
	.half	.L857-.L1190
	.byte	1,5,5,9
	.half	.L856-.L857
	.byte	1,5,16,7,9
	.half	.L1191-.L856
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L118-.L1191
	.byte	3,4,1,5,53,9
	.half	.L1192-.L118
	.byte	1,5,18,9
	.half	.L859-.L1192
	.byte	1,5,87,7,9
	.half	.L1193-.L859
	.byte	1,5,64,9
	.half	.L1194-.L1193
	.byte	1,5,72,9
	.half	.L1195-.L1194
	.byte	1,5,94,9
	.half	.L1196-.L1195
	.byte	1,5,53,9
	.half	.L1197-.L1196
	.byte	1,5,5,9
	.half	.L119-.L1197
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L381-.L119
	.byte	0,1,1
.L1187:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_ranges'
.L380:
	.word	-1,.L288,0,.L381-.L288,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_info'
.L382:
	.word	387
	.half	3
	.word	.L383
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L385,.L384
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseUInt64',0,1,230,5,9
	.word	.L502
	.byte	1,1,1
	.word	.L290,.L602,.L289
	.byte	4
	.byte	'argsPtr',0,1,230,5,38
	.word	.L560,.L603
	.byte	4
	.byte	'value',0,1,230,5,55
	.word	.L604,.L605
	.byte	4
	.byte	'hex',0,1,230,5,70
	.word	.L502,.L606
	.byte	5
	.word	.L290,.L602
	.byte	6
	.byte	'buffer',0,1,232,5,13
	.word	.L599,.L607
	.byte	6
	.byte	'result',0,1,233,5,13
	.word	.L502,.L608
	.byte	5
	.word	.L123,.L124
	.byte	6
	.byte	'bufferPointer',0,1,243,5,15
	.word	.L535,.L609
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_abbrev'
.L383:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_line'
.L384:
	.word	.L1199-.L1198
.L1198:
	.half	3
	.word	.L1201-.L1200
.L1200:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1201:
	.byte	5,9,7,0,5,2
	.word	.L290
	.byte	3,229,5,1,5,47,9
	.half	.L860-.L290
	.byte	3,7,1,5,9,3,121,1,5,14,9
	.half	.L862-.L860
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1202-.L862
	.byte	3,2,1,5,47,9
	.half	.L863-.L1202
	.byte	1,5,5,9
	.half	.L861-.L863
	.byte	1,5,16,7,9
	.half	.L1203-.L861
	.byte	3,2,1,5,23,1,5,27,9
	.half	.L123-.L1203
	.byte	3,6,1,5,20,1,5,31,9
	.half	.L1204-.L123
	.byte	3,126,1,5,13,9
	.half	.L865-.L1204
	.byte	3,2,1,5,42,7,9
	.half	.L1205-.L865
	.byte	1,5,49,9
	.half	.L1206-.L1205
	.byte	1,5,46,9
	.half	.L1207-.L1206
	.byte	1,5,27,7,9
	.half	.L1208-.L1207
	.byte	3,3,1,5,43,3,127,1,5,36,9
	.half	.L125-.L1208
	.byte	3,6,1,5,9,9
	.half	.L1209-.L125
	.byte	3,126,1,5,64,7,9
	.half	.L1210-.L1209
	.byte	3,2,1,5,22,9
	.half	.L864-.L1210
	.byte	1,5,105,7,9
	.half	.L1211-.L864
	.byte	1,5,90,9
	.half	.L1212-.L1211
	.byte	1,5,112,9
	.half	.L866-.L1212
	.byte	1,5,64,9
	.half	.L1213-.L866
	.byte	1,5,117,1,5,22,9
	.half	.L127-.L1213
	.byte	3,4,1,5,105,7,9
	.half	.L1214-.L127
	.byte	1,5,90,9
	.half	.L1215-.L1214
	.byte	1,5,112,9
	.half	.L867-.L1215
	.byte	1,5,64,9
	.half	.L868-.L867
	.byte	1,5,5,9
	.half	.L124-.L868
	.byte	3,4,1,5,1,3,1,1,7,9
	.half	.L386-.L124
	.byte	0,1,1
.L1199:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_ranges'
.L385:
	.word	-1,.L290,0,.L386-.L290,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_info'
.L387:
	.word	334
	.half	3
	.word	.L388
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L390,.L389
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseFloat64',0,1,137,6,9
	.word	.L502
	.byte	1,1,1
	.word	.L292,.L610,.L291
	.byte	4
	.byte	'argsPtr',0,1,137,6,39
	.word	.L560,.L611
	.byte	4
	.byte	'value',0,1,137,6,57
	.word	.L612,.L613
	.byte	5
	.word	.L292,.L610
	.byte	6
	.byte	'buffer',0,1,139,6,13
	.word	.L599,.L614
	.byte	6
	.byte	'result',0,1,140,6,13
	.word	.L502,.L615
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_abbrev'
.L388:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_line'
.L389:
	.word	.L1217-.L1216
.L1216:
	.half	3
	.word	.L1219-.L1218
.L1218:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1219:
	.byte	5,9,7,0,5,2
	.word	.L292
	.byte	3,136,6,1,5,14,9
	.half	.L872-.L292
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1220-.L872
	.byte	3,2,1,5,47,9
	.half	.L871-.L1220
	.byte	1,5,5,9
	.half	.L870-.L871
	.byte	1,5,16,7,9
	.half	.L1221-.L870
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L134-.L1221
	.byte	3,4,1,5,53,9
	.half	.L1222-.L134
	.byte	1,5,18,9
	.half	.L873-.L1222
	.byte	1,5,80,7,9
	.half	.L1223-.L873
	.byte	1,5,64,9
	.half	.L1224-.L1223
	.byte	1,5,72,9
	.half	.L1225-.L1224
	.byte	1,5,87,9
	.half	.L1226-.L1225
	.byte	1,5,53,9
	.half	.L1227-.L1226
	.byte	1,5,5,9
	.half	.L135-.L1227
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L391-.L135
	.byte	0,1,1
.L1217:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_ranges'
.L390:
	.word	-1,.L292,0,.L391-.L292,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_info'
.L392:
	.word	334
	.half	3
	.word	.L393
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L395,.L394
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_parseFloat32',0,1,157,6,9
	.word	.L502
	.byte	1,1,1
	.word	.L294,.L616,.L293
	.byte	4
	.byte	'argsPtr',0,1,157,6,39
	.word	.L560,.L617
	.byte	4
	.byte	'value',0,1,157,6,57
	.word	.L618,.L619
	.byte	5
	.word	.L294,.L616
	.byte	6
	.byte	'buffer',0,1,159,6,13
	.word	.L599,.L620
	.byte	6
	.byte	'result',0,1,160,6,13
	.word	.L502,.L621
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_abbrev'
.L393:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_line'
.L394:
	.word	.L1229-.L1228
.L1228:
	.half	3
	.word	.L1231-.L1230
.L1230:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1231:
	.byte	5,9,7,0,5,2
	.word	.L294
	.byte	3,156,6,1,5,14,9
	.half	.L877-.L294
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1232-.L877
	.byte	3,2,1,5,47,9
	.half	.L876-.L1232
	.byte	1,5,5,9
	.half	.L875-.L876
	.byte	1,5,16,7,9
	.half	.L1233-.L875
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L139-.L1233
	.byte	3,4,1,5,53,9
	.half	.L1234-.L139
	.byte	1,5,18,9
	.half	.L878-.L1234
	.byte	1,5,79,7,9
	.half	.L1235-.L878
	.byte	1,5,64,9
	.half	.L1236-.L1235
	.byte	1,5,72,9
	.half	.L1237-.L1236
	.byte	1,5,86,9
	.half	.L1238-.L1237
	.byte	1,5,53,9
	.half	.L1239-.L1238
	.byte	1,5,5,9
	.half	.L140-.L1239
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L396-.L140
	.byte	0,1,1
.L1229:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_ranges'
.L395:
	.word	-1,.L294,0,.L396-.L294,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_info'
.L397:
	.word	472
	.half	3
	.word	.L398
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L400,.L399
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_commandFind',0,1,177,6,26
	.word	.L622
	.byte	1,1,1
	.word	.L296,.L623,.L295
	.byte	4
	.byte	'commandList',0,1,177,6,73
	.word	.L622,.L624
	.byte	4
	.byte	'commandLine',0,1,177,6,92
	.word	.L556,.L625
	.byte	4
	.byte	'args',0,1,177,6,112
	.word	.L560,.L626
	.byte	5
	.word	.L296,.L623
	.byte	6
	.byte	'command',0,1,179,6,30
	.word	.L622,.L627
	.byte	6
	.byte	'result',0,1,180,6,30
	.word	.L622,.L628
	.byte	5
	.word	.L145,.L144
	.byte	6
	.byte	'commandTemp',0,1,184,6,17
	.word	.L556,.L629
	.byte	6
	.byte	'commandLineTemp',0,1,185,6,17
	.word	.L556,.L630
	.byte	6
	.byte	'buffer',0,1,186,6,17
	.word	.L564,.L631
	.byte	6
	.byte	'commandFound',0,1,187,6,17
	.word	.L502,.L632
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_abbrev'
.L398:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_line'
.L399:
	.word	.L1241-.L1240
.L1240:
	.half	3
	.word	.L1243-.L1242
.L1242:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1243:
	.byte	5,26,7,0,5,2
	.word	.L296
	.byte	3,176,6,1,5,38,9
	.half	.L882-.L296
	.byte	3,2,1,9
	.half	.L883-.L882
	.byte	3,1,1,5,44,9
	.half	.L884-.L883
	.byte	3,2,1,5,49,9
	.half	.L145-.L884
	.byte	3,2,1,5,33,9
	.half	.L1244-.L145
	.byte	1,9
	.half	.L1245-.L1244
	.byte	3,1,1,9
	.half	.L1246-.L1245
	.byte	3,2,1,5,79,3,2,1,5,26,9
	.half	.L147-.L1246
	.byte	3,2,1,5,40,9
	.half	.L146-.L147
	.byte	3,126,1,5,58,9
	.half	.L1247-.L146
	.byte	1,5,79,9
	.half	.L1248-.L1247
	.byte	1,5,13,7,9
	.half	.L1249-.L1248
	.byte	3,5,1,5,63,7,9
	.half	.L1250-.L1249
	.byte	1,5,76,9
	.half	.L1251-.L1250
	.byte	1,5,84,9
	.half	.L1252-.L1251
	.byte	1,5,105,9
	.half	.L1253-.L1252
	.byte	1,5,22,7,9
	.half	.L1254-.L1253
	.byte	3,2,1,5,20,9
	.half	.L881-.L1254
	.byte	1,9
	.half	.L1255-.L881
	.byte	3,1,1,5,13,9
	.half	.L1256-.L1255
	.byte	3,1,1,5,27,9
	.half	.L148-.L1256
	.byte	3,3,1,5,19,9
	.half	.L144-.L148
	.byte	3,109,1,5,44,9
	.half	.L1257-.L144
	.byte	1,5,5,7,9
	.half	.L150-.L1257
	.byte	3,22,1,5,1,9
	.half	.L885-.L150
	.byte	3,1,1,7,9
	.half	.L401-.L885
	.byte	0,1,1
.L1241:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_ranges'
.L400:
	.word	-1,.L296,0,.L401-.L296,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_info'
.L402:
	.word	333
	.half	3
	.word	.L403
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L405,.L404
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_showHelpSingle',0,1,85,9
	.word	.L502
	.byte	1,1,1
	.word	.L244,.L633,.L243
	.byte	4
	.byte	'prefix',0,1,85,40
	.word	.L556,.L634
	.byte	4
	.byte	'commandList',0,1,85,60
	.word	.L635,.L636
	.byte	4
	.byte	'io',0,1,85,89
	.word	.L637,.L638
	.byte	5
	.word	.L244,.L633
	.byte	6
	.byte	'command',0,1,87,30
	.word	.L622,.L639
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_abbrev'
.L403:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_line'
.L404:
	.word	.L1259-.L1258
.L1258:
	.half	3
	.word	.L1261-.L1260
.L1260:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1261:
	.byte	5,9,7,0,5,2
	.word	.L244
	.byte	3,212,0,1,5,38,9
	.half	.L740-.L244
	.byte	3,2,1,5,44,9
	.half	.L741-.L740
	.byte	3,2,1,5,13,9
	.half	.L5-.L741
	.byte	3,2,1,5,44,7,9
	.half	.L1262-.L5
	.byte	1,5,48,9
	.half	.L1263-.L1262
	.byte	1,5,45,7,9
	.half	.L1264-.L1263
	.byte	3,2,1,5,38,9
	.half	.L1265-.L1264
	.byte	1,5,41,9
	.half	.L6-.L1265
	.byte	3,3,1,9
	.half	.L744-.L6
	.byte	3,1,1,5,34,9
	.half	.L746-.L744
	.byte	3,1,1,5,27,9
	.half	.L748-.L746
	.byte	3,1,1,5,19,9
	.half	.L4-.L748
	.byte	3,118,1,5,44,9
	.half	.L1266-.L4
	.byte	1,5,12,7,9
	.half	.L1267-.L1266
	.byte	3,13,1,5,1,3,1,1,7,9
	.half	.L406-.L1267
	.byte	0,1,1
.L1259:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_ranges'
.L405:
	.word	-1,.L244,0,.L406-.L244,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_info'
.L407:
	.word	320
	.half	3
	.word	.L408
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L410,.L409
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_showHelp',0,1,106,9
	.word	.L502
	.byte	1,1,1
	.word	.L246,.L640,.L245
	.byte	4
	.byte	'args',0,1,106,34
	.word	.L556,.L641
	.byte	4
	.byte	'shellPtr',0,1,106,46
	.word	.L642,.L643
	.byte	4
	.byte	'io',0,1,106,72
	.word	.L637,.L644
	.byte	5
	.word	.L246,.L640
	.byte	6
	.byte	'shell',0,1,109,16
	.word	.L504,.L645
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_abbrev'
.L408:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_line'
.L409:
	.word	.L1269-.L1268
.L1268:
	.half	3
	.word	.L1271-.L1270
.L1270:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1271:
	.byte	5,31,7,0,5,2
	.word	.L246
	.byte	3,242,0,1,5,9,9
	.half	.L750-.L246
	.byte	1,5,38,7,9
	.half	.L1272-.L750
	.byte	3,2,1,5,65,9
	.half	.L749-.L1272
	.byte	1,5,12,9
	.half	.L9-.L749
	.byte	3,4,1,5,1,3,1,1,7,9
	.half	.L411-.L9
	.byte	0,1,1
.L1269:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_ranges'
.L410:
	.word	-1,.L246,0,.L411-.L246,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_info'
.L412:
	.word	309
	.half	3
	.word	.L413
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L415,.L414
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_printSyntax',0,1,136,9,6,1,1,1
	.word	.L312,.L646,.L311
	.byte	4
	.byte	'syntaxList',0,1,136,9,52
	.word	.L647,.L648
	.byte	4
	.byte	'io',0,1,136,9,80
	.word	.L637,.L649
	.byte	5
	.word	.L312,.L646
	.byte	6
	.byte	'syntax',0,1,138,9,29
	.word	.L647,.L650
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_abbrev'
.L413:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_line'
.L414:
	.word	.L1274-.L1273
.L1273:
	.half	3
	.word	.L1276-.L1275
.L1275:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1276:
	.byte	5,6,7,0,5,2
	.word	.L312
	.byte	3,135,9,1,5,36,9
	.half	.L932-.L312
	.byte	3,2,1,5,38,9
	.half	.L933-.L932
	.byte	3,2,1,5,64,9
	.half	.L240-.L933
	.byte	3,2,1,5,34,9
	.half	.L1277-.L240
	.byte	1,5,64,9
	.half	.L935-.L1277
	.byte	3,1,1,5,34,9
	.half	.L1278-.L935
	.byte	1,5,25,9
	.half	.L937-.L1278
	.byte	3,1,1,5,18,9
	.half	.L239-.L937
	.byte	3,124,1,5,38,9
	.half	.L1279-.L239
	.byte	1,5,1,7,9
	.half	.L1280-.L1279
	.byte	3,6,1,7,9
	.half	.L416-.L1280
	.byte	0,1,1
.L1274:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_ranges'
.L415:
	.word	-1,.L312,0,.L416-.L312,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_info'
.L417:
	.word	341
	.half	3
	.word	.L418
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L420,.L419
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_protocolStart',0,1,125,9
	.word	.L502
	.byte	1,1,1
	.word	.L248,.L651,.L247
	.byte	4
	.byte	'args',0,1,125,39
	.word	.L556,.L652
	.byte	4
	.byte	'data',0,1,125,51
	.word	.L642,.L653
	.byte	4
	.byte	'io',0,1,125,73
	.word	.L637,.L654
	.byte	5
	.word	.L248,.L651
	.byte	6
	.byte	'shell',0,1,127,16
	.word	.L504,.L655
	.byte	6
	.byte	'Result',0,1,128,1,16
	.word	.L502,.L656
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_abbrev'
.L418:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_line'
.L419:
	.word	.L1282-.L1281
.L1281:
	.half	3
	.word	.L1284-.L1283
.L1283:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1284:
	.byte	5,9,7,0,5,2
	.word	.L248
	.byte	3,252,0,1,5,23,9
	.half	.L756-.L248
	.byte	3,3,1,5,31,3,2,1,5,37,9
	.half	.L752-.L756
	.byte	1,5,5,9
	.half	.L754-.L752
	.byte	1,5,34,7,9
	.half	.L1285-.L754
	.byte	3,2,1,9
	.half	.L759-.L1285
	.byte	3,1,1,5,69,9
	.half	.L761-.L759
	.byte	3,127,1,5,36,9
	.half	.L11-.L761
	.byte	3,3,1,5,42,9
	.half	.L1286-.L11
	.byte	1,5,10,9
	.half	.L1287-.L1286
	.byte	1,5,29,7,9
	.half	.L1288-.L1287
	.byte	3,2,1,5,13,9
	.half	.L1289-.L1288
	.byte	1,5,68,7,9
	.half	.L1290-.L1289
	.byte	1,5,76,9
	.half	.L1291-.L1290
	.byte	1,5,85,7,9
	.half	.L1292-.L1291
	.byte	3,2,1,5,37,9
	.half	.L757-.L1292
	.byte	1,5,47,9
	.half	.L764-.L757
	.byte	3,1,1,5,37,1,5,32,9
	.half	.L1293-.L764
	.byte	3,2,1,5,13,9
	.half	.L1294-.L1293
	.byte	1,5,56,7,9
	.half	.L1295-.L1294
	.byte	3,2,1,5,80,9
	.half	.L1296-.L1295
	.byte	1,5,13,9
	.half	.L763-.L1296
	.byte	3,126,1,5,20,9
	.half	.L14-.L763
	.byte	3,7,1,5,5,9
	.half	.L12-.L14
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L421-.L12
	.byte	0,1,1
.L1282:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_ranges'
.L420:
	.word	-1,.L248,0,.L421-.L248,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_info'
.L422:
	.word	329
	.half	3
	.word	.L423
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L425,.L424
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_bbProtocolStart',0,1,159,1,9
	.word	.L502
	.byte	1,1,1
	.word	.L250,.L657,.L249
	.byte	4
	.byte	'args',0,1,159,1,41
	.word	.L556,.L658
	.byte	4
	.byte	'data',0,1,159,1,53
	.word	.L642,.L659
	.byte	4
	.byte	'io',0,1,159,1,75
	.word	.L637,.L660
	.byte	5
	.word	.L250,.L657
	.byte	6
	.byte	'result',0,1,161,1,13
	.word	.L502,.L661
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_abbrev'
.L423:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_line'
.L424:
	.word	.L1298-.L1297
.L1297:
	.half	3
	.word	.L1300-.L1299
.L1299:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1300:
	.byte	5,9,7,0,5,2
	.word	.L250
	.byte	3,158,1,1,5,20,9
	.half	.L770-.L250
	.byte	3,2,1,5,31,3,2,1,5,37,9
	.half	.L766-.L770
	.byte	1,5,5,9
	.half	.L768-.L766
	.byte	1,5,34,7,9
	.half	.L1301-.L768
	.byte	3,2,1,9
	.half	.L773-.L1301
	.byte	3,1,1,5,69,9
	.half	.L775-.L773
	.byte	3,127,1,5,36,9
	.half	.L19-.L775
	.byte	3,3,1,5,42,9
	.half	.L1302-.L19
	.byte	1,5,10,9
	.half	.L1303-.L1302
	.byte	1,5,42,7,9
	.half	.L1304-.L1303
	.byte	3,2,1,5,54,9
	.half	.L1305-.L1304
	.byte	1,5,16,9
	.half	.L771-.L1305
	.byte	1,5,5,9
	.half	.L20-.L771
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L426-.L20
	.byte	0,1,1
.L1298:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_ranges'
.L425:
	.word	-1,.L250,0,.L426-.L250,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_info'
.L427:
	.word	333
	.half	3
	.word	.L428
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L430,.L429
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_execute',0,1,230,6,6,1,1,1
	.word	.L300,.L662,.L299
	.byte	4
	.byte	'shell',0,1,230,6,35
	.word	.L504,.L663
	.byte	4
	.byte	'commandLine',0,1,230,6,48
	.word	.L556,.L664
	.byte	5
	.word	.L300,.L662
	.byte	6
	.byte	'args',0,1,232,6,30
	.word	.L556,.L665
	.byte	6
	.byte	'shellCommand',0,1,233,6,30
	.word	.L622,.L666
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_abbrev'
.L428:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_line'
.L429:
	.word	.L1307-.L1306
.L1306:
	.half	3
	.word	.L1309-.L1308
.L1308:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1309:
	.byte	5,6,7,0,5,2
	.word	.L300
	.byte	3,229,6,1,5,45,9
	.half	.L891-.L300
	.byte	3,2,1,5,43,9
	.half	.L1310-.L891
	.byte	1,5,92,9
	.half	.L1311-.L1310
	.byte	3,1,1,5,5,9
	.half	.L889-.L1311
	.byte	3,2,1,5,25,7,9
	.half	.L1312-.L889
	.byte	3,2,1,5,32,9
	.half	.L1313-.L1312
	.byte	1,5,50,9
	.half	.L1314-.L1313
	.byte	1,5,63,9
	.half	.L1315-.L1314
	.byte	1,5,9,9
	.half	.L892-.L1315
	.byte	1,5,31,7,9
	.half	.L1316-.L892
	.byte	3,2,1,5,13,9
	.half	.L1317-.L1316
	.byte	1,5,46,7,9
	.half	.L1318-.L1317
	.byte	3,2,1,5,13,3,126,1,5,31,9
	.half	.L155-.L1318
	.byte	3,7,1,5,13,9
	.half	.L1319-.L155
	.byte	1,5,46,7,9
	.half	.L1320-.L1319
	.byte	3,2,1,5,71,1,5,18,9
	.half	.L158-.L1320
	.byte	3,2,1,5,49,7,9
	.half	.L1321-.L158
	.byte	3,2,1,5,9,9
	.half	.L1322-.L1321
	.byte	3,120,1,5,24,9
	.half	.L154-.L1322
	.byte	3,16,1,5,9,9
	.half	.L1323-.L154
	.byte	1,5,31,7,9
	.half	.L1324-.L1323
	.byte	3,2,1,5,13,9
	.half	.L1325-.L1324
	.byte	1,5,46,7,9
	.half	.L1326-.L1325
	.byte	3,2,1,5,18,9
	.half	.L163-.L1326
	.byte	3,2,1,5,49,7,9
	.half	.L1327-.L163
	.byte	3,2,1,5,43,9
	.half	.L161-.L1327
	.byte	1,5,81,9
	.half	.L1328-.L161
	.byte	1,5,49,9
	.half	.L1329-.L1328
	.byte	1,5,1,7,9
	.half	.L156-.L1329
	.byte	3,6,1,7,9
	.half	.L431-.L156
	.byte	0,1,1
.L1307:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_ranges'
.L430:
	.word	-1,.L300,0,.L431-.L300,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_info'
.L432:
	.word	727
	.half	3
	.word	.L433
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L435,.L434
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_cmdEscapeProcess',0,1,160,7,6,1,1,1
	.word	.L302,.L667,.L301
	.byte	4
	.byte	'shell',0,1,160,7,44
	.word	.L504,.L668
	.byte	4
	.byte	'EscapeChar1',0,1,160,7,56
	.word	.L669,.L670
	.byte	4
	.byte	'EscapeChar2',0,1,160,7,74
	.word	.L669,.L671
	.byte	5
	.word	.L672
	.byte	6
	.byte	'Cmd',0,1,162,7,24
	.word	.L533,.L673
	.byte	6
	.byte	'cmdStr',0,1,163,7,24
	.word	.L535,.L674
	.byte	6
	.byte	'i',0,1,164,7,24
	.word	.L508,.L675
	.byte	6
	.byte	'result',0,1,167,7,24
	.word	.L502,.L676
	.byte	7
	.byte	'__func__',0,1,169,7,5
	.word	.L677
	.byte	5,3
	.word	_999003___func__
	.byte	8
	.word	.L678,.L679
	.byte	6
	.byte	'ii',0,1,210,7,13
	.word	.L554,.L680
	.byte	0,8
	.word	.L679,.L681
	.byte	6
	.byte	'ii',0,1,211,7,13
	.word	.L554,.L682
	.byte	0,8
	.word	.L681,.L683
	.byte	6
	.byte	'ii',0,1,212,7,13
	.word	.L554,.L684
	.byte	0,8
	.word	.L685,.L686
	.byte	6
	.byte	'ii',0,1,228,7,17
	.word	.L554,.L687
	.byte	0,8
	.word	.L686,.L688
	.byte	6
	.byte	'ii',0,1,229,7,17
	.word	.L554,.L689
	.byte	0,8
	.word	.L688,.L189
	.byte	6
	.byte	'ii',0,1,230,7,17
	.word	.L554,.L690
	.byte	0,8
	.word	.L691,.L692
	.byte	6
	.byte	'ii',0,1,247,7,17
	.word	.L554,.L693
	.byte	0,8
	.word	.L692,.L694
	.byte	6
	.byte	'ii',0,1,248,7,17
	.word	.L554,.L695
	.byte	0,8
	.word	.L694,.L186
	.byte	6
	.byte	'ii',0,1,249,7,17
	.word	.L554,.L696
	.byte	0,8
	.word	.L697,.L698
	.byte	6
	.byte	'ii',0,1,165,8,17
	.word	.L554,.L699
	.byte	0,8
	.word	.L700,.L221
	.byte	6
	.byte	'ii',0,1,187,8,21
	.word	.L554,.L701
	.byte	0,8
	.word	.L702,.L230
	.byte	6
	.byte	'ii',0,1,221,8,21
	.word	.L554,.L703
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_abbrev'
.L433:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_line'
.L434:
	.word	.L1331-.L1330
.L1330:
	.half	3
	.word	.L1333-.L1332
.L1332:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1333:
	.byte	5,6,7,0,5,2
	.word	.L302
	.byte	3,159,7,1,5,43,9
	.half	.L898-.L302
	.byte	3,7,1,5,40,9
	.half	.L896-.L898
	.byte	1,5,6,9
	.half	.L897-.L896
	.byte	3,121,1,5,5,9
	.half	.L894-.L897
	.byte	3,9,1,7,9
	.half	.L1334-.L894
	.byte	1,9
	.half	.L166-.L1334
	.byte	3,2,1,5,17,7,9
	.half	.L1335-.L166
	.byte	3,7,1,5,5,9
	.half	.L903-.L1335
	.byte	3,3,1,7,9
	.half	.L1336-.L903
	.byte	1,9
	.half	.L168-.L1336
	.byte	3,1,1,9
	.half	.L169-.L168
	.byte	3,1,1,5,10,9
	.half	.L170-.L169
	.byte	3,5,1,9
	.half	.L1337-.L170
	.byte	3,33,1,9
	.half	.L1338-.L1337
	.byte	3,39,1,9
	.half	.L1339-.L1338
	.byte	3,10,1,5,16,9
	.half	.L171-.L1339
	.byte	3,176,127,1,5,9,9
	.half	.L1340-.L171
	.byte	1,5,32,7,9
	.half	.L1341-.L1340
	.byte	3,3,1,5,33,1,5,64,9
	.half	.L176-.L1341
	.byte	3,4,1,5,13,9
	.half	.L1342-.L176
	.byte	1,5,33,7,9
	.half	.L1343-.L1342
	.byte	3,3,1,5,46,9
	.half	.L178-.L1343
	.byte	3,5,1,5,62,9
	.half	.L910-.L178
	.byte	1,5,27,9
	.half	.L911-.L910
	.byte	3,3,1,5,9,9
	.half	.L1344-.L911
	.byte	1,5,13,7,9
	.half	.L678-.L1344
	.byte	3,2,1,9
	.half	.L679-.L678
	.byte	3,1,1,9
	.half	.L681-.L679
	.byte	3,1,1,5,9,9
	.half	.L683-.L681
	.byte	3,7,1,5,17,9
	.half	.L172-.L683
	.byte	3,4,1,5,13,9
	.half	.L1345-.L172
	.byte	1,5,86,7,9
	.half	.L1346-.L1345
	.byte	1,5,31,7,9
	.half	.L187-.L1346
	.byte	3,3,1,5,13,9
	.half	.L1347-.L187
	.byte	1,5,17,7,9
	.half	.L685-.L1347
	.byte	3,2,1,9
	.half	.L686-.L685
	.byte	3,1,1,9
	.half	.L688-.L686
	.byte	3,1,1,5,32,9
	.half	.L189-.L688
	.byte	3,3,1,5,30,1,9
	.half	.L1348-.L189
	.byte	3,1,1,5,32,9
	.half	.L1349-.L1348
	.byte	3,1,1,5,30,1,5,33,9
	.half	.L1350-.L1349
	.byte	3,126,1,5,29,9
	.half	.L188-.L1350
	.byte	3,7,1,5,50,9
	.half	.L916-.L188
	.byte	3,3,1,5,66,9
	.half	.L917-.L916
	.byte	1,5,31,9
	.half	.L918-.L917
	.byte	3,2,1,5,13,9
	.half	.L1351-.L918
	.byte	1,5,17,7,9
	.half	.L691-.L1351
	.byte	3,2,1,9
	.half	.L692-.L691
	.byte	3,1,1,9
	.half	.L694-.L692
	.byte	3,1,1,5,43,9
	.half	.L186-.L694
	.byte	3,1,1,5,49,9
	.half	.L1352-.L186
	.byte	1,5,45,9
	.half	.L179-.L1352
	.byte	3,3,1,5,25,9
	.half	.L923-.L179
	.byte	1,5,30,9
	.half	.L1353-.L923
	.byte	3,1,1,5,25,9
	.half	.L1354-.L1353
	.byte	1,5,27,9
	.half	.L196-.L1354
	.byte	3,3,1,5,25,1,5,9,9
	.half	.L1355-.L196
	.byte	3,1,1,5,16,9
	.half	.L173-.L1355
	.byte	3,4,1,5,30,9
	.half	.L1356-.L173
	.byte	1,5,9,9
	.half	.L1357-.L1356
	.byte	1,5,13,7,9
	.half	.L1358-.L1357
	.byte	3,3,1,5,94,9
	.half	.L206-.L1358
	.byte	1,5,102,9
	.half	.L1359-.L206
	.byte	1,5,9,3,3,1,5,16,9
	.half	.L174-.L1359
	.byte	3,4,1,5,9,9
	.half	.L1360-.L174
	.byte	1,5,13,7,9
	.half	.L1361-.L1360
	.byte	3,3,1,5,73,9
	.half	.L209-.L1361
	.byte	1,5,81,9
	.half	.L1362-.L209
	.byte	1,5,24,9
	.half	.L175-.L1362
	.byte	3,10,1,5,5,9
	.half	.L1363-.L175
	.byte	1,5,14,7,9
	.half	.L1364-.L1363
	.byte	3,4,1,9
	.half	.L1365-.L1364
	.byte	3,9,1,9
	.half	.L1366-.L1365
	.byte	3,34,1,9
	.half	.L1367-.L1366
	.byte	3,29,1,5,1,9
	.half	.L167-.L1367
	.byte	3,13,1,5,20,7,9
	.half	.L211-.L167
	.byte	3,173,127,1,5,13,9
	.half	.L1368-.L211
	.byte	1,5,17,7,9
	.half	.L697-.L1368
	.byte	3,2,1,5,71,9
	.half	.L698-.L697
	.byte	1,5,69,1,5,1,9
	.half	.L216-.L698
	.byte	3,209,0,1,5,35,7,9
	.half	.L212-.L216
	.byte	3,182,127,1,5,21,9
	.half	.L1369-.L212
	.byte	1,5,17,9
	.half	.L1370-.L1369
	.byte	1,5,88,7,9
	.half	.L1371-.L1370
	.byte	1,5,61,9
	.half	.L1372-.L1371
	.byte	1,5,35,7,9
	.half	.L1373-.L1372
	.byte	3,3,1,5,17,9
	.half	.L1374-.L1373
	.byte	1,5,47,7,9
	.half	.L1375-.L1374
	.byte	3,3,1,5,53,9
	.half	.L1376-.L1375
	.byte	1,5,33,9
	.half	.L1377-.L1376
	.byte	3,3,1,5,69,9
	.half	.L924-.L1377
	.byte	3,2,1,5,58,9
	.half	.L1378-.L924
	.byte	3,126,1,5,69,9
	.half	.L223-.L1378
	.byte	3,2,1,5,51,9
	.half	.L1379-.L223
	.byte	1,5,57,9
	.half	.L1380-.L1379
	.byte	1,5,61,9
	.half	.L1381-.L1380
	.byte	3,126,1,5,50,9
	.half	.L222-.L1381
	.byte	1,5,58,9
	.half	.L1382-.L222
	.byte	1,5,21,7,9
	.half	.L700-.L1382
	.byte	3,6,1,5,29,9
	.half	.L221-.L700
	.byte	3,4,1,5,39,9
	.half	.L926-.L221
	.byte	3,2,1,5,54,9
	.half	.L1383-.L926
	.byte	3,126,1,5,57,9
	.half	.L227-.L1383
	.byte	1,5,44,3,2,1,5,39,9
	.half	.L1384-.L227
	.byte	1,5,31,9
	.half	.L1385-.L1384
	.byte	1,5,57,9
	.half	.L1386-.L1385
	.byte	3,126,1,5,46,9
	.half	.L226-.L1386
	.byte	1,5,54,9
	.half	.L1387-.L226
	.byte	1,5,27,7,9
	.half	.L1388-.L1387
	.byte	3,5,1,5,23,9
	.half	.L927-.L1388
	.byte	1,5,43,9
	.half	.L1389-.L927
	.byte	1,5,41,9
	.half	.L1390-.L1389
	.byte	1,5,27,9
	.half	.L1391-.L1390
	.byte	3,1,1,5,23,9
	.half	.L1392-.L1391
	.byte	1,5,43,9
	.half	.L1393-.L1392
	.byte	1,5,41,9
	.half	.L1394-.L1393
	.byte	1,5,20,9
	.half	.L1395-.L1394
	.byte	3,2,1,5,28,9
	.half	.L1396-.L1395
	.byte	1,5,13,3,3,1,5,34,9
	.half	.L213-.L1396
	.byte	3,4,1,5,20,9
	.half	.L1397-.L213
	.byte	1,5,13,9
	.half	.L928-.L1397
	.byte	1,5,35,7,9
	.half	.L1398-.L928
	.byte	3,3,1,5,17,9
	.half	.L1399-.L1398
	.byte	1,5,69,7,9
	.half	.L1400-.L1399
	.byte	3,5,1,5,60,9
	.half	.L1401-.L1400
	.byte	3,125,1,5,69,9
	.half	.L1402-.L1401
	.byte	3,3,1,5,64,9
	.half	.L1403-.L1402
	.byte	3,125,1,5,69,7,9
	.half	.L232-.L1403
	.byte	3,3,1,5,51,9
	.half	.L1404-.L232
	.byte	1,5,57,9
	.half	.L1405-.L1404
	.byte	1,5,51,9
	.half	.L1406-.L1405
	.byte	3,125,1,5,67,9
	.half	.L1407-.L1406
	.byte	1,5,60,9
	.half	.L1408-.L1407
	.byte	1,5,64,9
	.half	.L1409-.L1408
	.byte	1,5,53,7,9
	.half	.L231-.L1409
	.byte	3,7,1,5,21,9
	.half	.L702-.L231
	.byte	3,3,1,5,36,9
	.half	.L230-.L702
	.byte	3,4,1,5,76,9
	.half	.L1410-.L230
	.byte	1,5,32,9
	.half	.L1411-.L1410
	.byte	1,5,85,9
	.half	.L1412-.L1411
	.byte	1,5,54,9
	.half	.L1413-.L1412
	.byte	1,5,99,9
	.half	.L1414-.L1413
	.byte	1,5,27,9
	.half	.L1415-.L1414
	.byte	3,2,1,5,23,9
	.half	.L1416-.L1415
	.byte	1,5,43,9
	.half	.L1417-.L1416
	.byte	1,5,41,9
	.half	.L1418-.L1417
	.byte	1,5,20,9
	.half	.L1419-.L1418
	.byte	3,1,1,5,28,9
	.half	.L1420-.L1419
	.byte	1,5,1,9
	.half	.L219-.L1420
	.byte	3,18,1,5,17,7,9
	.half	.L237-.L219
	.byte	3,119,1,5,98,9
	.half	.L238-.L237
	.byte	1,5,106,9
	.half	.L1421-.L238
	.byte	1,5,23,9
	.half	.L236-.L1421
	.byte	3,126,1,5,37,9
	.half	.L1422-.L236
	.byte	1,5,45,9
	.half	.L1423-.L1422
	.byte	1,5,1,7,9
	.half	.L1424-.L1423
	.byte	3,11,1,7,9
	.half	.L436-.L1424
	.byte	0,1,1
.L1331:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_ranges'
.L435:
	.word	-1,.L302,0,.L436-.L302,0,0
.L672:
	.word	-1,.L302,0,.L667-.L302,-1,.L304,0,.L481-.L304,-1,.L306,0,.L476-.L306,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_info'
.L437:
	.word	391
	.half	3
	.word	.L438
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L440,.L439
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_writeResult',0,1,73,16
	.word	.L502
	.byte	1,1
	.word	.L242,.L704,.L241
	.byte	4
	.byte	'shell',0,1,73,49
	.word	.L504,.L705
	.byte	4
	.byte	'Code',0,1,73,66
	.word	.L527,.L706
	.byte	5
	.word	.L242,.L704
	.byte	6
	.byte	'length',0,1,75,15
	.word	.L527,.L707
	.byte	7
	.byte	'__func__',0,1,78,5
	.word	.L708
	.byte	5,3
	.word	_999001___func__
	.byte	8
	.word	.L709,.L710,.L711
	.byte	9
	.word	.L712,.L713
	.byte	9
	.word	.L714,.L715
	.byte	9
	.word	.L716,.L717
	.byte	9
	.word	.L718,.L719
	.byte	10
	.word	.L720,.L710,.L711
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_abbrev'
.L438:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,29,1,49,16,17,1,18,1,0
	.byte	0,9,5,0,49,16,2,6,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_line'
.L439:
	.word	.L1426-.L1425
.L1425:
	.half	3
	.word	.L1428-.L1427
.L1427:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L1428:
	.byte	5,16,7,0,5,2
	.word	.L242
	.byte	3,200,0,1,5,24,9
	.half	.L735-.L242
	.byte	3,2,1,5,16,3,126,1,5,50,9
	.half	.L1429-.L735
	.byte	3,3,1,5,22,9
	.half	.L1430-.L1429
	.byte	3,127,1,5,57,9
	.half	.L710-.L1430
	.byte	3,1,1,5,64,9
	.half	.L1431-.L710
	.byte	1,4,2,5,17,9
	.half	.L1432-.L1431
	.byte	3,168,1,1,5,30,9
	.half	.L1433-.L1432
	.byte	1,5,53,9
	.half	.L737-.L1433
	.byte	1,5,5,9
	.half	.L1434-.L737
	.byte	1,4,1,9
	.half	.L711-.L1434
	.byte	3,218,126,1,7,9
	.half	.L1435-.L711
	.byte	1,9
	.half	.L2-.L1435
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L441-.L2
	.byte	0,1,1
.L1426:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_ranges'
.L440:
	.word	-1,.L242,0,.L441-.L242,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_info'
.L442:
	.word	407
	.half	3
	.word	.L443
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L445,.L444
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_matchCommand',0,1,181,4,16
	.word	.L502
	.byte	1,1
	.word	.L278,.L721,.L277
	.byte	4
	.byte	'argsPtr',0,1,181,4,46
	.word	.L560,.L722
	.byte	4
	.byte	'match',0,1,181,4,62
	.word	.L560,.L723
	.byte	5
	.word	.L278,.L721
	.byte	6
	.byte	'result',0,1,183,4,13
	.word	.L502,.L724
	.byte	6
	.byte	'savedArguments',0,1,184,4,13
	.word	.L556,.L725
	.byte	6
	.byte	'savedMatch',0,1,185,4,13
	.word	.L556,.L726
	.byte	6
	.byte	'buffer0',0,1,186,4,13
	.word	.L564,.L727
	.byte	6
	.byte	'buffer1',0,1,187,4,13
	.word	.L564,.L728
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_abbrev'
.L443:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_line'
.L444:
	.word	.L1437-.L1436
.L1436:
	.half	3
	.word	.L1439-.L1438
.L1438:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1439:
	.byte	5,16,7,0,5,2
	.word	.L278
	.byte	3,180,4,1,5,28,9
	.half	.L829-.L278
	.byte	3,2,1,5,30,3,1,1,9
	.half	.L830-.L829
	.byte	3,1,1,5,40,9
	.half	.L831-.L830
	.byte	3,4,1,5,49,9
	.half	.L827-.L831
	.byte	1,5,9,9
	.half	.L826-.L827
	.byte	1,5,41,7,9
	.half	.L1440-.L826
	.byte	3,1,1,5,50,9
	.half	.L1441-.L1440
	.byte	1,5,49,9
	.half	.L832-.L1441
	.byte	3,127,1,5,50,3,1,1,5,72,9
	.half	.L833-.L832
	.byte	1,5,20,7,9
	.half	.L1442-.L833
	.byte	3,2,1,5,29,9
	.half	.L1443-.L1442
	.byte	1,5,20,9
	.half	.L1444-.L1443
	.byte	3,2,1,5,5,9
	.half	.L85-.L1444
	.byte	3,4,1,5,18,7,9
	.half	.L1445-.L85
	.byte	3,3,1,9
	.half	.L1446-.L1445
	.byte	3,1,1,5,5,9
	.half	.L88-.L1446
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L446-.L88
	.byte	0,1,1
.L1437:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_ranges'
.L445:
	.word	-1,.L278,0,.L446-.L278,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_info'
.L447:
	.word	345
	.half	3
	.word	.L448
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L450,.L449
	.byte	2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_commandListFind',0,1,208,6,26
	.word	.L622
	.byte	1,1,1
	.word	.L298,.L729,.L297
	.byte	4
	.byte	'shell',0,1,208,6,63
	.word	.L504,.L730
	.byte	4
	.byte	'commandLine',0,1,208,6,76
	.word	.L556,.L731
	.byte	4
	.byte	'args',0,1,208,6,96
	.word	.L560,.L732
	.byte	5
	.word	.L298,.L729
	.byte	6
	.byte	'shellCommand',0,1,211,6,30
	.word	.L622,.L733
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_abbrev'
.L448:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_line'
.L449:
	.word	.L1448-.L1447
.L1447:
	.half	3
	.word	.L1450-.L1449
.L1449:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1450:
	.byte	5,31,7,0,5,2
	.word	.L298
	.byte	3,214,6,1,5,43,9
	.half	.L886-.L298
	.byte	3,124,1,5,9,9
	.half	.L887-.L886
	.byte	3,4,1,5,86,7,9
	.half	.L1451-.L887
	.byte	3,2,1,5,1,7,9
	.half	.L152-.L1451
	.byte	3,10,1,7,9
	.half	.L451-.L152
	.byte	0,1,1
.L1448:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_ranges'
.L450:
	.word	-1,.L298,0,.L451-.L298,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_33')
	.sect	'.debug_info'
.L452:
	.word	226
	.half	3
	.word	.L453
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L455,.L454
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_33',0,1,132,2,6,1
	.word	.L270,.L456,.L269
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_33')
	.sect	'.debug_abbrev'
.L453:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_33')
	.sect	'.debug_line'
.L454:
	.word	.L1453-.L1452
.L1452:
	.half	3
	.word	.L1455-.L1454
.L1454:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1455:
	.byte	5,13,7,0,5,2
	.word	.L270
	.byte	3,223,3,1,9
	.half	.L456-.L270
	.byte	0,1,1,5,5,0,5,2
	.word	.L270
	.byte	3,205,0,1,5,13,9
	.half	.L1456-.L270
	.byte	3,146,3,1,7,9
	.half	.L456-.L1456
	.byte	0,1,1,5,5,0,5,2
	.word	.L270
	.byte	3,168,7,1,5,13,9
	.half	.L1456-.L270
	.byte	3,183,124,1,7,9
	.half	.L456-.L1456
	.byte	0,1,1,5,5,0,5,2
	.word	.L270
	.byte	3,180,7,1,5,13,9
	.half	.L1456-.L270
	.byte	3,171,124,1,7,9
	.half	.L456-.L1456
	.byte	0,1,1,5,5,0,5,2
	.word	.L270
	.byte	3,181,7,1,5,13,9
	.half	.L1456-.L270
	.byte	3,170,124,1,7,9
	.half	.L456-.L1456
	.byte	0,1,1,5,5,0,5,2
	.word	.L270
	.byte	3,182,7,1,5,13,9
	.half	.L1456-.L270
	.byte	3,169,124,1,7,9
	.half	.L456-.L1456
	.byte	0,1,1
.L1453:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_33')
	.sect	'.debug_ranges'
.L455:
	.word	-1,.L270,0,.L456-.L270,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_34')
	.sect	'.debug_info'
.L457:
	.word	226
	.half	3
	.word	.L458
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L460,.L459
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_34',0,1,132,2,6,1
	.word	.L268,.L461,.L267
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_34')
	.sect	'.debug_abbrev'
.L458:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_34')
	.sect	'.debug_line'
.L459:
	.word	.L1458-.L1457
.L1457:
	.half	3
	.word	.L1460-.L1459
.L1459:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1460:
	.byte	5,13,7,0,5,2
	.word	.L268
	.byte	3,223,3,1,9
	.half	.L461-.L268
	.byte	0,1,1,5,5,0,5,2
	.word	.L268
	.byte	3,205,0,1,5,13,9
	.half	.L1461-.L268
	.byte	3,146,3,1,7,9
	.half	.L461-.L1461
	.byte	0,1,1,5,5,0,5,2
	.word	.L268
	.byte	3,168,7,1,5,13,9
	.half	.L1461-.L268
	.byte	3,183,124,1,7,9
	.half	.L461-.L1461
	.byte	0,1,1,5,5,0,5,2
	.word	.L268
	.byte	3,180,7,1,5,13,9
	.half	.L1461-.L268
	.byte	3,171,124,1,7,9
	.half	.L461-.L1461
	.byte	0,1,1,5,5,0,5,2
	.word	.L268
	.byte	3,181,7,1,5,13,9
	.half	.L1461-.L268
	.byte	3,170,124,1,7,9
	.half	.L461-.L1461
	.byte	0,1,1,5,5,0,5,2
	.word	.L268
	.byte	3,182,7,1,5,13,9
	.half	.L1461-.L268
	.byte	3,169,124,1,7,9
	.half	.L461-.L1461
	.byte	0,1,1
.L1458:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_34')
	.sect	'.debug_ranges'
.L460:
	.word	-1,.L268,0,.L461-.L268,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_35')
	.sect	'.debug_info'
.L462:
	.word	226
	.half	3
	.word	.L463
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L465,.L464
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_35',0,1,132,2,6,1
	.word	.L266,.L466,.L265
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_35')
	.sect	'.debug_abbrev'
.L463:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_35')
	.sect	'.debug_line'
.L464:
	.word	.L1463-.L1462
.L1462:
	.half	3
	.word	.L1465-.L1464
.L1464:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1465:
	.byte	5,51,7,0,5,2
	.word	.L266
	.byte	3,239,2,1,5,57,9
	.half	.L1466-.L266
	.byte	1,9
	.half	.L466-.L1466
	.byte	0,1,1,5,13,0,5,2
	.word	.L266
	.byte	3,209,7,1,5,57,9
	.half	.L1467-.L266
	.byte	3,158,123,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,13,0,5,2
	.word	.L266
	.byte	3,211,7,1,5,57,9
	.half	.L1467-.L266
	.byte	3,156,123,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,17,0,5,2
	.word	.L266
	.byte	3,227,7,1,5,57,9
	.half	.L1467-.L266
	.byte	3,140,123,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,17,0,5,2
	.word	.L266
	.byte	3,229,7,1,5,57,9
	.half	.L1467-.L266
	.byte	3,138,123,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,17,0,5,2
	.word	.L266
	.byte	3,246,7,1,5,57,9
	.half	.L1467-.L266
	.byte	3,249,122,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,17,0,5,2
	.word	.L266
	.byte	3,248,7,1,5,57,9
	.half	.L1467-.L266
	.byte	3,247,122,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,13,0,5,2
	.word	.L266
	.byte	3,146,8,1,5,57,9
	.half	.L1467-.L266
	.byte	3,221,122,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,17,0,5,2
	.word	.L266
	.byte	3,164,8,1,5,57,9
	.half	.L1467-.L266
	.byte	3,203,122,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1,5,21,0,5,2
	.word	.L266
	.byte	3,186,8,1,5,57,9
	.half	.L1467-.L266
	.byte	3,181,122,1,7,9
	.half	.L466-.L1467
	.byte	0,1,1
.L1463:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_35')
	.sect	'.debug_ranges'
.L465:
	.word	-1,.L266,0,.L466-.L266,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_36')
	.sect	'.debug_info'
.L467:
	.word	226
	.half	3
	.word	.L468
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L470,.L469
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_36',0,1,132,2,6,1
	.word	.L264,.L471,.L263
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_36')
	.sect	'.debug_abbrev'
.L468:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_36')
	.sect	'.debug_line'
.L469:
	.word	.L1469-.L1468
.L1468:
	.half	3
	.word	.L1471-.L1470
.L1470:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1471:
	.byte	5,13,7,0,5,2
	.word	.L264
	.byte	3,223,3,1,9
	.half	.L471-.L264
	.byte	0,1,1,5,5,0,5,2
	.word	.L264
	.byte	3,205,0,1,5,13,9
	.half	.L1472-.L264
	.byte	3,146,3,1,7,9
	.half	.L471-.L1472
	.byte	0,1,1,5,5,0,5,2
	.word	.L264
	.byte	3,180,7,1,5,13,9
	.half	.L1472-.L264
	.byte	3,171,124,1,7,9
	.half	.L471-.L1472
	.byte	0,1,1,5,5,0,5,2
	.word	.L264
	.byte	3,181,7,1,5,13,9
	.half	.L1472-.L264
	.byte	3,170,124,1,7,9
	.half	.L471-.L1472
	.byte	0,1,1,5,5,0,5,2
	.word	.L264
	.byte	3,182,7,1,5,13,9
	.half	.L1472-.L264
	.byte	3,169,124,1,7,9
	.half	.L471-.L1472
	.byte	0,1,1
.L1469:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_36')
	.sect	'.debug_ranges'
.L470:
	.word	-1,.L264,0,.L471-.L264,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_37')
	.sect	'.debug_info'
.L472:
	.word	226
	.half	3
	.word	.L473
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L475,.L474
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_37',0,1,160,7,6,1
	.word	.L306,.L476,.L305
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_37')
	.sect	'.debug_abbrev'
.L473:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_37')
	.sect	'.debug_line'
.L474:
	.word	.L1474-.L1473
.L1473:
	.half	3
	.word	.L1476-.L1475
.L1475:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1476:
	.byte	5,5,7,0,5,2
	.word	.L306
	.byte	3,168,7,1,9
	.half	.L476-.L306
	.byte	0,1,1,5,5,0,5,2
	.word	.L306
	.byte	3,180,7,1,9
	.half	.L1477-.L306
	.byte	3,116,1,7,9
	.half	.L476-.L1477
	.byte	0,1,1,5,5,0,5,2
	.word	.L306
	.byte	3,181,7,1,9
	.half	.L1477-.L306
	.byte	3,115,1,7,9
	.half	.L476-.L1477
	.byte	0,1,1,5,5,0,5,2
	.word	.L306
	.byte	3,182,7,1,9
	.half	.L1477-.L306
	.byte	3,114,1,7,9
	.half	.L476-.L1477
	.byte	0,1,1
.L1474:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_37')
	.sect	'.debug_ranges'
.L475:
	.word	-1,.L306,0,.L476-.L306,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_38')
	.sect	'.debug_info'
.L477:
	.word	226
	.half	3
	.word	.L478
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L480,.L479
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_38',0,1,160,7,6,1
	.word	.L304,.L481,.L303
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_38')
	.sect	'.debug_abbrev'
.L478:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_38')
	.sect	'.debug_line'
.L479:
	.word	.L1479-.L1478
.L1478:
	.half	3
	.word	.L1481-.L1480
.L1480:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1481:
	.byte	5,46,7,0,5,2
	.word	.L304
	.byte	3,204,7,1,5,62,9
	.half	.L1482-.L304
	.byte	1,5,42,9
	.half	.L908-.L1482
	.byte	1,5,62,9
	.half	.L1483-.L908
	.byte	1,7,9
	.half	.L481-.L1483
	.byte	0,1,1,5,50,0,5,2
	.word	.L304
	.byte	3,242,7,1,5,66,9
	.half	.L1482-.L304
	.byte	1,5,46,9
	.half	.L908-.L1482
	.byte	1,5,62,9
	.half	.L1483-.L908
	.byte	3,90,1,7,9
	.half	.L481-.L1483
	.byte	0,1,1
.L1479:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_38')
	.sect	'.debug_ranges'
.L480:
	.word	-1,.L304,0,.L481-.L304,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_39')
	.sect	'.debug_info'
.L482:
	.word	226
	.half	3
	.word	.L483
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L485,.L484
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_39',0,1,132,2,6,1
	.word	.L262,.L486,.L261
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_39')
	.sect	'.debug_abbrev'
.L483:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_39')
	.sect	'.debug_line'
.L484:
	.word	.L1485-.L1484
.L1484:
	.half	3
	.word	.L1487-.L1486
.L1486:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1487:
	.byte	5,55,7,0,5,2
	.word	.L262
	.byte	3,244,2,1,5,61,9
	.half	.L1488-.L262
	.byte	1,9
	.half	.L486-.L1488
	.byte	0,1,1,5,13,0,5,2
	.word	.L262
	.byte	3,136,8,1,5,61,9
	.half	.L1489-.L262
	.byte	3,236,122,1,7,9
	.half	.L486-.L1489
	.byte	0,1,1,5,51,0,5,2
	.word	.L262
	.byte	3,182,8,1,5,57,9
	.half	.L1488-.L262
	.byte	1,5,61,9
	.half	.L1489-.L1488
	.byte	3,190,122,1,7,9
	.half	.L486-.L1489
	.byte	0,1,1,5,51,0,5,2
	.word	.L262
	.byte	3,213,8,1,5,57,9
	.half	.L1488-.L262
	.byte	1,5,61,9
	.half	.L1489-.L1488
	.byte	3,159,122,1,7,9
	.half	.L486-.L1489
	.byte	0,1,1,5,17,0,5,2
	.word	.L262
	.byte	3,236,8,1,5,61,9
	.half	.L1489-.L262
	.byte	3,136,122,1,7,9
	.half	.L486-.L1489
	.byte	0,1,1
.L1485:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_39')
	.sect	'.debug_ranges'
.L485:
	.word	-1,.L262,0,.L486-.L262,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_40')
	.sect	'.debug_info'
.L487:
	.word	226
	.half	3
	.word	.L488
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L490,.L489
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_40',0,1,132,2,6,1
	.word	.L260,.L491,.L259
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_40')
	.sect	'.debug_abbrev'
.L488:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_40')
	.sect	'.debug_line'
.L489:
	.word	.L1491-.L1490
.L1490:
	.half	3
	.word	.L1493-.L1492
.L1492:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1493:
	.byte	5,25,7,0,5,2
	.word	.L260
	.byte	3,249,2,1,9
	.half	.L491-.L260
	.byte	0,1,1,5,25,0,5,2
	.word	.L260
	.byte	3,249,2,1,5,21,9
	.half	.L806-.L260
	.byte	3,193,5,1,5,25,9
	.half	.L1494-.L806
	.byte	3,191,122,1,7,9
	.half	.L491-.L1494
	.byte	0,1,1
.L1491:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_40')
	.sect	'.debug_ranges'
.L490:
	.word	-1,.L260,0,.L491-.L260,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_41')
	.sect	'.debug_info'
.L492:
	.word	226
	.half	3
	.word	.L493
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L495,.L494
	.byte	2
	.word	.L313
	.byte	3
	.byte	'.cocofun_41',0,1,132,2,6,1
	.word	.L258,.L496,.L257
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_41')
	.sect	'.debug_abbrev'
.L493:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_41')
	.sect	'.debug_line'
.L494:
	.word	.L1496-.L1495
.L1495:
	.half	3
	.word	.L1498-.L1497
.L1497:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1498:
	.byte	5,13,7,0,5,2
	.word	.L258
	.byte	3,223,3,1,9
	.half	.L496-.L258
	.byte	0,1,1,5,44,0,5,2
	.word	.L258
	.byte	3,243,3,1,5,57,9
	.half	.L1499-.L258
	.byte	1,5,13,9
	.half	.L1500-.L1499
	.byte	3,108,1,7,9
	.half	.L496-.L1500
	.byte	0,1,1,5,25,0,5,2
	.word	.L258
	.byte	3,249,2,1,5,13,9
	.half	.L1500-.L258
	.byte	3,230,0,1,7,9
	.half	.L496-.L1500
	.byte	0,1,1,5,21,0,5,2
	.word	.L258
	.byte	3,186,8,1,5,13,9
	.half	.L1500-.L258
	.byte	3,165,123,1,7,9
	.half	.L496-.L1500
	.byte	0,1,1,5,21,0,5,2
	.word	.L258
	.byte	3,220,8,1,5,13,9
	.half	.L1500-.L258
	.byte	3,131,123,1,7,9
	.half	.L496-.L1500
	.byte	0,1,1
.L1496:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_41')
	.sect	'.debug_ranges'
.L495:
	.word	-1,.L258,0,.L496-.L258,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_info'
.L497:
	.word	223
	.half	3
	.word	.L498
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L313
	.byte	3
	.byte	'Ifx_Shell_cmdBuffer',0,8,57,6
	.word	.L734
	.byte	1,5,3
	.word	Ifx_Shell_cmdBuffer
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_abbrev'
.L498:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_33')
	.sect	'.debug_loc'
.L269:
	.word	-1,.L270,0,.L456-.L270
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_34')
	.sect	'.debug_loc'
.L267:
	.word	-1,.L268,0,.L461-.L268
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_35')
	.sect	'.debug_loc'
.L265:
	.word	-1,.L266,0,.L466-.L266
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_36')
	.sect	'.debug_loc'
.L263:
	.word	-1,.L264,0,.L471-.L264
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_37')
	.sect	'.debug_loc'
.L305:
	.word	-1,.L306,0,.L476-.L306
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_38')
	.sect	'.debug_loc'
.L303:
	.word	-1,.L304,0,.L481-.L304
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_39')
	.sect	'.debug_loc'
.L261:
	.word	-1,.L262,0,.L486-.L262
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_40')
	.sect	'.debug_loc'
.L259:
	.word	-1,.L260,0,.L491-.L260
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_41')
	.sect	'.debug_loc'
.L257:
	.word	-1,.L258,0,.L496-.L258
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_loc'
.L249:
	.word	-1,.L250,0,.L765-.L250
	.half	2
	.byte	138,0
	.word	.L765-.L250,.L657-.L250
	.half	2
	.byte	138,8
	.word	.L657-.L250,.L657-.L250
	.half	2
	.byte	138,0
	.word	0,0
.L658:
	.word	-1,.L250,0,.L766-.L250
	.half	1
	.byte	100
	.word	0,.L657-.L250
	.half	2
	.byte	145,120
	.word	0,0
.L659:
	.word	-1,.L250,0,.L767-.L250
	.half	1
	.byte	101
	.word	.L769-.L250,.L657-.L250
	.half	1
	.byte	111
	.word	.L776-.L250,.L771-.L250
	.half	1
	.byte	101
	.word	0,0
.L660:
	.word	-1,.L250,0,.L768-.L250
	.half	1
	.byte	102
	.word	.L770-.L250,.L657-.L250
	.half	1
	.byte	108
	.word	.L772-.L250,.L773-.L250
	.half	1
	.byte	100
	.word	.L774-.L250,.L775-.L250
	.half	1
	.byte	100
	.word	.L777-.L250,.L771-.L250
	.half	1
	.byte	102
	.word	0,0
.L661:
	.word	-1,.L250,.L766-.L250,.L771-.L250
	.half	1
	.byte	95
	.word	.L771-.L250,.L20-.L250
	.half	1
	.byte	82
	.word	.L20-.L250,.L657-.L250
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_loc'
.L673:
	.word	0,0
.L670:
	.word	-1,.L302,.L270-.L302,.L456-.L302
	.half	1
	.byte	84
	.word	.L270-.L302,.L456-.L302
	.half	1
	.byte	89
	.word	0,.L895-.L302
	.half	1
	.byte	84
	.word	.L896-.L302,.L895-.L302
	.half	1
	.byte	89
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	84
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	89
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	84
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	89
	.word	.L899-.L302,.L166-.L302
	.half	1
	.byte	84
	.word	.L264-.L302,.L471-.L302
	.half	1
	.byte	89
	.word	.L899-.L302,.L902-.L302
	.half	1
	.byte	89
	.word	.L904-.L302,.L905-.L302
	.half	1
	.byte	89
	.word	.L906-.L302,.L907-.L302
	.half	1
	.byte	89
	.word	.L304-.L302,.L481-.L302
	.half	1
	.byte	89
	.word	.L909-.L302,.L181-.L302
	.half	1
	.byte	89
	.word	.L266-.L302,.L466-.L302
	.half	1
	.byte	89
	.word	.L912-.L302,.L185-.L302
	.half	1
	.byte	89
	.word	.L913-.L302,.L191-.L302
	.half	1
	.byte	89
	.word	.L914-.L302,.L195-.L302
	.half	1
	.byte	89
	.word	.L915-.L302,.L916-.L302
	.half	1
	.byte	89
	.word	.L917-.L302,.L199-.L302
	.half	1
	.byte	89
	.word	.L919-.L302,.L203-.L302
	.half	1
	.byte	89
	.word	.L262-.L302,.L486-.L302
	.half	1
	.byte	89
	.word	.L920-.L302,.L225-.L302
	.half	1
	.byte	89
	.word	.L258-.L302,.L496-.L302
	.half	1
	.byte	89
	.word	.L806-.L302,.L491-.L302
	.half	1
	.byte	89
	.word	.L925-.L302,.L667-.L302
	.half	1
	.byte	89
	.word	0,0
.L671:
	.word	-1,.L302,.L270-.L302,.L456-.L302
	.half	1
	.byte	90
	.word	.L270-.L302,.L456-.L302
	.half	1
	.byte	85
	.word	.L894-.L302,.L895-.L302
	.half	1
	.byte	90
	.word	0,.L895-.L302
	.half	1
	.byte	85
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	90
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	85
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	90
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	85
	.word	.L899-.L302,.L166-.L302
	.half	1
	.byte	85
	.word	.L264-.L302,.L471-.L302
	.half	1
	.byte	90
	.word	.L899-.L302,.L902-.L302
	.half	1
	.byte	90
	.word	.L904-.L302,.L905-.L302
	.half	1
	.byte	90
	.word	.L906-.L302,.L907-.L302
	.half	1
	.byte	90
	.word	.L304-.L302,.L481-.L302
	.half	1
	.byte	90
	.word	.L909-.L302,.L181-.L302
	.half	1
	.byte	90
	.word	.L266-.L302,.L466-.L302
	.half	1
	.byte	90
	.word	.L912-.L302,.L185-.L302
	.half	1
	.byte	90
	.word	.L913-.L302,.L191-.L302
	.half	1
	.byte	90
	.word	.L914-.L302,.L195-.L302
	.half	1
	.byte	90
	.word	.L915-.L302,.L916-.L302
	.half	1
	.byte	90
	.word	.L917-.L302,.L199-.L302
	.half	1
	.byte	90
	.word	.L919-.L302,.L203-.L302
	.half	1
	.byte	90
	.word	.L262-.L302,.L486-.L302
	.half	1
	.byte	90
	.word	.L920-.L302,.L225-.L302
	.half	1
	.byte	90
	.word	.L258-.L302,.L496-.L302
	.half	1
	.byte	90
	.word	.L806-.L302,.L491-.L302
	.half	1
	.byte	90
	.word	.L925-.L302,.L667-.L302
	.half	1
	.byte	90
	.word	0,0
.L301:
	.word	-1,.L302,0,.L894-.L302
	.half	2
	.byte	138,0
	.word	.L894-.L302,.L211-.L302
	.half	2
	.byte	138,24
	.word	.L211-.L302,.L211-.L302
	.half	2
	.byte	138,0
	.word	.L211-.L302,.L212-.L302
	.half	2
	.byte	138,24
	.word	.L212-.L302,.L212-.L302
	.half	2
	.byte	138,0
	.word	.L212-.L302,.L237-.L302
	.half	2
	.byte	138,24
	.word	.L237-.L302,.L237-.L302
	.half	2
	.byte	138,0
	.word	.L237-.L302,.L667-.L302
	.half	2
	.byte	138,24
	.word	.L667-.L302,.L667-.L302
	.half	2
	.byte	138,0
	.word	0,0
.L674:
	.word	-1,.L302,.L264-.L302,.L471-.L302
	.half	1
	.byte	109
	.word	.L270-.L302,.L456-.L302
	.half	1
	.byte	109
	.word	.L903-.L302,.L902-.L302
	.half	1
	.byte	109
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	109
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	109
	.word	.L904-.L302,.L905-.L302
	.half	1
	.byte	109
	.word	.L906-.L302,.L907-.L302
	.half	1
	.byte	109
	.word	.L304-.L302,.L481-.L302
	.half	1
	.byte	109
	.word	.L908-.L302,.L481-.L302
	.half	1
	.byte	100
	.word	.L909-.L302,.L181-.L302
	.half	1
	.byte	109
	.word	.L910-.L302,.L911-.L302
	.half	1
	.byte	100
	.word	.L266-.L302,.L466-.L302
	.half	1
	.byte	109
	.word	.L912-.L302,.L185-.L302
	.half	1
	.byte	109
	.word	.L913-.L302,.L191-.L302
	.half	1
	.byte	109
	.word	.L914-.L302,.L195-.L302
	.half	1
	.byte	109
	.word	.L915-.L302,.L916-.L302
	.half	1
	.byte	109
	.word	.L917-.L302,.L199-.L302
	.half	1
	.byte	109
	.word	.L917-.L302,.L918-.L302
	.half	1
	.byte	100
	.word	.L919-.L302,.L203-.L302
	.half	1
	.byte	109
	.word	.L921-.L302,.L179-.L302
	.half	1
	.byte	101
	.word	.L922-.L302,.L923-.L302
	.half	1
	.byte	100
	.word	.L262-.L302,.L486-.L302
	.half	1
	.byte	109
	.word	.L920-.L302,.L167-.L302
	.half	1
	.byte	109
	.word	.L211-.L302,.L225-.L302
	.half	1
	.byte	109
	.word	.L258-.L302,.L496-.L302
	.half	1
	.byte	109
	.word	.L806-.L302,.L491-.L302
	.half	1
	.byte	109
	.word	.L925-.L302,.L667-.L302
	.half	1
	.byte	109
	.word	0,0
.L675:
	.word	-1,.L302,.L262-.L302,.L486-.L302
	.half	1
	.byte	95
	.word	.L924-.L302,.L225-.L302
	.half	1
	.byte	95
	.word	.L926-.L302,.L927-.L302
	.half	1
	.byte	95
	.word	.L262-.L302,.L486-.L302
	.half	1
	.byte	88
	.word	.L928-.L302,.L234-.L302
	.half	1
	.byte	88
	.word	0,0
.L680:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L912-.L302,.L183-.L302
	.half	1
	.byte	95
	.word	0,0
.L682:
	.word	-1,.L302,.L183-.L302,.L185-.L302
	.half	1
	.byte	95
	.word	0,0
.L684:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L913-.L302,.L172-.L302
	.half	1
	.byte	95
	.word	0,0
.L687:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L914-.L302,.L193-.L302
	.half	1
	.byte	95
	.word	0,0
.L689:
	.word	-1,.L302,.L193-.L302,.L195-.L302
	.half	1
	.byte	95
	.word	0,0
.L690:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L915-.L302,.L189-.L302
	.half	1
	.byte	95
	.word	0,0
.L693:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L919-.L302,.L201-.L302
	.half	1
	.byte	95
	.word	0,0
.L695:
	.word	-1,.L302,.L201-.L302,.L203-.L302
	.half	1
	.byte	95
	.word	0,0
.L696:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L920-.L302,.L186-.L302
	.half	1
	.byte	95
	.word	0,0
.L699:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	95
	.word	.L217-.L302,.L216-.L302
	.half	1
	.byte	95
	.word	0,0
.L701:
	.word	-1,.L302,.L266-.L302,.L466-.L302
	.half	1
	.byte	88
	.word	.L258-.L302,.L496-.L302
	.half	1
	.byte	88
	.word	.L806-.L302,.L491-.L302
	.half	1
	.byte	88
	.word	.L925-.L302,.L221-.L302
	.half	1
	.byte	88
	.word	0,0
.L703:
	.word	-1,.L302,.L258-.L302,.L496-.L302
	.half	1
	.byte	88
	.word	.L234-.L302,.L230-.L302
	.half	1
	.byte	88
	.word	0,0
.L676:
	.word	-1,.L302,.L270-.L302,.L456-.L302
	.half	1
	.byte	88
	.word	.L897-.L302,.L895-.L302
	.half	1
	.byte	88
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	88
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	88
	.word	.L264-.L302,.L471-.L302
	.half	1
	.byte	88
	.word	.L899-.L302,.L902-.L302
	.half	1
	.byte	88
	.word	.L904-.L302,.L905-.L302
	.half	1
	.byte	88
	.word	.L906-.L302,.L907-.L302
	.half	1
	.byte	88
	.word	.L304-.L302,.L481-.L302
	.half	1
	.byte	88
	.word	.L909-.L302,.L181-.L302
	.half	1
	.byte	88
	.word	.L266-.L302,.L466-.L302
	.half	1
	.byte	88
	.word	.L912-.L302,.L185-.L302
	.half	1
	.byte	88
	.word	.L913-.L302,.L191-.L302
	.half	1
	.byte	88
	.word	.L914-.L302,.L195-.L302
	.half	1
	.byte	88
	.word	.L915-.L302,.L916-.L302
	.half	1
	.byte	88
	.word	.L917-.L302,.L199-.L302
	.half	1
	.byte	88
	.word	.L919-.L302,.L203-.L302
	.half	1
	.byte	88
	.word	.L262-.L302,.L486-.L302
	.half	1
	.byte	88
	.word	.L920-.L302,.L225-.L302
	.half	1
	.byte	88
	.word	.L213-.L302,.L928-.L302
	.half	1
	.byte	88
	.word	.L237-.L302,.L667-.L302
	.half	1
	.byte	88
	.word	0,0
.L668:
	.word	-1,.L302,.L270-.L302,.L456-.L302
	.half	1
	.byte	100
	.word	.L270-.L302,.L456-.L302
	.half	1
	.byte	108
	.word	0,.L895-.L302
	.half	1
	.byte	100
	.word	.L898-.L302,.L895-.L302
	.half	1
	.byte	108
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	100
	.word	.L306-.L302,.L476-.L302
	.half	1
	.byte	108
	.word	.L899-.L302,.L900-.L302
	.half	1
	.byte	100
	.word	.L268-.L302,.L901-.L302
	.half	1
	.byte	100
	.word	.L268-.L302,.L461-.L302
	.half	1
	.byte	108
	.word	.L264-.L302,.L471-.L302
	.half	1
	.byte	108
	.word	.L899-.L302,.L902-.L302
	.half	1
	.byte	108
	.word	.L904-.L302,.L905-.L302
	.half	1
	.byte	108
	.word	.L906-.L302,.L907-.L302
	.half	1
	.byte	108
	.word	.L304-.L302,.L481-.L302
	.half	1
	.byte	108
	.word	.L909-.L302,.L181-.L302
	.half	1
	.byte	108
	.word	.L266-.L302,.L466-.L302
	.half	1
	.byte	108
	.word	.L912-.L302,.L185-.L302
	.half	1
	.byte	108
	.word	.L913-.L302,.L191-.L302
	.half	1
	.byte	108
	.word	.L914-.L302,.L195-.L302
	.half	1
	.byte	108
	.word	.L915-.L302,.L916-.L302
	.half	1
	.byte	108
	.word	.L917-.L302,.L199-.L302
	.half	1
	.byte	108
	.word	.L919-.L302,.L203-.L302
	.half	1
	.byte	108
	.word	.L262-.L302,.L486-.L302
	.half	1
	.byte	108
	.word	.L920-.L302,.L225-.L302
	.half	1
	.byte	108
	.word	.L258-.L302,.L496-.L302
	.half	1
	.byte	108
	.word	.L806-.L302,.L491-.L302
	.half	1
	.byte	108
	.word	.L925-.L302,.L667-.L302
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_loc'
.L295:
	.word	-1,.L296,0,.L879-.L296
	.half	2
	.byte	138,0
	.word	.L879-.L296,.L623-.L296
	.half	3
	.byte	138,136,2
	.word	.L623-.L296,.L623-.L296
	.half	2
	.byte	138,0
	.word	0,0
.L626:
	.word	-1,.L296,0,.L145-.L296
	.half	1
	.byte	102
	.word	.L882-.L296,.L623-.L296
	.half	1
	.byte	108
	.word	0,0
.L631:
	.word	-1,.L296,0,.L623-.L296
	.half	3
	.byte	145,128,126
	.word	0,0
.L627:
	.word	-1,.L296,.L883-.L296,.L623-.L296
	.half	1
	.byte	109
	.word	0,0
.L632:
	.word	-1,.L296,.L147-.L296,.L144-.L296
	.half	1
	.byte	95
	.word	0,0
.L625:
	.word	-1,.L296,0,.L145-.L296
	.half	1
	.byte	101
	.word	.L880-.L296,.L881-.L296
	.half	1
	.byte	111
	.word	.L148-.L296,.L150-.L296
	.half	1
	.byte	111
	.word	0,0
.L630:
	.word	-1,.L296,0,.L623-.L296
	.half	3
	.byte	145,252,125
	.word	0,0
.L624:
	.word	-1,.L296,0,.L145-.L296
	.half	1
	.byte	100
	.word	0,0
.L629:
	.word	-1,.L296,0,.L623-.L296
	.half	3
	.byte	145,248,125
	.word	0,0
.L628:
	.word	-1,.L296,.L884-.L296,.L623-.L296
	.half	1
	.byte	110
	.word	.L885-.L296,.L623-.L296
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_loc'
.L297:
	.word	-1,.L298,0,.L729-.L298
	.half	2
	.byte	138,0
	.word	0,0
.L732:
	.word	-1,.L298,0,.L729-.L298
	.half	1
	.byte	102
	.word	0,0
.L731:
	.word	-1,.L298,0,.L729-.L298
	.half	1
	.byte	101
	.word	0,0
.L730:
	.word	-1,.L298,0,.L886-.L298
	.half	1
	.byte	100
	.word	0,0
.L733:
	.word	-1,.L298,.L887-.L298,.L729-.L298
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_loc'
.L271:
	.word	-1,.L272,0,.L512-.L272
	.half	2
	.byte	138,0
	.word	0,0
.L513:
	.word	-1,.L272,0,.L512-.L272
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_loc'
.L309:
	.word	-1,.L310,0,.L522-.L310
	.half	2
	.byte	138,0
	.word	0,0
.L523:
	.word	-1,.L310,0,.L522-.L310
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_loc'
.L307:
	.word	-1,.L308,0,.L514-.L308
	.half	2
	.byte	138,0
	.word	0,0
.L515:
	.word	-1,.L308,0,.L929-.L308
	.half	1
	.byte	100
	.word	.L930-.L308,.L514-.L308
	.half	1
	.byte	111
	.word	0,0
.L520:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_loc'
.L299:
	.word	-1,.L300,0,.L888-.L300
	.half	2
	.byte	138,0
	.word	.L888-.L300,.L163-.L300
	.half	2
	.byte	138,8
	.word	.L163-.L300,.L163-.L300
	.half	2
	.byte	138,0
	.word	.L163-.L300,.L165-.L300
	.half	2
	.byte	138,8
	.word	.L165-.L300,.L165-.L300
	.half	2
	.byte	138,0
	.word	.L165-.L300,.L662-.L300
	.half	2
	.byte	138,8
	.word	.L662-.L300,.L662-.L300
	.half	2
	.byte	138,0
	.word	0,0
.L665:
	.word	-1,.L300,0,.L662-.L300
	.half	2
	.byte	145,124
	.word	0,0
.L664:
	.word	-1,.L300,0,.L889-.L300
	.half	1
	.byte	101
	.word	.L891-.L300,.L662-.L300
	.half	1
	.byte	108
	.word	0,0
.L663:
	.word	-1,.L300,0,.L889-.L300
	.half	1
	.byte	100
	.word	.L890-.L300,.L662-.L300
	.half	1
	.byte	111
	.word	.L893-.L300,.L163-.L300
	.half	1
	.byte	100
	.word	0,0
.L666:
	.word	-1,.L300,.L889-.L300,.L892-.L300
	.half	1
	.byte	98
	.word	.L154-.L300,.L159-.L300
	.half	1
	.byte	98
	.word	.L163-.L300,.L161-.L300
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_loc'
.L511:
	.word	-1,.L254,.L781-.L254,.L782-.L254
	.half	1
	.byte	98
	.word	0,0
.L253:
	.word	-1,.L254,0,.L503-.L254
	.half	2
	.byte	138,0
	.word	0,0
.L507:
	.word	-1,.L254,0,.L778-.L254
	.half	1
	.byte	101
	.word	.L780-.L254,.L503-.L254
	.half	1
	.byte	108
	.word	0,0
.L509:
	.word	0,0
.L505:
	.word	-1,.L254,0,.L778-.L254
	.half	1
	.byte	100
	.word	.L779-.L254,.L503-.L254
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_loc'
.L251:
	.word	-1,.L252,0,.L499-.L252
	.half	2
	.byte	138,0
	.word	0,0
.L501:
	.word	-1,.L252,0,.L499-.L252
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_loc'
.L277:
	.word	-1,.L278,0,.L825-.L278
	.half	2
	.byte	138,0
	.word	.L825-.L278,.L721-.L278
	.half	3
	.byte	138,128,4
	.word	.L721-.L278,.L721-.L278
	.half	2
	.byte	138,0
	.word	0,0
.L722:
	.word	-1,.L278,0,.L826-.L278
	.half	1
	.byte	100
	.word	.L828-.L278,.L721-.L278
	.half	1
	.byte	111
	.word	0,0
.L727:
	.word	-1,.L278,0,.L721-.L278
	.half	3
	.byte	145,128,124
	.word	0,0
.L728:
	.word	-1,.L278,0,.L721-.L278
	.half	3
	.byte	145,128,126
	.word	0,0
.L723:
	.word	-1,.L278,0,.L827-.L278
	.half	1
	.byte	101
	.word	.L829-.L278,.L721-.L278
	.half	1
	.byte	108
	.word	.L832-.L278,.L833-.L278
	.half	1
	.byte	100
	.word	0,0
.L724:
	.word	-1,.L278,.L830-.L278,.L721-.L278
	.half	1
	.byte	95
	.word	0,0
.L725:
	.word	-1,.L278,.L830-.L278,.L721-.L278
	.half	1
	.byte	109
	.word	0,0
.L726:
	.word	-1,.L278,.L831-.L278,.L721-.L278
	.half	1
	.byte	110
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_loc'
.L275:
	.word	-1,.L276,0,.L817-.L276
	.half	2
	.byte	138,0
	.word	.L817-.L276,.L559-.L276
	.half	3
	.byte	138,128,2
	.word	.L559-.L276,.L559-.L276
	.half	2
	.byte	138,0
	.word	0,0
.L561:
	.word	-1,.L276,0,.L818-.L276
	.half	1
	.byte	100
	.word	.L820-.L276,.L559-.L276
	.half	1
	.byte	111
	.word	0,0
.L565:
	.word	-1,.L276,0,.L559-.L276
	.half	3
	.byte	145,128,126
	.word	0,0
.L566:
	.word	-1,.L276,.L819-.L276,.L559-.L276
	.half	1
	.byte	95
	.word	0,0
.L563:
	.word	-1,.L276,.L822-.L276,.L559-.L276
	.half	1
	.byte	109
	.word	0,0
.L562:
	.word	-1,.L276,0,.L819-.L276
	.half	1
	.byte	101
	.word	.L821-.L276,.L559-.L276
	.half	1
	.byte	108
	.word	.L823-.L276,.L824-.L276
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_loc'
.L281:
	.word	-1,.L282,0,.L842-.L282
	.half	2
	.byte	138,0
	.word	.L842-.L282,.L573-.L282
	.half	2
	.byte	138,40
	.word	.L573-.L282,.L573-.L282
	.half	2
	.byte	138,0
	.word	0,0
.L576:
	.word	-1,.L282,0,.L843-.L282
	.half	1
	.byte	101
	.word	.L845-.L282,.L573-.L282
	.half	1
	.byte	111
	.word	0,0
.L574:
	.word	-1,.L282,0,.L844-.L282
	.half	1
	.byte	100
	.word	0,0
.L578:
	.word	-1,.L282,0,.L573-.L282
	.half	2
	.byte	145,92
	.word	0,0
.L579:
	.word	-1,.L282,.L846-.L282,.L573-.L282
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_loc'
.L293:
	.word	-1,.L294,0,.L874-.L294
	.half	2
	.byte	138,0
	.word	.L874-.L294,.L616-.L294
	.half	3
	.byte	138,200,0
	.word	.L616-.L294,.L616-.L294
	.half	2
	.byte	138,0
	.word	0,0
.L617:
	.word	-1,.L294,0,.L875-.L294
	.half	1
	.byte	100
	.word	0,0
.L620:
	.word	-1,.L294,0,.L616-.L294
	.half	3
	.byte	145,188,127
	.word	0,0
.L621:
	.word	-1,.L294,.L878-.L294,.L616-.L294
	.half	1
	.byte	88
	.word	0,0
.L619:
	.word	-1,.L294,0,.L876-.L294
	.half	1
	.byte	101
	.word	.L877-.L294,.L616-.L294
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_loc'
.L291:
	.word	-1,.L292,0,.L869-.L292
	.half	2
	.byte	138,0
	.word	.L869-.L292,.L610-.L292
	.half	3
	.byte	138,200,0
	.word	.L610-.L292,.L610-.L292
	.half	2
	.byte	138,0
	.word	0,0
.L611:
	.word	-1,.L292,0,.L870-.L292
	.half	1
	.byte	100
	.word	0,0
.L614:
	.word	-1,.L292,0,.L610-.L292
	.half	3
	.byte	145,188,127
	.word	0,0
.L615:
	.word	-1,.L292,.L873-.L292,.L610-.L292
	.half	1
	.byte	88
	.word	0,0
.L613:
	.word	-1,.L292,0,.L871-.L292
	.half	1
	.byte	101
	.word	.L872-.L292,.L610-.L292
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_loc'
.L283:
	.word	-1,.L284,0,.L847-.L284
	.half	2
	.byte	138,0
	.word	.L847-.L284,.L112-.L284
	.half	2
	.byte	138,8
	.word	.L112-.L284,.L112-.L284
	.half	2
	.byte	138,0
	.word	.L112-.L284,.L580-.L284
	.half	2
	.byte	138,8
	.word	.L580-.L284,.L580-.L284
	.half	2
	.byte	138,0
	.word	0,0
.L581:
	.word	-1,.L284,0,.L848-.L284
	.half	1
	.byte	100
	.word	0,0
.L586:
	.word	0,0
.L583:
	.word	-1,.L284,0,.L849-.L284
	.half	1
	.byte	101
	.word	.L850-.L284,.L580-.L284
	.half	1
	.byte	111
	.word	0,0
.L585:
	.word	-1,.L284,0,.L580-.L284
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_loc'
.L287:
	.word	-1,.L288,0,.L855-.L288
	.half	2
	.byte	138,0
	.word	.L855-.L288,.L595-.L288
	.half	3
	.byte	138,200,0
	.word	.L595-.L288,.L595-.L288
	.half	2
	.byte	138,0
	.word	0,0
.L596:
	.word	-1,.L288,0,.L856-.L288
	.half	1
	.byte	100
	.word	0,0
.L600:
	.word	-1,.L288,0,.L595-.L288
	.half	3
	.byte	145,188,127
	.word	0,0
.L601:
	.word	-1,.L288,.L859-.L288,.L595-.L288
	.half	1
	.byte	88
	.word	0,0
.L598:
	.word	-1,.L288,0,.L857-.L288
	.half	1
	.byte	101
	.word	.L858-.L288,.L595-.L288
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_loc'
.L279:
	.word	-1,.L280,0,.L567-.L280
	.half	2
	.byte	138,0
	.word	0,0
.L572:
	.word	-1,.L280,.L835-.L280,.L840-.L280
	.half	1
	.byte	98
	.word	.L841-.L280,.L840-.L280
	.half	1
	.byte	100
	.word	0,0
.L568:
	.word	-1,.L280,0,.L834-.L280
	.half	1
	.byte	100
	.word	.L836-.L280,.L567-.L280
	.half	1
	.byte	108
	.word	0,0
.L570:
	.word	-1,.L280,0,.L835-.L280
	.half	1
	.byte	84
	.word	.L836-.L280,.L837-.L280
	.half	1
	.byte	88
	.word	0,0
.L571:
	.word	-1,.L280,.L834-.L280,.L567-.L280
	.half	1
	.byte	89
	.word	0,0
.L569:
	.word	-1,.L280,0,.L835-.L280
	.half	1
	.byte	101
	.word	.L838-.L280,.L839-.L280
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_loc'
.L285:
	.word	-1,.L286,0,.L851-.L286
	.half	2
	.byte	138,0
	.word	.L851-.L286,.L115-.L286
	.half	2
	.byte	138,8
	.word	.L115-.L286,.L115-.L286
	.half	2
	.byte	138,0
	.word	.L115-.L286,.L587-.L286
	.half	2
	.byte	138,8
	.word	.L587-.L286,.L587-.L286
	.half	2
	.byte	138,0
	.word	0,0
.L588:
	.word	-1,.L286,0,.L852-.L286
	.half	1
	.byte	100
	.word	0,0
.L591:
	.word	-1,.L286,0,.L852-.L286
	.half	1
	.byte	84
	.word	0,0
.L594:
	.word	0,0
.L590:
	.word	-1,.L286,0,.L853-.L286
	.half	1
	.byte	101
	.word	.L854-.L286,.L587-.L286
	.half	1
	.byte	111
	.word	0,0
.L593:
	.word	-1,.L286,0,.L587-.L286
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_loc'
.L289:
	.word	-1,.L290,0,.L860-.L290
	.half	2
	.byte	138,0
	.word	.L860-.L290,.L602-.L290
	.half	3
	.byte	138,200,0
	.word	.L602-.L290,.L602-.L290
	.half	2
	.byte	138,0
	.word	0,0
.L603:
	.word	-1,.L290,0,.L861-.L290
	.half	1
	.byte	100
	.word	0,0
.L607:
	.word	-1,.L290,0,.L602-.L290
	.half	3
	.byte	145,188,127
	.word	0,0
.L609:
	.word	-1,.L290,.L865-.L290,.L866-.L290
	.half	1
	.byte	100
	.word	.L127-.L290,.L867-.L290
	.half	1
	.byte	100
	.word	0,0
.L606:
	.word	-1,.L290,0,.L862-.L290
	.half	1
	.byte	84
	.word	.L860-.L290,.L864-.L290
	.half	1
	.byte	88
	.word	.L127-.L290,.L124-.L290
	.half	1
	.byte	88
	.word	0,0
.L608:
	.word	-1,.L290,.L864-.L290,.L127-.L290
	.half	1
	.byte	88
	.word	.L868-.L290,.L602-.L290
	.half	1
	.byte	88
	.word	0,0
.L605:
	.word	-1,.L290,0,.L863-.L290
	.half	1
	.byte	101
	.word	.L862-.L290,.L602-.L290
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_loc'
.L311:
	.word	-1,.L312,0,.L931-.L312
	.half	2
	.byte	138,0
	.word	.L931-.L312,.L646-.L312
	.half	2
	.byte	138,8
	.word	.L646-.L312,.L646-.L312
	.half	2
	.byte	138,0
	.word	0,0
.L649:
	.word	-1,.L312,0,.L240-.L312
	.half	1
	.byte	101
	.word	.L932-.L312,.L646-.L312
	.half	1
	.byte	108
	.word	.L934-.L312,.L935-.L312
	.half	1
	.byte	100
	.word	.L936-.L312,.L937-.L312
	.half	1
	.byte	100
	.word	0,0
.L650:
	.word	-1,.L312,.L933-.L312,.L646-.L312
	.half	1
	.byte	111
	.word	0,0
.L648:
	.word	-1,.L312,0,.L240-.L312
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_loc'
.L534:
	.word	0,0
.L538:
	.word	-1,.L256,.L786-.L256,.L787-.L256
	.half	1
	.byte	111
	.word	.L28-.L256,.L788-.L256
	.half	1
	.byte	111
	.word	.L792-.L256,.L50-.L256
	.half	1
	.byte	111
	.word	.L266-.L256,.L466-.L256
	.half	2
	.byte	145,124
	.word	.L262-.L256,.L486-.L256
	.half	2
	.byte	145,124
	.word	.L797-.L256,.L798-.L256
	.half	2
	.byte	145,124
	.word	.L258-.L256,.L496-.L256
	.half	2
	.byte	145,124
	.word	.L806-.L256,.L491-.L256
	.half	2
	.byte	145,124
	.word	.L264-.L256,.L471-.L256
	.half	2
	.byte	145,124
	.word	.L270-.L256,.L456-.L256
	.half	2
	.byte	145,124
	.word	.L268-.L256,.L461-.L256
	.half	2
	.byte	145,124
	.word	.L55-.L256,.L810-.L256
	.half	2
	.byte	145,124
	.word	.L812-.L256,.L524-.L256
	.half	2
	.byte	145,124
	.word	0,0
.L255:
	.word	-1,.L256,0,.L783-.L256
	.half	2
	.byte	138,0
	.word	.L783-.L256,.L29-.L256
	.half	2
	.byte	138,32
	.word	.L29-.L256,.L29-.L256
	.half	2
	.byte	138,0
	.word	.L29-.L256,.L524-.L256
	.half	2
	.byte	138,32
	.word	.L524-.L256,.L524-.L256
	.half	2
	.byte	138,0
	.word	0,0
.L532:
	.word	-1,.L256,.L266-.L256,.L466-.L256
	.half	1
	.byte	91
	.word	.L262-.L256,.L486-.L256
	.half	1
	.byte	91
	.word	.L799-.L256,.L798-.L256
	.half	1
	.byte	91
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	91
	.word	.L806-.L256,.L491-.L256
	.half	1
	.byte	91
	.word	.L264-.L256,.L471-.L256
	.half	1
	.byte	91
	.word	.L270-.L256,.L456-.L256
	.half	1
	.byte	91
	.word	.L268-.L256,.L461-.L256
	.half	1
	.byte	91
	.word	.L55-.L256,.L810-.L256
	.half	1
	.byte	91
	.word	.L812-.L256,.L31-.L256
	.half	1
	.byte	91
	.word	0,0
.L537:
	.word	-1,.L256,.L793-.L256,.L50-.L256
	.half	1
	.byte	101
	.word	.L795-.L256,.L49-.L256
	.half	1
	.byte	101
	.word	.L266-.L256,.L466-.L256
	.half	1
	.byte	109
	.word	.L262-.L256,.L486-.L256
	.half	1
	.byte	109
	.word	.L800-.L256,.L798-.L256
	.half	1
	.byte	109
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	109
	.word	.L806-.L256,.L491-.L256
	.half	1
	.byte	109
	.word	.L264-.L256,.L471-.L256
	.half	1
	.byte	109
	.word	.L270-.L256,.L456-.L256
	.half	1
	.byte	109
	.word	.L268-.L256,.L461-.L256
	.half	1
	.byte	109
	.word	.L55-.L256,.L810-.L256
	.half	1
	.byte	109
	.word	.L812-.L256,.L524-.L256
	.half	1
	.byte	109
	.word	0,0
.L548:
	.word	0,0
.L530:
	.word	-1,.L256,.L266-.L256,.L466-.L256
	.half	1
	.byte	88
	.word	.L262-.L256,.L486-.L256
	.half	1
	.byte	88
	.word	.L801-.L256,.L798-.L256
	.half	1
	.byte	88
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	88
	.word	.L806-.L256,.L491-.L256
	.half	1
	.byte	88
	.word	.L264-.L256,.L471-.L256
	.half	1
	.byte	88
	.word	.L270-.L256,.L456-.L256
	.half	1
	.byte	88
	.word	.L268-.L256,.L461-.L256
	.half	1
	.byte	88
	.word	.L55-.L256,.L810-.L256
	.half	1
	.byte	88
	.word	.L812-.L256,.L27-.L256
	.half	1
	.byte	88
	.word	0,0
.L546:
	.word	0,0
.L528:
	.word	-1,.L256,.L266-.L256,.L466-.L256
	.half	1
	.byte	89
	.word	.L262-.L256,.L486-.L256
	.half	1
	.byte	89
	.word	.L32-.L256,.L798-.L256
	.half	1
	.byte	89
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	89
	.word	.L806-.L256,.L491-.L256
	.half	1
	.byte	89
	.word	.L264-.L256,.L471-.L256
	.half	1
	.byte	89
	.word	.L270-.L256,.L456-.L256
	.half	1
	.byte	89
	.word	.L268-.L256,.L461-.L256
	.half	1
	.byte	89
	.word	.L55-.L256,.L810-.L256
	.half	1
	.byte	89
	.word	.L812-.L256,.L813-.L256
	.half	1
	.byte	89
	.word	.L815-.L256,.L27-.L256
	.half	1
	.byte	89
	.word	0,0
.L555:
	.word	-1,.L256,.L59-.L256,.L798-.L256
	.half	1
	.byte	92
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	92
	.word	.L806-.L256,.L491-.L256
	.half	1
	.byte	92
	.word	0,0
.L536:
	.word	-1,.L256,.L785-.L256,.L786-.L256
	.half	1
	.byte	111
	.word	.L789-.L256,.L542-.L256
	.half	1
	.byte	101
	.word	.L790-.L256,.L791-.L256
	.half	1
	.byte	111
	.word	.L266-.L256,.L466-.L256
	.half	2
	.byte	145,120
	.word	.L266-.L256,.L466-.L256
	.half	1
	.byte	111
	.word	.L33-.L256,.L796-.L256
	.half	1
	.byte	111
	.word	.L262-.L256,.L486-.L256
	.half	2
	.byte	145,120
	.word	.L802-.L256,.L798-.L256
	.half	2
	.byte	145,120
	.word	.L258-.L256,.L496-.L256
	.half	2
	.byte	145,120
	.word	.L806-.L256,.L491-.L256
	.half	2
	.byte	145,120
	.word	.L36-.L256,.L807-.L256
	.half	1
	.byte	111
	.word	.L264-.L256,.L471-.L256
	.half	2
	.byte	145,120
	.word	.L270-.L256,.L456-.L256
	.half	2
	.byte	145,120
	.word	.L268-.L256,.L461-.L256
	.half	2
	.byte	145,120
	.word	.L55-.L256,.L810-.L256
	.half	2
	.byte	145,120
	.word	.L811-.L256,.L810-.L256
	.half	1
	.byte	111
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	111
	.word	.L812-.L256,.L524-.L256
	.half	2
	.byte	145,120
	.word	.L812-.L256,.L72-.L256
	.half	1
	.byte	111
	.word	.L814-.L256,.L31-.L256
	.half	1
	.byte	111
	.word	0,0
.L529:
	.word	-1,.L256,.L262-.L256,.L486-.L256
	.half	1
	.byte	95
	.word	.L803-.L256,.L804-.L256
	.half	1
	.byte	95
	.word	.L56-.L256,.L59-.L256
	.half	1
	.byte	95
	.word	0,0
.L531:
	.word	-1,.L256,.L266-.L256,.L466-.L256
	.half	2
	.byte	145,116
	.word	.L262-.L256,.L486-.L256
	.half	2
	.byte	145,116
	.word	0,.L798-.L256
	.half	2
	.byte	145,116
	.word	.L258-.L256,.L496-.L256
	.half	2
	.byte	145,116
	.word	.L806-.L256,.L491-.L256
	.half	2
	.byte	145,116
	.word	.L264-.L256,.L471-.L256
	.half	2
	.byte	145,116
	.word	.L270-.L256,.L456-.L256
	.half	2
	.byte	145,116
	.word	.L268-.L256,.L461-.L256
	.half	2
	.byte	145,116
	.word	.L55-.L256,.L810-.L256
	.half	2
	.byte	145,116
	.word	.L812-.L256,.L524-.L256
	.half	2
	.byte	145,116
	.word	0,0
.L525:
	.word	-1,.L256,0,.L784-.L256
	.half	1
	.byte	100
	.word	.L794-.L256,.L49-.L256
	.half	1
	.byte	100
	.word	.L266-.L256,.L466-.L256
	.half	1
	.byte	108
	.word	.L262-.L256,.L486-.L256
	.half	1
	.byte	108
	.word	.L805-.L256,.L798-.L256
	.half	1
	.byte	108
	.word	.L258-.L256,.L496-.L256
	.half	1
	.byte	108
	.word	.L806-.L256,.L491-.L256
	.half	1
	.byte	108
	.word	.L808-.L256,.L809-.L256
	.half	1
	.byte	100
	.word	.L264-.L256,.L471-.L256
	.half	1
	.byte	108
	.word	.L270-.L256,.L456-.L256
	.half	1
	.byte	108
	.word	.L268-.L256,.L461-.L256
	.half	1
	.byte	108
	.word	.L55-.L256,.L810-.L256
	.half	1
	.byte	108
	.word	.L812-.L256,.L524-.L256
	.half	1
	.byte	108
	.word	0,0
.L544:
	.word	0,0
.L550:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_loc'
.L247:
	.word	-1,.L248,0,.L751-.L248
	.half	2
	.byte	138,0
	.word	.L751-.L248,.L651-.L248
	.half	2
	.byte	138,8
	.word	.L651-.L248,.L651-.L248
	.half	2
	.byte	138,0
	.word	0,0
.L656:
	.word	-1,.L248,.L752-.L248,.L757-.L248
	.half	1
	.byte	95
	.word	.L757-.L248,.L763-.L248
	.half	1
	.byte	82
	.word	.L764-.L248,.L651-.L248
	.half	1
	.byte	95
	.word	0,0
.L652:
	.word	-1,.L248,0,.L752-.L248
	.half	1
	.byte	100
	.word	0,.L651-.L248
	.half	2
	.byte	145,120
	.word	0,0
.L653:
	.word	-1,.L248,0,.L753-.L248
	.half	1
	.byte	101
	.word	.L755-.L248,.L651-.L248
	.half	1
	.byte	111
	.word	0,0
.L654:
	.word	-1,.L248,0,.L754-.L248
	.half	1
	.byte	102
	.word	.L756-.L248,.L651-.L248
	.half	1
	.byte	108
	.word	.L758-.L248,.L759-.L248
	.half	1
	.byte	100
	.word	.L760-.L248,.L761-.L248
	.half	1
	.byte	100
	.word	.L762-.L248,.L757-.L248
	.half	1
	.byte	101
	.word	0,0
.L655:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_loc'
.L245:
	.word	-1,.L246,0,.L640-.L246
	.half	2
	.byte	138,0
	.word	0,0
.L641:
	.word	-1,.L246,0,.L749-.L246
	.half	1
	.byte	100
	.word	0,0
.L644:
	.word	-1,.L246,0,.L9-.L246
	.half	1
	.byte	102
	.word	0,0
.L645:
	.word	0,0
.L643:
	.word	-1,.L246,0,.L750-.L246
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_loc'
.L243:
	.word	-1,.L244,0,.L738-.L244
	.half	2
	.byte	138,0
	.word	.L738-.L244,.L633-.L244
	.half	2
	.byte	138,8
	.word	.L633-.L244,.L633-.L244
	.half	2
	.byte	138,0
	.word	0,0
.L639:
	.word	-1,.L244,.L741-.L244,.L633-.L244
	.half	1
	.byte	111
	.word	0,0
.L636:
	.word	-1,.L244,0,.L5-.L244
	.half	1
	.byte	101
	.word	0,0
.L638:
	.word	-1,.L244,0,.L5-.L244
	.half	1
	.byte	102
	.word	.L740-.L244,.L633-.L244
	.half	1
	.byte	109
	.word	.L742-.L244,.L6-.L244
	.half	1
	.byte	100
	.word	.L743-.L244,.L744-.L244
	.half	1
	.byte	100
	.word	.L745-.L244,.L746-.L244
	.half	1
	.byte	100
	.word	.L747-.L244,.L748-.L244
	.half	1
	.byte	100
	.word	0,0
.L634:
	.word	-1,.L244,0,.L5-.L244
	.half	1
	.byte	100
	.word	.L739-.L244,.L633-.L244
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_loc'
.L273:
	.word	-1,.L274,0,.L557-.L274
	.half	2
	.byte	138,0
	.word	0,0
.L558:
	.word	-1,.L274,0,.L557-.L274
	.half	1
	.byte	100
	.word	.L816-.L274,.L557-.L274
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_loc'
.L706:
	.word	-1,.L242,0,.L736-.L242
	.half	1
	.byte	84
	.word	.L264-.L242,.L471-.L242
	.half	2
	.byte	145,124
	.word	.L270-.L242,.L456-.L242
	.half	2
	.byte	145,124
	.word	.L268-.L242,.L461-.L242
	.half	2
	.byte	145,124
	.word	0,.L704-.L242
	.half	2
	.byte	145,124
	.word	0,0
.L241:
	.word	-1,.L242,0,.L735-.L242
	.half	2
	.byte	138,0
	.word	.L735-.L242,.L704-.L242
	.half	2
	.byte	138,24
	.word	.L704-.L242,.L704-.L242
	.half	2
	.byte	138,0
	.word	0,0
.L717:
	.word	0,0
.L715:
	.word	0,0
.L707:
	.word	-1,.L242,.L264-.L242,.L471-.L242
	.half	2
	.byte	145,126
	.word	.L270-.L242,.L456-.L242
	.half	2
	.byte	145,126
	.word	.L268-.L242,.L461-.L242
	.half	2
	.byte	145,126
	.word	0,.L704-.L242
	.half	2
	.byte	145,126
	.word	0,0
.L705:
	.word	-1,.L242,0,.L737-.L242
	.half	1
	.byte	100
	.word	0,0
.L713:
	.word	0,0
.L719:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1501:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L242,.L704-.L242
	.byte	4
	.word	(.L735-.L242)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L704-.L735)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L244,.L633-.L244
	.byte	4
	.word	(.L738-.L244)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L633-.L738)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_frame'
	.word	12
	.word	.L1501,.L246,.L640-.L246
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L248,.L651-.L248
	.byte	4
	.word	(.L751-.L248)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L651-.L751)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L250,.L657-.L250
	.byte	4
	.word	(.L765-.L250)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L657-.L765)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_frame'
	.word	24
	.word	.L1501,.L252,.L499-.L252
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1501,.L254,.L503-.L254
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_frame'
	.word	52
	.word	.L1501,.L256,.L524-.L256
	.byte	4
	.word	(.L783-.L256)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L29-.L783)/2
	.byte	19,0,8,26,19,32,22,26,3,19,138,32,4
	.word	(.L524-.L29)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L1501,.L272,.L512-.L272
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_frame'
	.word	20
	.word	.L1501,.L274,.L557-.L274
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L276,.L559-.L276
	.byte	4
	.word	(.L817-.L276)/2
	.byte	19,128,2,22,26,4,19,138,128,2,4
	.word	(.L559-.L817)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L278,.L721-.L278
	.byte	4
	.word	(.L825-.L278)/2
	.byte	19,128,4,22,26,4,19,138,128,4,4
	.word	(.L721-.L825)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_frame'
	.word	12
	.word	.L1501,.L280,.L567-.L280
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L282,.L573-.L282
	.byte	4
	.word	(.L842-.L282)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L573-.L842)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_frame'
	.word	52
	.word	.L1501,.L284,.L580-.L284
	.byte	4
	.word	(.L847-.L284)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L112-.L847)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L580-.L112)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_frame'
	.word	52
	.word	.L1501,.L286,.L587-.L286
	.byte	4
	.word	(.L851-.L286)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L115-.L851)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L587-.L115)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L288,.L595-.L288
	.byte	4
	.word	(.L855-.L288)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L595-.L855)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L290,.L602-.L290
	.byte	4
	.word	(.L860-.L290)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L602-.L860)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L292,.L610-.L292
	.byte	4
	.word	(.L869-.L292)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L610-.L869)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L294,.L616-.L294
	.byte	4
	.word	(.L874-.L294)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L616-.L874)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L296,.L623-.L296
	.byte	4
	.word	(.L879-.L296)/2
	.byte	19,136,2,22,26,4,19,138,136,2,4
	.word	(.L623-.L879)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_frame'
	.word	12
	.word	.L1501,.L298,.L729-.L298
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_frame'
	.word	68
	.word	.L1501,.L300,.L662-.L300
	.byte	4
	.word	(.L888-.L300)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L163-.L888)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L165-.L163)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L662-.L165)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_frame'
	.word	88
	.word	.L1501,.L302,.L667-.L302
	.byte	4
	.word	(.L894-.L302)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L211-.L894)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L212-.L211)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L237-.L212)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L667-.L237)/2
	.byte	19,0,8,26,0,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_frame'
	.word	12
	.word	.L1501,.L308,.L514-.L308
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_frame'
	.word	24
	.word	.L1501,.L310,.L522-.L310
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_frame'
	.word	36
	.word	.L1501,.L312,.L646-.L312
	.byte	4
	.word	(.L931-.L312)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L646-.L931)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1502:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_41')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L258,.L496-.L258
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_40')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L260,.L491-.L260
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_39')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L262,.L486-.L262
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_36')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L264,.L471-.L264
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_35')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L266,.L466-.L266
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_34')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L268,.L461-.L268
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_33')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L270,.L456-.L270
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_38')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L304,.L481-.L304
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_37')
	.sect	'.debug_frame'
	.word	24
	.word	.L1502,.L306,.L476-.L306
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
