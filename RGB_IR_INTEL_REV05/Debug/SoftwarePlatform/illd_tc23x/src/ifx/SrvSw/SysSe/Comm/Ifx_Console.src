	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc19164a --dep-file=SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\.Ifx_Console.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -DNDEBUG -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --no-warnings=542 --make-target=SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.src ..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c"
	.compiler_name		"ctc"
	;source	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c'

	
$TC16X
	.sdecl	'.zrodata.IfxStdIf_DPipe..5.cnt',data,rom
	.sect	'.zrodata.IfxStdIf_DPipe..5.cnt'
	.align	4
.5.cnt:	.type	object
	.size	.5.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_Console.Ifx_Console_init',code,cluster('Ifx_Console_init')
	.sect	'.text.Ifx_Console.Ifx_Console_init'
	.align	2
	
	.global	Ifx_Console_init

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     1  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     2   * \file Ifx_Console.c
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     3   * \brief Main Ifx_Console module implementation file
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     4   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     5   * \version iLLD_1_0_0_11_0
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     7   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     8   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	     9   *                                 IMPORTANT NOTICE
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    10   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    11   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    15   * products.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    16   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    22   *
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    23   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    24  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    25  #include <string.h>
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    26  #include <stdio.h>
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    27  #include <stdarg.h>
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    28  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    29  #include "Ifx_Console.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    30  #include "_Utilities/Ifx_Assert.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    31  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    32  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    33  Ifx_Console Ifx_g_console;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    34  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    35  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    36   * \brief Initialize the \ref Ifx_g_console object.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    37   * \param standardIo Pointer to the IfxStdIf_DPipe object used by the \ref Ifx_g_console.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    38   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    39  void Ifx_Console_init(IfxStdIf_DPipe *standardIo)
; Function Ifx_Console_init
.L14:
Ifx_Console_init:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    40  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    41      Ifx_g_console.standardIo = standardIo;
	st.a	Ifx_g_console,a4
.L102:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    42      Ifx_g_console.align      = 0;
	mov	d15,#0
	st.h	Ifx_g_console+4,d15
.L103:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    43  }
	ret
.L40:
	
__Ifx_Console_init_function_end:
	.size	Ifx_Console_init,__Ifx_Console_init_function_end-Ifx_Console_init
.L27:
	; End of function
	
	.sdecl	'.text.Ifx_Console.Ifx_Console_print',code,cluster('Ifx_Console_print')
	.sect	'.text.Ifx_Console.Ifx_Console_print'
	.align	2
	
	.global	Ifx_Console_print

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    44  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    45  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    46  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    47   * \brief Print formatted string into \ref Ifx_g_console.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    48   * \param format printf-compatible formatted string.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    49   * \retval TRUE if the string is printed successfully
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    50   * \retval FALSE if the function failed.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    51   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    52  boolean Ifx_Console_print(pchar format, ...)
; Function Ifx_Console_print
.L16:
Ifx_Console_print:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    53  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    54      if (!Ifx_g_console.standardIo->txDisabled)
	ld.a	a15,Ifx_g_console
.L108:
	mov.aa	a5,a4
.L87:
	lea	a10,[a10]-280
.L85:
	ld.bu	d15,[a15]4
.L109:
	jne	d15,#0,.L2
.L48:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    55      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    56          char      message[STDIF_DPIPE_MAX_PRINT_SIZE + 1];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    57          Ifx_SizeT count;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    58          va_list   args;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    59          va_start(args, format);
	lea	a6,[a10]280
.L110:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    60          vsprintf((char *)message, format, args);
	lea	a4,[a10]20
.L86:
	call	vsprintf
.L88:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    61          va_end(args);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    62          count = (Ifx_SizeT)strlen(message);
	lea	a4,[a10]20
	call	strlen
.L111:
	st.h	[a10]276,d2
.L112:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    63          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, count < STDIF_DPIPE_MAX_PRINT_SIZE);
	ld.h	d0,[a10]276
	mov	d15,#255
	jlt	d0,d15,.L3
	movh.a	a15,#@his(verboseLevelStr+8)
	ld.a	a15,[a15]@los(verboseLevelStr+8)
	st.a	[a10],a15
	movh.a	a15,#@his(.2.str)
	lea	a15,[a15]@los(.2.str)
	st.a	[a10]4,a15
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
	st.a	[a10]8,a15
	mov	d15,#63
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999001___func__)
	lea	a15,[a15]@los(_999001___func__)
	st.a	[a10]16,a15
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
	call	printf
.L3:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    64  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    65          return IfxStdIf_DPipe_write(Ifx_g_console.standardIo, (void *)message, &count, TIME_INFINITE);
	ld.a	a15,Ifx_g_console
.L54:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.d	e4,.5.cnt
.L113:
	lea	a5,[a10]20
.L114:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.a	a2,[a15]8
.L115:
	ld.a	a4,[a15]
.L116:
	lea	a6,[a10]276
.L117:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ji	a2
.L2:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    66      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    67      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    68      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    69          return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    70      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    71  }
	mov	d2,#1
	ret
.L44:
	
__Ifx_Console_print_function_end:
	.size	Ifx_Console_print,__Ifx_Console_print_function_end-Ifx_Console_print
.L32:
	; End of function
	
	.sdecl	'.text.Ifx_Console.Ifx_Console_printAlign',code,cluster('Ifx_Console_printAlign')
	.sect	'.text.Ifx_Console.Ifx_Console_printAlign'
	.align	2
	
	.global	Ifx_Console_printAlign

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    72  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    73  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    74  /**
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    75   * \brief Print formatted string into \ref Ifx_g_console.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    76   * Indented with a number of spaces.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    77   * \param format printf-compatible formatted string.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    78   * \retval TRUE if the string is printed successfully
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    79   * \retval FALSE if the function failed.
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    80   */
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    81  boolean Ifx_Console_printAlign(pchar format, ...)
; Function Ifx_Console_printAlign
.L18:
Ifx_Console_printAlign:	.type	func

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    82  {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    83      if (!Ifx_g_console.standardIo->txDisabled)
	lea	a12,Ifx_g_console
.L122:
	ld.a	a15,[a12]
.L123:
	mov.aa	a5,a4
.L90:
	lea	a10,[a10]-304
.L89:
	ld.bu	d15,[a15]4
.L124:
	jne	d15,#0,.L6
.L67:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    84      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    85          char      message[STDIF_DPIPE_MAX_PRINT_SIZE + 1];
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    86          Ifx_SizeT align, count;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    87          char      spaces[17] = "                ";
	movh.a	a15,#@his(.4.ini)
	lea	a15,[a15]@los(.4.ini)
.L125:
	lea	a2,[a10]278
	lea	a4,16
.L7:
	ld.bu	d15,[a15+]
	st.b	[a2+],d15
	loop	a4,.L7
.L126:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    88          va_list   args;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    89          va_start(args, format);
	lea	a6,[a10]304
.L127:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    90          vsprintf((char *)message, format, args);
	lea	a4,[a10]20
.L128:
	call	vsprintf
.L91:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    91          va_end(args);
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    92          count = (Ifx_SizeT)strlen(message);
	lea	a4,[a10]20
	call	strlen
.L129:
	st.h	[a10]276,d2
.L130:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    93          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, count < STDIF_DPIPE_MAX_PRINT_SIZE);
	ld.h	d0,[a10]276
	mov	d15,#255
	jlt	d0,d15,.L8
	movh.a	a15,#@his(verboseLevelStr+8)
	ld.a	a15,[a15]@los(verboseLevelStr+8)
	st.a	[a10],a15
	movh.a	a15,#@his(.2.str)
	lea	a15,[a15]@los(.2.str)
	st.a	[a10]4,a15
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
	st.a	[a10]8,a15
	mov	d15,#93
	st.w	[a10]12,d15
	movh.a	a15,#@his(_999002___func__)
	lea	a15,[a15]@los(_999002___func__)
	st.a	[a10]16,a15
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
	call	printf
.L8:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    94          align = Ifx_g_console.align;
	ld.h	d15,Ifx_g_console+4
.L92:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    95  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    96          while (align > 0)
	j	.L9
.L10:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    97          {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    98              Ifx_SizeT scount;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	    99              scount = __min(align, 10);
	min	d0,d15,#10
	st.h	[a10]296,d0
.L74:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   100              IfxStdIf_DPipe_write(Ifx_g_console.standardIo, (void *)spaces, &scount, TIME_INFINITE);
	lea	a5,[a10]278
.L75:
	ld.a	a15,[a12]
.L81:
	lea	a6,[a10]296
.L131:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.d	e4,.5.cnt
.L132:
	ld.a	a2,[a15]8
.L133:
	ld.a	a4,[a15]
.L134:
	calli	a2
.L82:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   101              align  = align - scount;
	ld.h	d0,[a10]296
.L135:
	sub	d15,d0
.L93:
	extr	d15,d15,#0,#16
.L9:
	jge	d15,#1,.L10
.L136:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   102          }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   103  
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   104          return IfxStdIf_DPipe_write(Ifx_g_console.standardIo, (void *)message, &count, TIME_INFINITE);
	ld.a	a15,[a12]
.L83:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.d	e4,.5.cnt
.L137:
	lea	a5,[a10]20
.L138:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.a	a2,[a15]8
.L139:
	ld.a	a4,[a15]
.L140:
	lea	a6,[a10]276
.L141:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ji	a2
.L6:

; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   105      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   106      else
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   107      {
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   108          return TRUE;
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   109      }
; ..\SoftwarePlatform\illd_tc23x\src\ifx\SrvSw\SysSe\Comm\Ifx_Console.c	   110  }
	mov	d2,#1
	ret
.L64:
	
__Ifx_Console_printAlign_function_end:
	.size	Ifx_Console_printAlign,__Ifx_Console_printAlign_function_end-Ifx_Console_printAlign
.L37:
	; End of function
	
	.sdecl	'.zbss.Ifx_Console.Ifx_g_console',data,cluster('Ifx_g_console')
	.sect	'.zbss.Ifx_Console.Ifx_g_console'
	.global	Ifx_g_console
	.align	4
Ifx_g_console:	.type	object
	.size	Ifx_g_console,8
	.space	8
	.sdecl	'.rodata.Ifx_Console..1.str',data,rom
	.sect	'.rodata.Ifx_Console..1.str'
.1.str:	.type	object
	.size	.1.str,43
	.byte	91,65,83,83
	.byte	69,82,84,58
	.byte	37,115,93,32
	.byte	39,37,115,39
	.byte	32,105,110,32
	.byte	37,115,58,37
	.byte	100,32,40,102
	.byte	117,110,99,116
	.byte	105,111,110,32
	.byte	39,37,115,39
	.byte	41,10
	.space	1
	.sdecl	'.rodata.Ifx_Console..2.str',data,rom
	.sect	'.rodata.Ifx_Console..2.str'
.2.str:	.type	object
	.size	.2.str,35
	.byte	99,111,117,110
	.byte	116,32,60,32
	.byte	83,84,68,73
	.byte	70,95,68,80
	.byte	73,80,69,95
	.byte	77,65,88,95
	.byte	80,82,73,78
	.byte	84,95,83,73
	.byte	90,69
	.space	1
	.sdecl	'.rodata.Ifx_Console..3.str',data,rom
	.sect	'.rodata.Ifx_Console..3.str'
.3.str:	.type	object
	.size	.3.str,70
	.byte	46,46,92,83
	.byte	111,102,116,119
	.byte	97,114,101,80
	.byte	108,97,116,102
	.byte	111,114,109,92
	.byte	105,108,108,100
	.byte	95,116,99,50
	.byte	51,120,92,115
	.byte	114,99,92,105
	.byte	102,120,92,83
	.byte	114,118,83,119
	.byte	92,83,121,115
	.byte	83,101,92,67
	.byte	111,109,109,92
	.byte	73,102,120,95
	.byte	67,111,110,115
	.byte	111,108,101,46
	.byte	99
	.space	1
	.sdecl	'.rodata.Ifx_Console._999001___func__',data,rom,cluster('_999001___func__')
	.sect	'.rodata.Ifx_Console._999001___func__'
_999001___func__:	.type	object
	.size	_999001___func__,18
	.byte	73,102,120,95
	.byte	67,111,110,115
	.byte	111,108,101,95
	.byte	112,114,105,110
	.byte	116
	.space	1
	.sdecl	'.rodata.Ifx_Console..4.ini',data,rom
	.sect	'.rodata.Ifx_Console..4.ini'
.4.ini:	.type	object
	.size	.4.ini,17
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.space	1
	.sdecl	'.rodata.Ifx_Console._999002___func__',data,rom,cluster('_999002___func__')
	.sect	'.rodata.Ifx_Console._999002___func__'
_999002___func__:	.type	object
	.size	_999002___func__,23
	.byte	73,102,120,95
	.byte	67,111,110,115
	.byte	111,108,101,95
	.byte	112,114,105,110
	.byte	116,65,108,105
	.byte	103,110
	.space	1
	.calls	'Ifx_Console_print','vsprintf'
	.calls	'Ifx_Console_print','strlen'
	.calls	'Ifx_Console_print','printf'
	.calls	'Ifx_Console_print','__INDIRECT__'
	.calls	'Ifx_Console_printAlign','vsprintf'
	.calls	'Ifx_Console_printAlign','strlen'
	.calls	'Ifx_Console_printAlign','printf'
	.calls	'Ifx_Console_printAlign','__INDIRECT__'
	.calls	'Ifx_Console_init','',0
	.calls	'Ifx_Console_print','',280
	.extern	strlen
	.extern	printf
	.extern	vsprintf
	.extern	verboseLevelStr
	.extern	__printf_float
	.extern	__printf_llong
	.extern	__INDIRECT__
	.calls	'Ifx_Console_printAlign','',304
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L20:
	.word	2752
	.half	3
	.word	.L21
	.byte	4
.L19:
	.byte	1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L22
.L43:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'void',0,4
	.word	209
	.byte	5
	.byte	'IfxStdIf_InterfaceDriver',0,2,97,15
	.word	215
.L51:
	.byte	2
	.byte	'short int',0,2,5,4
	.word	253
	.byte	2
	.byte	'long long int',0,8,5,6
	.word	192
	.byte	1,1,7
	.word	215
	.byte	7
	.word	215
	.byte	7
	.word	266
	.byte	7
	.word	271
	.byte	0,4
	.word	288
	.byte	5
	.byte	'IfxStdIf_DPipe_Write',0,1,72,19
	.word	316
	.byte	5
	.byte	'IfxStdIf_DPipe_Read',0,1,87,19
	.word	316
	.byte	2
	.byte	'long int',0,4,5,6
	.word	378
	.byte	1,1,7
	.word	215
	.byte	0,4
	.word	390
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadCount',0,1,95,18
	.word	403
	.byte	8
	.word	192
	.byte	4
	.word	444
	.byte	6
	.word	449
	.byte	1,1,7
	.word	215
	.byte	0,4
	.word	454
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadEvent',0,1,103,36
	.word	467
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteCount',0,1,127,18
	.word	403
	.byte	4
	.word	454
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteEvent',0,1,135,1,37
	.word	545
	.byte	6
	.word	192
	.byte	1,1,7
	.word	215
	.byte	7
	.word	253
	.byte	7
	.word	271
	.byte	0,4
	.word	588
	.byte	5
	.byte	'IfxStdIf_DPipe_CanReadCount',0,1,146,1,19
	.word	611
	.byte	5
	.byte	'IfxStdIf_DPipe_CanWriteCount',0,1,157,1,19
	.word	611
	.byte	6
	.word	192
	.byte	1,1,7
	.word	215
	.byte	7
	.word	271
	.byte	0,4
	.word	691
	.byte	5
	.byte	'IfxStdIf_DPipe_FlushTx',0,1,166,1,19
	.word	709
	.byte	9,1,1,7
	.word	215
	.byte	0,4
	.word	746
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearTx',0,1,180,1,16
	.word	755
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearRx',0,1,173,1,16
	.word	755
	.byte	5
	.byte	'IfxStdIf_DPipe_OnReceive',0,1,188,1,16
	.word	755
	.byte	5
	.byte	'IfxStdIf_DPipe_OnTransmit',0,1,195,1,16
	.word	755
	.byte	5
	.byte	'IfxStdIf_DPipe_OnError',0,1,202,1,16
	.word	755
	.byte	2
	.byte	'unsigned long int',0,4,7,6
	.word	925
	.byte	1,1,7
	.word	215
	.byte	0,4
	.word	946
	.byte	5
	.byte	'IfxStdIf_DPipe_GetSendCount',0,1,111,18
	.word	959
	.byte	6
	.word	271
	.byte	1,1,7
	.word	215
	.byte	0,4
	.word	1000
	.byte	5
	.byte	'IfxStdIf_DPipe_GetTxTimeStamp',0,1,119,24
	.word	1013
	.byte	5
	.byte	'IfxStdIf_DPipe_ResetSendCount',0,1,209,1,16
	.word	755
	.byte	10
	.byte	'IfxStdIf_DPipe_',0,1,213,1,8,76,11
	.byte	'driver',0
	.word	220
	.byte	4,2,35,0,11
	.byte	'txDisabled',0
	.word	192
	.byte	1,2,35,4,11
	.byte	'write',0
	.word	321
	.byte	4,2,35,8,11
	.byte	'read',0
	.word	350
	.byte	4,2,35,12,11
	.byte	'getReadCount',0
	.word	408
	.byte	4,2,35,16,11
	.byte	'getReadEvent',0
	.word	472
	.byte	4,2,35,20,11
	.byte	'getWriteCount',0
	.word	508
	.byte	4,2,35,24,11
	.byte	'getWriteEvent',0
	.word	550
	.byte	4,2,35,28,11
	.byte	'canReadCount',0
	.word	616
	.byte	4,2,35,32,11
	.byte	'canWriteCount',0
	.word	653
	.byte	4,2,35,36,11
	.byte	'flushTx',0
	.word	714
	.byte	4,2,35,40,11
	.byte	'clearTx',0
	.word	760
	.byte	4,2,35,44,11
	.byte	'clearRx',0
	.word	792
	.byte	4,2,35,48,11
	.byte	'onReceive',0
	.word	824
	.byte	4,2,35,52,11
	.byte	'onTransmit',0
	.word	858
	.byte	4,2,35,56,11
	.byte	'onError',0
	.word	893
	.byte	4,2,35,60,11
	.byte	'getSendCount',0
	.word	964
	.byte	4,2,35,64,11
	.byte	'getTxTimeStamp',0
	.word	1018
	.byte	4,2,35,68,11
	.byte	'resetSendCount',0
	.word	1056
	.byte	4,2,35,72,0
.L41:
	.byte	4
	.word	1095
	.byte	4
	.word	253
.L53:
	.byte	12
	.byte	'IfxStdIf_DPipe_write',0,3,1,242,1,20
	.word	192
	.byte	1,1
.L55:
	.byte	13
	.byte	'stdif',0,1,242,1,57
	.word	1495
.L57:
	.byte	13
	.byte	'data',0,1,242,1,70
	.word	215
.L59:
	.byte	13
	.byte	'count',0,1,242,1,87
	.word	1500
.L61:
	.byte	13
	.byte	'timeout',0,1,242,1,107
	.word	271
.L63:
	.byte	14,0,4
	.word	209
	.byte	4
	.word	288
	.byte	4
	.word	288
	.byte	4
	.word	390
	.byte	4
	.word	454
	.byte	4
	.word	390
	.byte	4
	.word	454
	.byte	4
	.word	588
	.byte	4
	.word	588
	.byte	4
	.word	691
	.byte	4
	.word	746
	.byte	4
	.word	746
	.byte	4
	.word	746
	.byte	4
	.word	746
	.byte	4
	.word	746
	.byte	4
	.word	946
	.byte	4
	.word	1000
	.byte	4
	.word	746
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'__ld64',0,3,3,110,19
	.word	1691
	.byte	1,1,13
	.byte	'addr',0,3,110,32
	.word	215
	.byte	14,0,15
	.byte	'__st64',0,3,3,118,17,1,1,13
	.byte	'addr',0,3,118,30
	.word	215
	.byte	13
	.byte	'value',0,3,118,43
	.word	1691
	.byte	14,0,2
	.byte	'int',0,4,5,16
	.byte	'__min',0
	.word	1793
	.byte	1,1,1,1,7
	.word	1793
	.byte	7
	.word	1793
	.byte	0,17
	.byte	'__dotdotdot__',0
	.word	215
	.byte	1,1,1,1,2
	.byte	'unsigned int',0,4,7,2
	.byte	'char',0,1,6,18
	.word	1865
	.byte	4
	.word	1873
	.byte	19
	.byte	'strlen',0,4,52,17
	.word	1849
	.byte	1,1,1,1,20,4,52,39
	.word	1878
	.byte	0,21
	.word	1878
	.byte	19
	.byte	'printf',0,5,143,1,16
	.word	1793
	.byte	1,1,1,1,20,5,143,1,38
	.word	1911
	.byte	22,5,143,1,50,0,4
	.word	1865
	.byte	21
	.word	1951
	.byte	21
	.word	1878
	.byte	5
	.byte	'va_list',0,6,24,16
	.word	1951
	.byte	19
	.byte	'vsprintf',0,5,153,1,16
	.word	1793
	.byte	1,1,1,1,20,5,153,1,32
	.word	1956
	.byte	20,5,153,1,55
	.word	1961
	.byte	20,5,153,1,67
	.word	1966
	.byte	0,4
	.word	1865
	.byte	23
	.word	1505
	.byte	24
	.word	1538
	.byte	24
	.word	1553
	.byte	24
	.word	1567
	.byte	24
	.word	1582
	.byte	14,0,18
	.word	1865
	.byte	4
	.word	2064
.L45:
	.byte	5
	.byte	'pchar',0,7,39,28
	.word	1878
	.byte	25,18
	.word	1865
	.byte	26,17,0
.L47:
	.byte	18
	.word	2088
.L49:
	.byte	25,128,2
	.word	1865
	.byte	26,255,1,0,25,23
	.word	1865
	.byte	26,22,0
.L66:
	.byte	18
	.word	2113
.L71:
	.byte	25,17
	.word	1865
	.byte	26,16,0,23
	.word	1717
	.byte	24
	.word	1735
	.byte	14,0,23
	.word	1750
	.byte	24
	.word	1764
	.byte	24
	.word	1777
	.byte	14,0,27
	.byte	'__INDIRECT__',0,8,1,1,1,1,1,5
	.byte	'__wchar_t',0,8,1,1
	.word	253
	.byte	5
	.byte	'__size_t',0,8,1,1
	.word	1849
	.byte	5
	.byte	'__ptrdiff_t',0,8,1,1
	.word	1793
	.byte	28,1,4
	.word	2240
	.byte	5
	.byte	'__codeptr',0,8,1,1
	.word	2242
	.byte	5
	.byte	'__intptr_t',0,8,1,1
	.word	1793
	.byte	5
	.byte	'__uintptr_t',0,8,1,1
	.word	1849
	.byte	5
	.byte	'size_t',0,4,29,25
	.word	1849
	.byte	2
	.byte	'unsigned short int',0,2,7,5
	.byte	'_iob_flag_t',0,5,82,25
	.word	2319
	.byte	25,24
	.word	1878
	.byte	26,5,0,29
	.byte	'verboseLevelStr',0,9,29,20
	.word	2361
	.byte	1,1,5
	.byte	'uint8',0,10,89,24
	.word	192
	.byte	5
	.byte	'sint16',0,10,90,24
	.word	253
	.byte	5
	.byte	'uint16',0,10,91,24
	.word	2319
	.byte	5
	.byte	'sint32',0,10,92,24
	.word	378
	.byte	5
	.byte	'uint32',0,10,93,24
	.word	925
	.byte	2
	.byte	'float',0,4,4,5
	.byte	'float32',0,10,94,24
	.word	2470
	.byte	5
	.byte	'boolean',0,10,104,24
	.word	192
	.byte	5
	.byte	'sint64',0,7,36,28
	.word	271
	.byte	5
	.byte	'uint64',0,7,37,28
	.word	1691
	.byte	5
	.byte	'pvoid',0,7,40,28
	.word	215
	.byte	5
	.byte	'Ifx_TickTime',0,7,43,28
	.word	271
	.byte	5
	.byte	'Ifx_SizeT',0,7,56,16
	.word	253
	.byte	5
	.byte	'IfxStdIf_DPipe',0,1,51,32
	.word	1095
	.byte	8
	.word	192
	.byte	4
	.word	2617
	.byte	5
	.byte	'IfxStdIf_DPipe_WriteEvent',0,1,53,32
	.word	2622
	.byte	5
	.byte	'IfxStdIf_DPipe_ReadEvent',0,1,54,32
	.word	2622
.L84:
	.byte	30,11,38,9,8,11
	.byte	'standardIo',0
	.word	1495
	.byte	4,2,35,0,11
	.byte	'align',0
	.word	253
	.byte	2,2,35,4,0,5
	.byte	'Ifx_Console',0,11,42,3
	.word	2694
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L21:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,22,0,3,8,58,15,59,15,57,15,73,19,0,0,6,21,1,73,19,54,15,39,12,0,0,7,5,0,73,19,0,0,8,53,0,73,19,0,0
	.byte	9,21,1,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,13,5,0,3,8,58,15,59,15,57,15,73,19,0,0,14,11,0,0,0
	.byte	15,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,16,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,17,46
	.byte	0,3,8,73,19,54,15,39,12,63,12,60,12,0,0,18,38,0,73,19,0,0,19,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39
	.byte	12,63,12,60,12,0,0,20,5,0,58,15,59,15,57,15,73,19,0,0,21,55,0,73,19,0,0,22,24,0,58,15,59,15,57,15,0,0
	.byte	23,46,1,49,19,0,0,24,5,0,49,19,0,0,25,1,1,11,15,73,19,0,0,26,33,0,47,15,0,0,27,46,0,3,8,58,15,59,15,57
	.byte	15,54,15,63,12,60,12,0,0,28,21,0,54,15,0,0,29,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,30,19,1
	.byte	58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L22:
	.word	.L95-.L94
.L94:
	.half	3
	.word	.L97-.L96
.L96:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_common\\ifx_cfg\\include',0
	.byte	0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'string.h',0,1,0,0
	.byte	'stdio.h',0,1,0,0
	.byte	'stdarg.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0,0,0,0
	.byte	'Ifx_Cfg.h',0,2,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.h',0,0,0,0,0
.L97:
.L95:
	.sdecl	'.debug_info',debug,cluster('Ifx_Console_init')
	.sect	'.debug_info'
.L23:
	.word	267
	.half	3
	.word	.L24
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L26,.L25
	.byte	2
	.word	.L19
	.byte	3
	.byte	'Ifx_Console_init',0,1,39,6,1,1,1
	.word	.L14,.L40,.L13
	.byte	4
	.byte	'standardIo',0,1,39,39
	.word	.L41,.L42
	.byte	5
	.word	.L14,.L40
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Console_init')
	.sect	'.debug_abbrev'
.L24:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Console_init')
	.sect	'.debug_line'
.L25:
	.word	.L99-.L98
.L98:
	.half	3
	.word	.L101-.L100
.L100:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0,0,0,0,0
.L101:
	.byte	5,30,7,0,5,2
	.word	.L14
	.byte	3,40,1,5,32,9
	.half	.L102-.L14
	.byte	3,1,1,5,30,1,5,1,9
	.half	.L103-.L102
	.byte	3,1,1,7,9
	.half	.L27-.L103
	.byte	0,1,1
.L99:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Console_init')
	.sect	'.debug_ranges'
.L26:
	.word	-1,.L14,0,.L27-.L14,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Console_print')
	.sect	'.debug_info'
.L28:
	.word	407
	.half	3
	.word	.L29
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L31,.L30
	.byte	2
	.word	.L19
	.byte	3
	.byte	'Ifx_Console_print',0,1,52,9
	.word	.L43
	.byte	1,1,1
	.word	.L16,.L44,.L15
	.byte	4
	.byte	'format',0,1,52,33
	.word	.L45,.L46
	.byte	5,1,52,41,6
	.word	.L16,.L44
	.byte	7
	.byte	'__func__',0,1,63,9
	.word	.L47
	.byte	5,3
	.word	_999001___func__
	.byte	6
	.word	.L48,.L2
	.byte	8
	.byte	'message',0,1,56,19
	.word	.L49,.L50
	.byte	8
	.byte	'count',0,1,57,19
	.word	.L51,.L52
	.byte	9
	.word	.L53,.L54,.L2
	.byte	10
	.word	.L55,.L56
	.byte	10
	.word	.L57,.L58
	.byte	10
	.word	.L59,.L60
	.byte	10
	.word	.L61,.L62
	.byte	11
	.word	.L63,.L54,.L2
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Console_print')
	.sect	'.debug_abbrev'
.L29:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,24,0,58,15,59,15,57,15
	.byte	0,0,6,11,1,17,1,18,1,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16
	.byte	2,6,0,0,9,29,1,49,16,17,1,18,1,0,0,10,5,0,49,16,2,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Console_print')
	.sect	'.debug_line'
.L30:
	.word	.L105-.L104
.L104:
	.half	3
	.word	.L107-.L106
.L106:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L107:
	.byte	5,23,7,0,5,2
	.word	.L16
	.byte	3,53,1,5,9,9
	.half	.L108-.L16
	.byte	3,126,1,5,34,9
	.half	.L85-.L108
	.byte	3,2,1,5,10,9
	.half	.L109-.L85
	.byte	1,5,9,7,9
	.half	.L48-.L109
	.byte	3,5,1,5,26,9
	.half	.L110-.L48
	.byte	3,1,1,5,9,9
	.half	.L86-.L110
	.byte	3,127,1,5,35,9
	.half	.L88-.L86
	.byte	3,3,1,5,15,9
	.half	.L111-.L88
	.byte	1,5,9,9
	.half	.L112-.L111
	.byte	3,1,1,5,50,9
	.half	.L3-.L112
	.byte	3,2,1,4,2,5,53,9
	.half	.L54-.L3
	.byte	3,179,1,1,4,1,5,71,9
	.half	.L113-.L54
	.byte	3,205,126,1,4,2,5,17,9
	.half	.L114-.L113
	.byte	3,179,1,1,5,30,9
	.half	.L115-.L114
	.byte	1,4,1,5,81,9
	.half	.L116-.L115
	.byte	3,205,126,1,4,2,5,53,9
	.half	.L117-.L116
	.byte	3,179,1,1,4,1,5,16,7,9
	.half	.L2-.L117
	.byte	3,209,126,1,5,1,3,2,1,7,9
	.half	.L32-.L2
	.byte	0,1,1
.L105:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Console_print')
	.sect	'.debug_ranges'
.L31:
	.word	-1,.L16,0,.L32-.L16,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Console_printAlign')
	.sect	'.debug_info'
.L33:
	.word	587
	.half	3
	.word	.L34
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L36,.L35
	.byte	2
	.word	.L19
	.byte	3
	.byte	'Ifx_Console_printAlign',0,1,81,9
	.word	.L43
	.byte	1,1,1
	.word	.L18,.L64,.L17
	.byte	4
	.byte	'format',0,1,81,38
	.word	.L45,.L65
	.byte	5,1,81,46,6
	.word	.L18,.L64
	.byte	7
	.byte	'__func__',0,1,93,9
	.word	.L66
	.byte	5,3
	.word	_999002___func__
	.byte	6
	.word	.L67,.L6
	.byte	8
	.byte	'message',0,1,85,19
	.word	.L49,.L68
	.byte	8
	.byte	'align',0,1,86,19
	.word	.L51,.L69
	.byte	8
	.byte	'count',0,1,86,26
	.word	.L51,.L70
	.byte	8
	.byte	'spaces',0,1,87,19
	.word	.L71,.L72
	.byte	6
	.word	.L10,.L9
	.byte	8
	.byte	'scount',0,1,98,23
	.word	.L51,.L73
	.byte	9
	.word	.L53,.L74,.L75
	.byte	10
	.word	.L55,.L76
	.byte	10
	.word	.L57,.L77
	.byte	10
	.word	.L59,.L78
	.byte	10
	.word	.L61,.L79
	.byte	11
	.word	.L63,.L80
	.byte	0,9
	.word	.L53,.L81,.L82
	.byte	10
	.word	.L55,.L76
	.byte	10
	.word	.L57,.L77
	.byte	10
	.word	.L59,.L78
	.byte	10
	.word	.L61,.L79
	.byte	0,0,9
	.word	.L53,.L83,.L6
	.byte	10
	.word	.L55,.L76
	.byte	10
	.word	.L57,.L77
	.byte	10
	.word	.L59,.L78
	.byte	10
	.word	.L61,.L79
	.byte	12
	.word	.L63,.L83,.L6
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Console_printAlign')
	.sect	'.debug_abbrev'
.L34:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,24,0,58,15,59,15,57,15
	.byte	0,0,6,11,1,17,1,18,1,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16
	.byte	2,6,0,0,9,29,1,49,16,17,1,18,1,0,0,10,5,0,49,16,2,6,0,0,11,11,0,49,16,85,6,0,0,12,11,0,49,16,17,1,18,1
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Console_printAlign')
	.sect	'.debug_line'
.L35:
	.word	.L119-.L118
.L118:
	.half	3
	.word	.L121-.L120
.L120:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\StdIf\\IfxStdIf_DPipe.h',0
	.byte	0,0,0,0
.L121:
	.byte	5,10,7,0,5,2
	.word	.L18
	.byte	3,210,0,1,5,23,9
	.half	.L122-.L18
	.byte	1,5,9,9
	.half	.L123-.L122
	.byte	3,126,1,5,34,9
	.half	.L89-.L123
	.byte	3,2,1,5,10,9
	.half	.L124-.L89
	.byte	1,5,32,7,9
	.half	.L67-.L124
	.byte	3,4,1,5,30,9
	.half	.L125-.L67
	.byte	1,5,9,9
	.half	.L126-.L125
	.byte	3,2,1,5,26,9
	.half	.L127-.L126
	.byte	3,1,1,5,9,9
	.half	.L128-.L127
	.byte	3,127,1,5,35,9
	.half	.L91-.L128
	.byte	3,3,1,5,15,9
	.half	.L129-.L91
	.byte	1,5,9,9
	.half	.L130-.L129
	.byte	3,1,1,5,30,9
	.half	.L8-.L130
	.byte	3,1,1,5,25,9
	.half	.L92-.L8
	.byte	3,2,1,5,27,9
	.half	.L10-.L92
	.byte	3,3,1,5,20,1,5,68,9
	.half	.L74-.L10
	.byte	3,1,1,5,47,9
	.half	.L75-.L74
	.byte	1,5,77,9
	.half	.L81-.L75
	.byte	1,4,2,5,53,9
	.half	.L131-.L81
	.byte	3,144,1,1,5,17,9
	.half	.L132-.L131
	.byte	1,5,30,9
	.half	.L133-.L132
	.byte	1,5,53,9
	.half	.L134-.L133
	.byte	1,4,1,5,30,9
	.half	.L82-.L134
	.byte	3,241,126,1,5,28,9
	.half	.L135-.L82
	.byte	1,5,25,9
	.half	.L9-.L135
	.byte	3,123,1,5,50,7,9
	.half	.L136-.L9
	.byte	3,8,1,4,2,5,53,9
	.half	.L83-.L136
	.byte	3,140,1,1,4,1,5,71,9
	.half	.L137-.L83
	.byte	3,244,126,1,4,2,5,17,9
	.half	.L138-.L137
	.byte	3,140,1,1,5,30,9
	.half	.L139-.L138
	.byte	1,4,1,5,81,9
	.half	.L140-.L139
	.byte	3,244,126,1,4,2,5,53,9
	.half	.L141-.L140
	.byte	3,140,1,1,4,1,5,16,7,9
	.half	.L6-.L141
	.byte	3,248,126,1,5,1,3,2,1,7,9
	.half	.L37-.L6
	.byte	0,1,1
.L119:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Console_printAlign')
	.sect	'.debug_ranges'
.L36:
	.word	-1,.L18,0,.L37-.L18,0,0
.L80:
	.word	-1,.L18,.L74-.L18,.L75-.L18,.L81-.L18,.L82-.L18,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_g_console')
	.sect	'.debug_info'
.L38:
	.word	219
	.half	3
	.word	.L39
	.byte	4,1
	.byte	'..\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\SrvSw\\SysSe\\Comm\\Ifx_Console.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L19
	.byte	3
	.byte	'Ifx_g_console',0,8,33,13
	.word	.L84
	.byte	1,5,3
	.word	Ifx_g_console
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_g_console')
	.sect	'.debug_abbrev'
.L39:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Console_init')
	.sect	'.debug_loc'
.L13:
	.word	-1,.L14,0,.L40-.L14
	.half	2
	.byte	138,0
	.word	0,0
.L42:
	.word	-1,.L14,0,.L40-.L14
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Console_print')
	.sect	'.debug_loc'
.L15:
	.word	-1,.L16,0,.L85-.L16
	.half	2
	.byte	138,0
	.word	.L85-.L16,.L2-.L16
	.half	3
	.byte	138,152,2
	.word	.L2-.L16,.L2-.L16
	.half	2
	.byte	138,0
	.word	.L2-.L16,.L44-.L16
	.half	3
	.byte	138,152,2
	.word	.L44-.L16,.L44-.L16
	.half	2
	.byte	138,0
	.word	0,0
.L52:
	.word	-1,.L16,0,.L44-.L16
	.half	2
	.byte	145,124
	.word	0,0
.L60:
	.word	0,0
.L58:
	.word	0,0
.L46:
	.word	-1,.L16,0,.L86-.L16
	.half	1
	.byte	100
	.word	.L87-.L16,.L88-.L16
	.half	1
	.byte	101
	.word	.L2-.L16,.L44-.L16
	.half	1
	.byte	101
	.word	.L2-.L16,.L44-.L16
	.half	1
	.byte	100
	.word	0,0
.L50:
	.word	-1,.L16,0,.L44-.L16
	.half	3
	.byte	145,252,125
	.word	0,0
.L56:
	.word	0,0
.L62:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Console_printAlign')
	.sect	'.debug_loc'
.L17:
	.word	-1,.L18,0,.L89-.L18
	.half	2
	.byte	138,0
	.word	.L89-.L18,.L6-.L18
	.half	3
	.byte	138,176,2
	.word	.L6-.L18,.L6-.L18
	.half	2
	.byte	138,0
	.word	.L6-.L18,.L64-.L18
	.half	3
	.byte	138,176,2
	.word	.L64-.L18,.L64-.L18
	.half	2
	.byte	138,0
	.word	0,0
.L69:
	.word	-1,.L18,.L92-.L18,.L93-.L18
	.half	1
	.byte	95
	.word	.L9-.L18,.L6-.L18
	.half	1
	.byte	95
	.word	0,0
.L70:
	.word	-1,.L18,0,.L64-.L18
	.half	2
	.byte	145,100
	.word	0,0
.L78:
	.word	0,0
.L77:
	.word	0,0
.L65:
	.word	-1,.L18,0,.L7-.L18
	.half	1
	.byte	100
	.word	.L90-.L18,.L91-.L18
	.half	1
	.byte	101
	.word	.L6-.L18,.L64-.L18
	.half	1
	.byte	100
	.word	.L6-.L18,.L64-.L18
	.half	1
	.byte	101
	.word	0,0
.L68:
	.word	-1,.L18,0,.L64-.L18
	.half	3
	.byte	145,228,125
	.word	0,0
.L73:
	.word	-1,.L18,0,.L64-.L18
	.half	2
	.byte	145,120
	.word	0,0
.L72:
	.word	-1,.L18,0,.L64-.L18
	.half	2
	.byte	145,102
	.word	0,0
.L76:
	.word	0,0
.L79:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L142:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Console_init')
	.sect	'.debug_frame'
	.word	24
	.word	.L142,.L14,.L40-.L14
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Console_print')
	.sect	'.debug_frame'
	.word	56
	.word	.L142,.L16,.L44-.L16
	.byte	4
	.word	(.L85-.L16)/2
	.byte	19,152,2,22,26,4,19,138,152,2,4
	.word	(.L2-.L85)/2
	.byte	19,0,8,26,19,152,2,22,26,4,19,138,152,2,4
	.word	(.L44-.L2)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Console_printAlign')
	.sect	'.debug_frame'
	.word	56
	.word	.L142,.L18,.L64-.L18
	.byte	4
	.word	(.L89-.L18)/2
	.byte	19,176,2,22,26,4,19,138,176,2,4
	.word	(.L6-.L89)/2
	.byte	19,0,8,26,19,176,2,22,26,4,19,138,176,2,4
	.word	(.L64-.L6)/2
	.byte	19,0,8,26,0


	; Module end
