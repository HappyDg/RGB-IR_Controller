	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 07918494"
	.compiler_invocation	"ctc -f cc22972a --dep-file=APP\\src\\.Mcan.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc23x -D__CPU_TC23X__ --core=tc1.6.x --fp-model=+float -D__SWPLATFORM__ -DIFX_CFG_USE_COMPILER_DEFAULT_LINKER -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05 -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Configuration -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Scu/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/Stm/Std/InitApi -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/TC23x/_Reg -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_tc23x/src/ifx/SrvSw -ID:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05/SoftwarePlatform/illd_common/ifx_cfg/include -g2 --make-target=APP\\src\\Mcan.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o APP\\src\\Mcan.src ..\\APP\\src\\Mcan.c"
	.compiler_name		"ctc"
	;source	'..\\APP\\src\\Mcan.c'

	
$TC16X
	.sdecl	'.zrodata.Mcan..4.cnt',data,rom
	.sect	'.zrodata.Mcan..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	-268271616
	.sdecl	'.zrodata.Mcan..5.cnt',data,rom
	.sect	'.zrodata.Mcan..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	100000
	.sdecl	'.zrodata.Mcan..6.cnt',data,rom
	.sect	'.zrodata.Mcan..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	2147483647
	.sdecl	'.zrodata.Mcan..7.cnt',data,rom
	.sect	'.zrodata.Mcan..7.cnt'
	.align	2
.7.cnt:	.type	object
	.size	.7.cnt,4
	.word	10000000
	.sdecl	'.zrodata.IfxMultican..8.cnt',data,rom
	.sect	'.zrodata.IfxMultican..8.cnt'
	.align	2
.8.cnt:	.type	object
	.size	.8.cnt,4
	.word	-559038737
	
	.sdecl	'.text.Mcan.init_Mcan_Port',code,cluster('init_Mcan_Port')
	.sect	'.text.Mcan.init_Mcan_Port'
	.align	2
	
	.global	init_Mcan_Port

; ..\APP\src\Mcan.c	     1  /*
; ..\APP\src\Mcan.c	     2   * Mcan.c
; ..\APP\src\Mcan.c	     3   *
; ..\APP\src\Mcan.c	     4   *  Created on: 2019. 8. 26.
; ..\APP\src\Mcan.c	     5   *      Author: junseok.lee
; ..\APP\src\Mcan.c	     6   */
; ..\APP\src\Mcan.c	     7  
; ..\APP\src\Mcan.c	     8  #include "Mcan.h"
; ..\APP\src\Mcan.c	     9  
; ..\APP\src\Mcan.c	    10  #include "PinMapper/aurix_pin_mappings.h"
; ..\APP\src\Mcan.c	    11  #include "IfxStm_ActInit.h"
; ..\APP\src\Mcan.c	    12  #include "Spisoc.h"
; ..\APP\src\Mcan.c	    13  #include "sched.h"
; ..\APP\src\Mcan.c	    14  #include "IfxSmu_reg.h"
; ..\APP\src\Mcan.c	    15  
; ..\APP\src\Mcan.c	    16  App_MulticanBasic g_MulticanBasic; /**< \brief Demo information */
; ..\APP\src\Mcan.c	    17  
; ..\APP\src\Mcan.c	    18  uint32 can_sleep_count = 0;
; ..\APP\src\Mcan.c	    19  uint8 gu8_HU_Display=0;
; ..\APP\src\Mcan.c	    20  uint8 gu8_DVRS_Display=0;
; ..\APP\src\Mcan.c	    21  uint8 gu8_GW_Profile=0;
; ..\APP\src\Mcan.c	    22  uint8 gu8_HU_Profile=0;
; ..\APP\src\Mcan.c	    23  uint8 gu8_ENG_STAT = 0;
; ..\APP\src\Mcan.c	    24  
; ..\APP\src\Mcan.c	    25  
; ..\APP\src\Mcan.c	    26  Ifx_STM *stmSfr2 = &MODULE_STM0;
; ..\APP\src\Mcan.c	    27  
; ..\APP\src\Mcan.c	    28  IfxMultican_Message Mcan_msg_DF;
; ..\APP\src\Mcan.c	    29  IfxMultican_Message Mcan_msg_12F;
; ..\APP\src\Mcan.c	    30  IfxMultican_Message Mcan_msg_13F;
; ..\APP\src\Mcan.c	    31  IfxMultican_Message Mcan_msg_45D;
; ..\APP\src\Mcan.c	    32  IfxMultican_Message Mcan_msg_18B;
; ..\APP\src\Mcan.c	    33  IfxMultican_Message Mcan_msg_173;
; ..\APP\src\Mcan.c	    34  IfxMultican_Message Mcan_msg_169;
; ..\APP\src\Mcan.c	    35  IfxMultican_Message Mcan_msg_440;
; ..\APP\src\Mcan.c	    36  IfxMultican_Message Mcan_msg_455;
; ..\APP\src\Mcan.c	    37  IfxMultican_Message Mcan_msg_102;
; ..\APP\src\Mcan.c	    38  
; ..\APP\src\Mcan.c	    39  Ifx_SCU *scu2 = &MODULE_SCU;
; ..\APP\src\Mcan.c	    40  
; ..\APP\src\Mcan.c	    41  Ifx_SMU *smu2 = &MODULE_SMU;
; ..\APP\src\Mcan.c	    42  
; ..\APP\src\Mcan.c	    43  IfxMultican_Status  readStatus_440;
; ..\APP\src\Mcan.c	    44  
; ..\APP\src\Mcan.c	    45  uint8 Mcan_NM_sleep_cnt = 0;
; ..\APP\src\Mcan.c	    46  uint8 Mcan_NM_sleep_flag = 0;
; ..\APP\src\Mcan.c	    47  Mcan_msg mcan_NM_DVRS;
; ..\APP\src\Mcan.c	    48  
; ..\APP\src\Mcan.c	    49  uint8 gu8_NM_CGW_Sleep_flag = 0xff;
; ..\APP\src\Mcan.c	    50  uint8 gu8_NM_CGW_Dest = 0xff;
; ..\APP\src\Mcan.c	    51  
; ..\APP\src\Mcan.c	    52  uint8 gu8_NM_DVRS_go_flag = 0;
; ..\APP\src\Mcan.c	    53  
; ..\APP\src\Mcan.c	    54  
; ..\APP\src\Mcan.c	    55  
; ..\APP\src\Mcan.c	    56  
; ..\APP\src\Mcan.c	    57  
; ..\APP\src\Mcan.c	    58  void init_Mcan_Port(void)
; Function init_Mcan_Port
.L32:
init_Mcan_Port:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   524  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   527  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   528  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   529      port->OMR.U = action << pinIndex;
	mov	d15,#16
	movh.a	a15,#61444
	st.w	[a15]@los(0xf003c104),d15
.L232:
	mov	d15,#1
.L410:
	st.w	[a15]@los(0xf003b504),d15
.L246:

; ..\APP\src\Mcan.c	    59  {
; ..\APP\src\Mcan.c	    60  	/*	M-CAN	*/
; ..\APP\src\Mcan.c	    61  	/*	STB Enable	*/
; ..\APP\src\Mcan.c	    62  	IfxPort_setPinHigh(&MODULE_P21,4);
; ..\APP\src\Mcan.c	    63  	//IfxPort_setPinLow(&MODULE_P21,4);
; ..\APP\src\Mcan.c	    64  	/*	EN Enable	*/
; ..\APP\src\Mcan.c	    65  	IfxPort_setPinHigh(&MODULE_P15,0);
; ..\APP\src\Mcan.c	    66  
; ..\APP\src\Mcan.c	    67  }
	ret
.L230:
	
__init_Mcan_Port_function_end:
	.size	init_Mcan_Port,__init_Mcan_Port_function_end-init_Mcan_Port
.L78:
	; End of function
	
	.sdecl	'.text.Mcan.sleep_Mcan_Trans',code,cluster('sleep_Mcan_Trans')
	.sect	'.text.Mcan.sleep_Mcan_Trans'
	.align	2
	
	.global	sleep_Mcan_Trans

; ..\APP\src\Mcan.c	    68  
; ..\APP\src\Mcan.c	    69  void sleep_Mcan_Trans(void)
; Function sleep_Mcan_Trans
.L34:
sleep_Mcan_Trans:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    24   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    25   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    34   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    35  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    38  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    42  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    45  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    49  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    51   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    52  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    53   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    54  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    55  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    56      IfxPort_InputMode_undefined    = -1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    57      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    58          IfxPort_InputMode_pullDown = 1U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    59          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    60  } IfxPort_InputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    61  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    62  /** \brief Ifx_P input / output mode definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    63   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    64   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    65   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    66  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    67  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    68      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    69      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    70      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    71      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    72      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    73      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    74      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    75      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    76      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    77      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    78      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    79      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    87  } IfxPort_Mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    88  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    89  /** \brief Pin output alternate index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    90   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    91  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    92  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    93      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    94          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    95          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    96          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    97          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    98          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	    99          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   100          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   101  } IfxPort_OutputIdx;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   102  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   103  /** \brief Pin output mode definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   104   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   105  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   106  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   107      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   108          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   109  } IfxPort_OutputMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   110  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   111  /** \brief Pad driver mode definition (strength and slew rate).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   112   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   113   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   114   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   115  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   116  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   117      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   118      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   119      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   120      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   121      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   122      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   123      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   124      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   125  } IfxPort_PadDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   127  /** \brief Ifx_P output modification modes definition.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   128   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   129   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   133      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   134      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   135      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   136      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   137  } IfxPort_State;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   138  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   139  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   141  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   142  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   143  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   145  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   146   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   147  /** \brief Defines a pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   148   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   149  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   150  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   151      Ifx_P *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   152      uint8  pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   153  } IfxPort_Pin;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   154  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   155  /** \brief To configure pins
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   156   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   157  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   158  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   159      Ifx_P            *port;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   160      uint8             pinIndex;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   161      IfxPort_OutputIdx mode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   162      IfxPort_PadDriver padDriver;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   163  } IfxPort_Pin_Config;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   164  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   165  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   166  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   167  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   168   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   169  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   170  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   171  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   172  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   173  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   174  /** \brief Return the port state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   175   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   176   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   177   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   178   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   179   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   180   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   181   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   182   *      // ...
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   183   *    }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   184   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   185   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   186   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   187  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   189  /** \brief Set the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   190   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   191   * \param pinIndex Specifies the pin to be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   192   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   193   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   194   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   195   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   196   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   197   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   198   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   199   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   200   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   201   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   202  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   203  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   204  /** \brief Reset the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   205   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   206   * \param pinIndex Specifies the pin to be reset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   207   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   208   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   209   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   210   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   211   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   212   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   213   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   214   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   215   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   216   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   217  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   218  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   219  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   220   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   221   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   222   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   223   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   224   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   225   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   226   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   227   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   228   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   229   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   230   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   231  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   233  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   234   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   235   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   236   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   237   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   238   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   239   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   240   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   241   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   242   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   243   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   244   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   245   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   246  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   247  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   248  /** \brief Set / Resets / Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   249   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   250   * \param pinIndex Specifies the pin to modify.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   251   * \param action Specifies the action: set, reset, toggle.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   253   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   254   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   255   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   256   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   257   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   258   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   259   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   260   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   261   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   262  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   263  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   264  /** \brief Toggle the port output.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   265   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   266   * \param pinIndex Specifies the pin to be toggled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   267   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   268   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   269   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   270   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   271   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   272   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   273   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   274   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   275   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   276   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   277  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   278  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   279  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   280  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   281  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   282  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   283  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   284   * This function disables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   285   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   286   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   287   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   288   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   289   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   290   * /code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   291   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   292   *     {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   293   *         // failed to disable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   294   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   295   * /endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   296   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   297   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   298   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   299   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   300  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   301  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   302  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   303   * This function enables the emergency stop function. A check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   304   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   305   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   306   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   307   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   308   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   309   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   310   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   311   *       // failed to enable emergency stop for P33.0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   312   *     }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   313   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   314   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   315   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   316   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   317   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   318  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   319  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   320  /** \brief Configure the port input / output mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   321   * Also Configures the P40/P41 Port for digital functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   322   * which bydefault support analog functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   323   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   324   * \param pinIndex Specifies the pin to be configured.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   325   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   326   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   327   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   328   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   329   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   330   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   331   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   332   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   333   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   334  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   335  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   336  /** \brief Configure the pad driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   337   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   338   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   339   * \param padDriver Specifies the driver mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   340   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   341   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   342   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   343   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   344   * // enable strong 3.3V driver
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   345   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   346   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   347   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   348   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   349  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   350  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   351  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   352  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   353  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   354   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   356  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   358  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   359  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   360  /** \brief Return the port group state
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   361   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   362   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   363   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   364   * \return Returns the selected pin values
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   365   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   366   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   367   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   368   * // read the current value of P33[7:0]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   369   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   370   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   371   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   372   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   373  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   374  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   375  /** \brief Set the port group state.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   376   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   377   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   378   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   379   * \param data specifies the value which should be set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   380   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   381   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   382   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   383   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   384   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   385   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   386   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   387   * // set initial value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   388   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   389   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   390   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   391   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   392  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   393  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   395  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   396  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   397  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   398  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   399   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   400   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   401   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   402  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   404  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   405   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   406   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   407   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   408   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   409   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   410   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   411   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   412   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   413   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   414   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   415   *  \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   416   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   418  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   420  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   421   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   422   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   423   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   424   * \param mode Specifies the port pin mode.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   425   * \param index Specifies the alternate (or general purpose) output channel.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   426   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   427   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   428   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   429   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   430   * // configure P33.[7:0] as GPIO outputs
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   431   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   432   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   433   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   434   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   435  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   437  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   438   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   439   * \param pinIndex start at the given pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   440   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   441   * \param padDriver Specifies the pad driver strength.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   442   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   443   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   444   * Coding example:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   445   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   446   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   447   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   448   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   449   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   450   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   451  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   452  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   453  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   454  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   455  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   456  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   457  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   458  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   459  /** \brief Disable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   460   * This function disables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   461   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   462   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   464   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   465   * \see IfxPort_disableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   466   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   467   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   468  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   469  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   470  /** \brief Enable the emergency stop function.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   471   * This function enables the emergency stop function. No check is done on port functionality.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   472   * \param port Pointer to the port which should be accessed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   473   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   474   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   475   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   476   * \see IfxPort_enableEmergencyStop()
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   477   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   478   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   479  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   481  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   482  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   483  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   485  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   487      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   488  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   489  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   490  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   491  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   492  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   493      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   494  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   495  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   497  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   498  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   499      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   500  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   501  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   502  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   503  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   504  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   505      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   506  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   507  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   508  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   509  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   510  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   511      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   512  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   513  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   514  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   515  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   516  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   517      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   518  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   520  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   521  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   522  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   523      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   524  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   525  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   527  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   528  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Port\Std\IfxPort.h	   529      port->OMR.U = action << pinIndex;
	movh	d15,#16
	movh.a	a15,#61444
	st.w	[a15]@los(0xf003c104),d15
.L368:
	movh	d15,#1
.L711:
	st.w	[a15]@los(0xf003b504),d15
.L377:

; ..\APP\src\Mcan.c	    70  {
; ..\APP\src\Mcan.c	    71  	/*	M-CAN	*/
; ..\APP\src\Mcan.c	    72  	/*	STB Disable	*/
; ..\APP\src\Mcan.c	    73  	IfxPort_setPinLow(&MODULE_P21,4);
; ..\APP\src\Mcan.c	    74  	/*	EN Enable	*/
; ..\APP\src\Mcan.c	    75  //	IfxPort_setPinHigh(&MODULE_P15,0);
; ..\APP\src\Mcan.c	    76  	IfxPort_setPinLow(&MODULE_P15,0);
; ..\APP\src\Mcan.c	    77  
; ..\APP\src\Mcan.c	    78  }
	ret
.L366:
	
__sleep_Mcan_Trans_function_end:
	.size	sleep_Mcan_Trans,__sleep_Mcan_Trans_function_end-sleep_Mcan_Trans
.L143:
	; End of function
	
	.sdecl	'.text.Mcan.init_Mcan',code,cluster('init_Mcan')
	.sect	'.text.Mcan.init_Mcan'
	.align	2
	
	.global	init_Mcan

; ..\APP\src\Mcan.c	    79  
; ..\APP\src\Mcan.c	    80  void init_Mcan(void)
; Function init_Mcan
.L36:
init_Mcan:	.type	func

; ..\APP\src\Mcan.c	    81  {
; ..\APP\src\Mcan.c	    82  	/* create module config */
; ..\APP\src\Mcan.c	    83  	    IfxMultican_Can_Config canConfig;
; ..\APP\src\Mcan.c	    84  	    IfxMultican_Can_initModuleConfig(&canConfig, &MODULE_CAN1);
	ld.w	d15,.4.cnt
.L415:
	sub.a	a10,#200
.L386:
	mov.a	a5,d15
.L416:
	mov.aa	a4,a10
.L417:
	call	IfxMultican_Can_initModuleConfig
.L418:

; ..\APP\src\Mcan.c	    85  
; ..\APP\src\Mcan.c	    86  	    /* initialize module */
; ..\APP\src\Mcan.c	    87  	    IfxMultican_Can_initModule(&g_MulticanBasic.drivers.mcan, &canConfig);
	movh.a	a12,#@his(g_MulticanBasic)
	lea	a12,[a12]@los(g_MulticanBasic)
.L419:
	lea	a15,[a12]4
.L420:
	mov.aa	a5,a10
	mov.aa	a4,a15
	call	IfxMultican_Can_initModule
.L250:

; ..\APP\src\Mcan.c	    88  
; ..\APP\src\Mcan.c	    89  	    /* create CAN node config */
; ..\APP\src\Mcan.c	    90  	    IfxMultican_Can_NodeConfig canNodeConfig;
; ..\APP\src\Mcan.c	    91  	    IfxMultican_Can_Node_initConfig(&canNodeConfig, &g_MulticanBasic.drivers.mcan);
	lea	a4,[a10]76
.L421:
	mov.aa	a5,a15
	call	IfxMultican_Can_Node_initConfig
.L422:

; ..\APP\src\Mcan.c	    92  
; ..\APP\src\Mcan.c	    93  	    //canNodeConfig.baudrate = 500000;     /* 500 KBaud	*/
; ..\APP\src\Mcan.c	    94  	    canNodeConfig.baudrate = 100000;     /* 100 KBaud	low can */
	ld.w	d15,.5.cnt
.L423:
	st.w	[a10]84,d15
.L424:

; ..\APP\src\Mcan.c	    95  
; ..\APP\src\Mcan.c	    96  	    /* source Node */
; ..\APP\src\Mcan.c	    97  	    {
; ..\APP\src\Mcan.c	    98  	        canNodeConfig.nodeId    = IfxMultican_NodeId_2;
	mov	d15,#2
	st.b	[a10]80,d15
.L425:

; ..\APP\src\Mcan.c	    99  	        canNodeConfig.rxPin     = &IfxMultican1_RXD2E_P20_9_IN;
	movh.a	a15,#@his(IfxMultican1_RXD2E_P20_9_IN)
	lea	a15,[a15]@los(IfxMultican1_RXD2E_P20_9_IN)
.L426:
	st.a	[a10]116,a15
.L427:

; ..\APP\src\Mcan.c	   100  	        canNodeConfig.rxPinMode = IfxPort_InputMode_pullUp;
	mov	d15,#16
	st.b	[a10]120,d15
.L428:

; ..\APP\src\Mcan.c	   101  	        canNodeConfig.txPin     = &IfxMultican1_TXD2_P20_10_OUT;
	movh.a	a15,#@his(IfxMultican1_TXD2_P20_10_OUT)
	lea	a15,[a15]@los(IfxMultican1_TXD2_P20_10_OUT)
.L429:
	st.a	[a10]124,a15
.L430:

; ..\APP\src\Mcan.c	   102  	        canNodeConfig.txPinMode = IfxPort_OutputMode_pushPull;
	mov	d15,#128
	st.b	[a10]128,d15
.L431:

; ..\APP\src\Mcan.c	   103  
; ..\APP\src\Mcan.c	   104  	        IfxMultican_Can_Node_init(&g_MulticanBasic.drivers.mcanSrcNode, &canNodeConfig);
	lea	a15,[a12]32
.L432:
	lea	a5,[a10]76
	mov.aa	a4,a15
	call	IfxMultican_Can_Node_init
.L253:

; ..\APP\src\Mcan.c	   105  	    }
; ..\APP\src\Mcan.c	   106  
; ..\APP\src\Mcan.c	   107  
; ..\APP\src\Mcan.c	   108  
; ..\APP\src\Mcan.c	   109  
; ..\APP\src\Mcan.c	   110  	    /* source Message object */
; ..\APP\src\Mcan.c	   111  	    {
; ..\APP\src\Mcan.c	   112  	        /* create message object config */
; ..\APP\src\Mcan.c	   113  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   114  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L433:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L434:

; ..\APP\src\Mcan.c	   115  
; ..\APP\src\Mcan.c	   116  	        canMsgObjConfig.msgObjId              = 0;
	mov	d15,#0
	st.w	[a10]144,d15
.L435:

; ..\APP\src\Mcan.c	   117  	        canMsgObjConfig.messageId             = 0x45D;
	mov	d15,#1117
	st.w	[a10]174,d15
.L436:

; ..\APP\src\Mcan.c	   118  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   119  	        canMsgObjConfig.frame                 = IfxMultican_Frame_transmit;
	mov	d15,#1
	ld.w	d8,.6.cnt
.L437:
	st.w	[a10]170,d8
.L438:
	st.b	[a10]168,d15
.L439:

; ..\APP\src\Mcan.c	   120  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L440:

; ..\APP\src\Mcan.c	   121  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   122  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   123  
; ..\APP\src\Mcan.c	   124  	        /* initialize message object */
; ..\APP\src\Mcan.c	   125  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_45D_Tx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]164
.L441:
	ld.bu	d15,[a10]154
.L442:
	lea	a5,[a10]140
.L443:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L444:
	call	IfxMultican_Can_MsgObj_init
.L254:

; ..\APP\src\Mcan.c	   126  	    }
; ..\APP\src\Mcan.c	   127  	    /* source Message object */
; ..\APP\src\Mcan.c	   128  	    {
; ..\APP\src\Mcan.c	   129  	        /* create message object config */
; ..\APP\src\Mcan.c	   130  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   131  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L445:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L446:

; ..\APP\src\Mcan.c	   132  
; ..\APP\src\Mcan.c	   133  	        canMsgObjConfig.msgObjId              = 2;
	mov	d15,#2
	st.w	[a10]144,d15
.L447:

; ..\APP\src\Mcan.c	   134  	        canMsgObjConfig.messageId             = 0x13F;
	mov	d15,#319
	st.w	[a10]174,d15
.L448:

; ..\APP\src\Mcan.c	   135  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   136  	        canMsgObjConfig.frame                 = IfxMultican_Frame_transmit;
	mov	d15,#1
	st.w	[a10]170,d8
.L449:
	st.b	[a10]168,d15
.L450:

; ..\APP\src\Mcan.c	   137  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L451:

; ..\APP\src\Mcan.c	   138  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   139  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   140  
; ..\APP\src\Mcan.c	   141  	        /* initialize message object */
; ..\APP\src\Mcan.c	   142  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_13f_Tx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]148
.L452:
	ld.bu	d15,[a10]154
.L453:
	lea	a5,[a10]140
.L454:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L455:
	call	IfxMultican_Can_MsgObj_init
.L257:

; ..\APP\src\Mcan.c	   143  	    }
; ..\APP\src\Mcan.c	   144  //	    /* test code	*/
; ..\APP\src\Mcan.c	   145  //
; ..\APP\src\Mcan.c	   146  //	    {
; ..\APP\src\Mcan.c	   147  //	        /* create message object config */
; ..\APP\src\Mcan.c	   148  //	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   149  //	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
; ..\APP\src\Mcan.c	   150  //
; ..\APP\src\Mcan.c	   151  //	        canMsgObjConfig.msgObjId              = 7;
; ..\APP\src\Mcan.c	   152  //	        canMsgObjConfig.messageId             = 0x102;
; ..\APP\src\Mcan.c	   153  //	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   154  //	        canMsgObjConfig.frame                 = IfxMultican_Frame_transmit;
; ..\APP\src\Mcan.c	   155  //	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
; ..\APP\src\Mcan.c	   156  //	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   157  //	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   158  //
; ..\APP\src\Mcan.c	   159  //	        /* initialize message object */
; ..\APP\src\Mcan.c	   160  //	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_102_Tx_MsgObj, &canMsgObjConfig);
; ..\APP\src\Mcan.c	   161  //	    }
; ..\APP\src\Mcan.c	   162  
; ..\APP\src\Mcan.c	   163  
; ..\APP\src\Mcan.c	   164  
; ..\APP\src\Mcan.c	   165  
; ..\APP\src\Mcan.c	   166  	    /* Destination Message object */
; ..\APP\src\Mcan.c	   167  	    {
; ..\APP\src\Mcan.c	   168  	        /* create message object config */
; ..\APP\src\Mcan.c	   169  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   170  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L456:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L457:

; ..\APP\src\Mcan.c	   171  
; ..\APP\src\Mcan.c	   172  	        canMsgObjConfig.msgObjId              = 1;
	mov	d15,#1
	st.w	[a10]144,d15
.L458:

; ..\APP\src\Mcan.c	   173  	        canMsgObjConfig.messageId             = 0xDF;
	mov	d15,#223
	st.w	[a10]174,d15
.L459:

; ..\APP\src\Mcan.c	   174  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   175  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L460:
	st.b	[a10]168,d15
.L461:

; ..\APP\src\Mcan.c	   176  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L462:

; ..\APP\src\Mcan.c	   177  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   178  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   179  
; ..\APP\src\Mcan.c	   180  	        /* initialize message object */
; ..\APP\src\Mcan.c	   181  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_DF_RX_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]196
.L463:
	ld.bu	d15,[a10]154
.L464:
	lea	a5,[a10]140
.L465:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L466:
	call	IfxMultican_Can_MsgObj_init
.L259:

; ..\APP\src\Mcan.c	   182  	    }
; ..\APP\src\Mcan.c	   183  
; ..\APP\src\Mcan.c	   184  	    /* Destination Message object */
; ..\APP\src\Mcan.c	   185  	    {
; ..\APP\src\Mcan.c	   186  	        /* create message object config */
; ..\APP\src\Mcan.c	   187  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   188  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L467:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L468:

; ..\APP\src\Mcan.c	   189  
; ..\APP\src\Mcan.c	   190  	        canMsgObjConfig.msgObjId              = 3;
	mov	d15,#3
	st.w	[a10]144,d15
.L469:

; ..\APP\src\Mcan.c	   191  	        canMsgObjConfig.messageId             = 0x12F;
	mov	d15,#303
	st.w	[a10]174,d15
.L470:

; ..\APP\src\Mcan.c	   192  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   193  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L471:
	st.b	[a10]168,d15
.L472:

; ..\APP\src\Mcan.c	   194  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L473:

; ..\APP\src\Mcan.c	   195  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   196  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   197  
; ..\APP\src\Mcan.c	   198  	        /* initialize message object */
; ..\APP\src\Mcan.c	   199  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_12f_rx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]180
.L474:
	ld.bu	d15,[a10]154
.L475:
	lea	a5,[a10]140
.L476:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L477:
	call	IfxMultican_Can_MsgObj_init
.L261:

; ..\APP\src\Mcan.c	   200  	    }
; ..\APP\src\Mcan.c	   201  	    /* Destination Message object */
; ..\APP\src\Mcan.c	   202  	    {
; ..\APP\src\Mcan.c	   203  	        /* create message object config */
; ..\APP\src\Mcan.c	   204  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   205  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L478:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L479:

; ..\APP\src\Mcan.c	   206  
; ..\APP\src\Mcan.c	   207  	        canMsgObjConfig.msgObjId              = 4;
	mov	d15,#4
	st.w	[a10]144,d15
.L480:

; ..\APP\src\Mcan.c	   208  	        canMsgObjConfig.messageId             = 0x18B;
	mov	d15,#395
	st.w	[a10]174,d15
.L481:

; ..\APP\src\Mcan.c	   209  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   210  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L482:
	st.b	[a10]168,d15
.L483:

; ..\APP\src\Mcan.c	   211  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L484:

; ..\APP\src\Mcan.c	   212  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   213  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   214  
; ..\APP\src\Mcan.c	   215  	        /* initialize message object */
; ..\APP\src\Mcan.c	   216  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_18B_Rx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]212
.L485:
	ld.bu	d15,[a10]154
.L486:
	lea	a5,[a10]140
.L487:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L488:
	call	IfxMultican_Can_MsgObj_init
.L263:

; ..\APP\src\Mcan.c	   217  	    }
; ..\APP\src\Mcan.c	   218  	    /* Destination Message object */
; ..\APP\src\Mcan.c	   219  	    {
; ..\APP\src\Mcan.c	   220  	        /* create message object config */
; ..\APP\src\Mcan.c	   221  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   222  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L489:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L490:

; ..\APP\src\Mcan.c	   223  
; ..\APP\src\Mcan.c	   224  	        canMsgObjConfig.msgObjId              = 5;
	mov	d15,#5
	st.w	[a10]144,d15
.L491:

; ..\APP\src\Mcan.c	   225  	        canMsgObjConfig.messageId             = 0x173;
	mov	d15,#371
	st.w	[a10]174,d15
.L492:

; ..\APP\src\Mcan.c	   226  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   227  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L493:
	st.b	[a10]168,d15
.L494:

; ..\APP\src\Mcan.c	   228  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L495:

; ..\APP\src\Mcan.c	   229  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   230  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   231  
; ..\APP\src\Mcan.c	   232  	        /* initialize message object */
; ..\APP\src\Mcan.c	   233  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_173_Rx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]228
.L496:
	ld.bu	d15,[a10]154
.L497:
	lea	a5,[a10]140
.L498:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L499:
	call	IfxMultican_Can_MsgObj_init
.L265:

; ..\APP\src\Mcan.c	   234  	    }
; ..\APP\src\Mcan.c	   235  	    /* Destination Message object */
; ..\APP\src\Mcan.c	   236  	    {
; ..\APP\src\Mcan.c	   237  	        /* create message object config */
; ..\APP\src\Mcan.c	   238  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   239  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L500:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L501:

; ..\APP\src\Mcan.c	   240  
; ..\APP\src\Mcan.c	   241  	        canMsgObjConfig.msgObjId              = 6;
	mov	d15,#6
	st.w	[a10]144,d15
.L502:

; ..\APP\src\Mcan.c	   242  	        canMsgObjConfig.messageId             = 0x169;
	mov	d15,#361
	st.w	[a10]174,d15
.L503:

; ..\APP\src\Mcan.c	   243  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   244  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L504:
	st.b	[a10]168,d15
.L505:

; ..\APP\src\Mcan.c	   245  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L506:

; ..\APP\src\Mcan.c	   246  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   247  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   248  
; ..\APP\src\Mcan.c	   249  	        /* initialize message object */
; ..\APP\src\Mcan.c	   250  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_169_Rx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]244
.L507:
	ld.bu	d15,[a10]154
.L508:
	lea	a5,[a10]140
.L509:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L510:
	call	IfxMultican_Can_MsgObj_init
.L267:

; ..\APP\src\Mcan.c	   251  	    }
; ..\APP\src\Mcan.c	   252  	    /* Destination Message object */
; ..\APP\src\Mcan.c	   253  	    {
; ..\APP\src\Mcan.c	   254  	        /* create message object config */
; ..\APP\src\Mcan.c	   255  	        IfxMultican_Can_MsgObjConfig canMsgObjConfig;
; ..\APP\src\Mcan.c	   256  	        IfxMultican_Can_MsgObj_initConfig(&canMsgObjConfig, &g_MulticanBasic.drivers.mcanSrcNode);
	lea	a4,[a10]140
.L511:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_initConfig
.L512:

; ..\APP\src\Mcan.c	   257  
; ..\APP\src\Mcan.c	   258  	        canMsgObjConfig.msgObjId              = 7;
	mov	d15,#7
	st.w	[a10]144,d15
.L513:

; ..\APP\src\Mcan.c	   259  	        canMsgObjConfig.messageId             = 0x455;
	mov	d15,#1109
	st.w	[a10]174,d15
.L514:

; ..\APP\src\Mcan.c	   260  	        canMsgObjConfig.acceptanceMask        = 0x7FFFFFFFUL;
; ..\APP\src\Mcan.c	   261  	        canMsgObjConfig.frame                 = IfxMultican_Frame_receive;
	mov	d15,#0
	st.w	[a10]170,d8
.L515:
	st.b	[a10]168,d15
.L516:

; ..\APP\src\Mcan.c	   262  	        canMsgObjConfig.control.messageLen    = IfxMultican_DataLengthCode_8;
	mov	d15,#8
	st.b	[a10]153,d15
.L517:

; ..\APP\src\Mcan.c	   263  	        canMsgObjConfig.control.extendedFrame = FALSE;
; ..\APP\src\Mcan.c	   264  	        canMsgObjConfig.control.matchingId    = TRUE;
; ..\APP\src\Mcan.c	   265  
; ..\APP\src\Mcan.c	   266  	        /* initialize message object */
; ..\APP\src\Mcan.c	   267  	        IfxMultican_Can_MsgObj_init(&g_MulticanBasic.drivers.mcan_455_Rx_MsgObj, &canMsgObjConfig);
	lea	a4,[a12]276
.L518:
	ld.bu	d15,[a10]154
.L519:
	lea	a5,[a10]140
.L520:
	insert	d15,d15,#2,#0,#2
	st.b	[a10]154,d15
.L521:
	j	IfxMultican_Can_MsgObj_init
.L247:
	
__init_Mcan_function_end:
	.size	init_Mcan,__init_Mcan_function_end-init_Mcan
.L83:
	; End of function
	
	.sdecl	'.text.Mcan.Transmit_Mcan',code,cluster('Transmit_Mcan')
	.sect	'.text.Mcan.Transmit_Mcan'
	.align	2
	
	.global	Transmit_Mcan

; ..\APP\src\Mcan.c	   268  	    }
; ..\APP\src\Mcan.c	   269  
; ..\APP\src\Mcan.c	   270  
; ..\APP\src\Mcan.c	   271  
; ..\APP\src\Mcan.c	   272  
; ..\APP\src\Mcan.c	   273  }
; ..\APP\src\Mcan.c	   274  
; ..\APP\src\Mcan.c	   275  void Transmit_Mcan(void)
; Function Transmit_Mcan
.L38:
Transmit_Mcan:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d15,#1117
	sub.a	a10,#16
.L387:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	st.w	[a10],d15
.L526:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	mov	d15,#512
	st.w	[a10]6,d15
.L527:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	mov	d0,#0
	st.w	[a10]10,d0
.L528:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	mov	d15,#8
	st.b	[a10]4,d15
.L274:

; ..\APP\src\Mcan.c	   276  {
; ..\APP\src\Mcan.c	   277      /* Transmit Data */
; ..\APP\src\Mcan.c	   278      {
; ..\APP\src\Mcan.c	   279          IfxMultican_Message msg;
; ..\APP\src\Mcan.c	   280          IfxMultican_Message_init(&msg,  0x45D, 0x00000200, 0x0, IfxMultican_DataLengthCode_8);
; ..\APP\src\Mcan.c	   281  
; ..\APP\src\Mcan.c	   282          while (IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcanSrcMsgObj, &msg) == IfxMultican_Status_notSentBusy)
	mov	d15,#32

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	st.b	[a10]14,d0
.L529:
	movh.a	a15,#@his(g_MulticanBasic+116)
.L530:
	lea	a15,[a15]@los(g_MulticanBasic+116)
.L2:
	mov.aa	a5,a10
	mov.aa	a4,a15
	call	IfxMultican_Can_MsgObj_sendMessage
.L531:
	jeq	d15,d2,.L2
.L532:

; ..\APP\src\Mcan.c	   283          {}
; ..\APP\src\Mcan.c	   284          IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcanSrcMsgObj, &msg);
	mov.aa	a5,a10
	mov.aa	a4,a15
	j	IfxMultican_Can_MsgObj_sendMessage
.L270:
	
__Transmit_Mcan_function_end:
	.size	Transmit_Mcan,__Transmit_Mcan_function_end-Transmit_Mcan
.L88:
	; End of function
	
	.sdecl	'.text.Mcan.Trans_Mcan_13F',code,cluster('Trans_Mcan_13F')
	.sect	'.text.Mcan.Trans_Mcan_13F'
	.align	2
	
	.global	Trans_Mcan_13F

; ..\APP\src\Mcan.c	   285      }
; ..\APP\src\Mcan.c	   286  }
; ..\APP\src\Mcan.c	   287  
; ..\APP\src\Mcan.c	   288  
; ..\APP\src\Mcan.c	   289  void Trans_Mcan_13F(void)
; Function Trans_Mcan_13F
.L40:
Trans_Mcan_13F:	.type	func

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d15,#319
	sub.a	a10,#64
.L388:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	st.w	[a10],d15
.L537:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	mov	d15,#-1
	st.w	[a10]6,d15
.L538:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	mov	d0,#8
	st.w	[a10]10,d15
.L539:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	mov	d1,#0
	st.b	[a10]4,d0
.L292:
	mov	d15,#303
	st.b	[a10]14,d1
.L540:
	st.w	[a10]16,d15
.L541:
	st.w	[a10]22,d1
.L542:
	st.w	[a10]26,d1
.L543:
	st.b	[a10]20,d0
.L299:
	mov	d15,#1117
	st.b	[a10]30,d1
.L544:
	st.w	[a10]32,d15
.L545:
	st.w	[a10]38,d1
.L546:
	st.w	[a10]42,d1
.L547:
	st.b	[a10]36,d0
.L548:
	st.b	[a10]46,d1
.L302:

; ..\APP\src\Mcan.c	   290  {
; ..\APP\src\Mcan.c	   291  	Mcan_msg	msg;
; ..\APP\src\Mcan.c	   292  	uint32 current_time = 0;
; ..\APP\src\Mcan.c	   293  	uint32 sample_time = 0;
; ..\APP\src\Mcan.c	   294  	uint32 Time_const = 10000000;	/* 500ms	*/
; ..\APP\src\Mcan.c	   295  	int i = 0;
; ..\APP\src\Mcan.c	   296  
; ..\APP\src\Mcan.c	   297  
; ..\APP\src\Mcan.c	   298      IfxMultican_Message msg_13f;
; ..\APP\src\Mcan.c	   299      IfxMultican_Message_init(&msg_13f,  0x13F, 0xffffffff, 0xffffffff, IfxMultican_DataLengthCode_8);
; ..\APP\src\Mcan.c	   300  
; ..\APP\src\Mcan.c	   301      IfxMultican_Message msg_12f;
; ..\APP\src\Mcan.c	   302      IfxMultican_Message_init(&msg_12f,  0x12F, 0, 0, IfxMultican_DataLengthCode_8);
; ..\APP\src\Mcan.c	   303  
; ..\APP\src\Mcan.c	   304      IfxMultican_Message msg_45d;
; ..\APP\src\Mcan.c	   305      IfxMultican_Message_init(&msg_45d,  0x45d, 0, 0, IfxMultican_DataLengthCode_8);
; ..\APP\src\Mcan.c	   306  
; ..\APP\src\Mcan.c	   307  
; ..\APP\src\Mcan.c	   308  	sample_time = IfxStm_getLower(stmSfr2);
	ld.a	a15,stmSfr2
.L304:

; ..\APP\src\Mcan.c	   309  
; ..\APP\src\Mcan.c	   310  	/*	Receive Data	*/
; ..\APP\src\Mcan.c	   311      /* wait until MCAN received the frame */
; ..\APP\src\Mcan.c	   312      while (!IfxMultican_Can_MsgObj_isRxPending(&g_MulticanBasic.drivers.mcan_DF_RX_MsgObj))
	movh.a	a13,#@his(g_MulticanBasic)
	lea	a13,[a13]@los(g_MulticanBasic)
.L309:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   464  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   465      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   466  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   469  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   470  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   471      return stm->CMP[comparator].B.CMPVAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   472  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   473  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   475  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   476  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   477      float32 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   478  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   479      result = IfxScuCcu_getStmFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   481      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   482  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   485  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   487      return stm->TIM0.U;
	ld.w	d8,[a15]16
.L310:
	lea	a12,[a13]196
.L549:
	j	.L3
.L4:

; ..\APP\src\Mcan.c	   313      {
; ..\APP\src\Mcan.c	   314  
; ..\APP\src\Mcan.c	   315      	current_time = IfxStm_getLower(stmSfr2);
	fcall	.cocofun_10
.L389:

; ..\APP\src\Mcan.c	   316  		if( current_time - sample_time >= Time_const )
	jge.u	d15,d0,.L5
.L3:
	mov.aa	a4,a12
	call	IfxMultican_Can_MsgObj_isRxPending
.L550:
	jeq	d2,#0,.L4

; ..\APP\src\Mcan.c	   317  		{
; ..\APP\src\Mcan.c	   318  			sample_time += Time_const;
; ..\APP\src\Mcan.c	   319  			break;
; ..\APP\src\Mcan.c	   320  		}
; ..\APP\src\Mcan.c	   321  
; ..\APP\src\Mcan.c	   322      }
; ..\APP\src\Mcan.c	   323  
; ..\APP\src\Mcan.c	   324      IfxMultican_Message msg1;
.L5:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov.u	d15,#57005
	st.w	[a10]48,d15
.L551:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	ld.w	d15,.8.cnt
.L552:
	st.w	[a10]54,d15
.L553:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	st.w	[a10]58,d15
.L554:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	mov	d15,#8
	st.b	[a10]52,d15
.L555:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	mov	d15,#0
	st.b	[a10]62,d15
.L312:

; ..\APP\src\Mcan.c	   325      IfxMultican_Message_init(&msg1, 0xdead, 0xdeadbeef, 0xdeadbeef, IfxMultican_DataLengthCode_8); /* start with invalid values */
; ..\APP\src\Mcan.c	   326  
; ..\APP\src\Mcan.c	   327      IfxMultican_Status  readStatus = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_DF_RX_MsgObj, &msg1);
	lea	a5,[a10]48
	mov.aa	a4,a12
	call	IfxMultican_Can_MsgObj_readMessage
.L556:

; ..\APP\src\Mcan.c	   328  
; ..\APP\src\Mcan.c	   329  
; ..\APP\src\Mcan.c	   330      msg.byte4 = msg1.data[0];
	ld.w	d15,[a10]54
.L557:

; ..\APP\src\Mcan.c	   331  
; ..\APP\src\Mcan.c	   332      g_spi_msg.spi_data_tx[23] = msg.hu_dvrs_e_low.HU_Display;
	extr.u	d15,d15,#0,#3
	movh.a	a14,#@his(g_spi_msg)
	lea	a14,[a14]@los(g_spi_msg)
.L558:
	st.b	[a14]23,d15
.L559:

; ..\APP\src\Mcan.c	   333  
; ..\APP\src\Mcan.c	   334      if(msg.hu_dvrs_e_low.HU_Display==1)
	jne	d15,#1,.L6
.L560:

; ..\APP\src\Mcan.c	   335      {
; ..\APP\src\Mcan.c	   336      	msg.byte4 = msg_13f.data[0];
	ld.w	d15,[a10]6
.L561:

; ..\APP\src\Mcan.c	   337      	msg.Dvrs_hu_pe_low.Display = 1;
; ..\APP\src\Mcan.c	   338      	msg_13f.data[0] = msg.byte4;
	insert	d15,d15,#1,#0,#4
	st.w	[a10]6,d15
.L6:

; ..\APP\src\Mcan.c	   339      }
; ..\APP\src\Mcan.c	   340  
; ..\APP\src\Mcan.c	   341  
; ..\APP\src\Mcan.c	   342      sample_time = IfxStm_getLower(stmSfr2);
	ld.a	a15,stmSfr2
.L313:

; ..\APP\src\Mcan.c	   343      	/*	Receive Data	*/
; ..\APP\src\Mcan.c	   344          /* wait until MCAN received the frame */
; ..\APP\src\Mcan.c	   345          while (!IfxMultican_Can_MsgObj_isRxPending(&g_MulticanBasic.drivers.mcan_12f_rx_MsgObj))
	lea	a12,[a13]180
.L315:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   464  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   465      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   466  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   469  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   470  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   471      return stm->CMP[comparator].B.CMPVAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   472  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   473  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   475  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   476  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   477      float32 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   478  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   479      result = IfxScuCcu_getStmFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   481      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   482  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   485  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   487      return stm->TIM0.U;
	ld.w	d8,[a15]16
.L316:
	j	.L7
.L8:

; ..\APP\src\Mcan.c	   346          {
; ..\APP\src\Mcan.c	   347  
; ..\APP\src\Mcan.c	   348          	current_time = IfxStm_getLower(stmSfr2);
	fcall	.cocofun_10
.L562:

; ..\APP\src\Mcan.c	   349      		if( current_time - sample_time >= Time_const )
	jge.u	d15,d0,.L9
.L7:
	mov.aa	a4,a12
	call	IfxMultican_Can_MsgObj_isRxPending
.L563:
	jeq	d2,#0,.L8

; ..\APP\src\Mcan.c	   350      		{
; ..\APP\src\Mcan.c	   351      			sample_time += Time_const;
; ..\APP\src\Mcan.c	   352      			break;
; ..\APP\src\Mcan.c	   353      		}
; ..\APP\src\Mcan.c	   354  
; ..\APP\src\Mcan.c	   355          }
; ..\APP\src\Mcan.c	   356  
; ..\APP\src\Mcan.c	   357  
; ..\APP\src\Mcan.c	   358  
; ..\APP\src\Mcan.c	   359          IfxMultican_Status  readStatus_13f = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_12f_rx_MsgObj, &msg1);
.L9:
	lea	a5,[a10]48
	mov.aa	a4,a12
	call	IfxMultican_Can_MsgObj_readMessage
.L564:

; ..\APP\src\Mcan.c	   360  
; ..\APP\src\Mcan.c	   361          for(i=0; i<=3;i++)
; ..\APP\src\Mcan.c	   362          {
; ..\APP\src\Mcan.c	   363          	g_spi_msg.spi_data_tx[14+i] = msg1.data[0]&0xFF<<(i*2);
	mov	d0,#0
	lea	a15,[a14]14
.L391:
	mov.a	a2,#3
.L10:
	ld.bu	d1,[a10]54
.L565:
	fcall	.cocofun_11
.L390:
	loop	a2,.L10
.L392:

; ..\APP\src\Mcan.c	   364          }
; ..\APP\src\Mcan.c	   365          for(i=0; i<=3;i++)
; ..\APP\src\Mcan.c	   366          {
; ..\APP\src\Mcan.c	   367          	g_spi_msg.spi_data_tx[17+i] = msg1.data[1]&0xFF<<(i*2);
	mov	d0,#0
	lea	a15,[a14]17
.L566:
	mov.a	a2,#3
.L11:
	ld.bu	d1,[a10]58
.L567:
	fcall	.cocofun_11
.L568:
	loop	a2,.L11
.L318:

; ..\APP\src\Mcan.c	   368          }
; ..\APP\src\Mcan.c	   369  
; ..\APP\src\Mcan.c	   370  
; ..\APP\src\Mcan.c	   371  
; ..\APP\src\Mcan.c	   372  
; ..\APP\src\Mcan.c	   373  
; ..\APP\src\Mcan.c	   374  
; ..\APP\src\Mcan.c	   375  
; ..\APP\src\Mcan.c	   376  
; ..\APP\src\Mcan.c	   377  	sample_time = IfxStm_getLower(stmSfr2);
	ld.a	a15,stmSfr2
.L319:

; ..\APP\src\Mcan.c	   378      /* Transmit Data */
; ..\APP\src\Mcan.c	   379      {
; ..\APP\src\Mcan.c	   380          while (IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_13f_Tx_MsgObj, &msg_13f) == IfxMultican_Status_notSentBusy)
	lea	a12,[a13]148
.L321:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   464  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   465      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   466  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   469  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   470  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   471      return stm->CMP[comparator].B.CMPVAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   472  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   473  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   475  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   476  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   477      float32 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   478  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   479      result = IfxScuCcu_getStmFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   481      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   482  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   485  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   487      return stm->TIM0.U;
	ld.w	d8,[a15]16
.L322:
	j	.L12
.L13:

; ..\APP\src\Mcan.c	   381          {
; ..\APP\src\Mcan.c	   382          	current_time = IfxStm_getLower(stmSfr2);
	fcall	.cocofun_10
.L393:

; ..\APP\src\Mcan.c	   383      		if( current_time - sample_time >= Time_const )
	jge.u	d15,d0,.L14
.L12:
	mov.aa	a5,a10
	mov.aa	a4,a12
	call	IfxMultican_Can_MsgObj_sendMessage
.L569:
	mov	d15,#32
.L570:
	jeq	d15,d2,.L13

; ..\APP\src\Mcan.c	   384      		{
; ..\APP\src\Mcan.c	   385      			sample_time += Time_const;
; ..\APP\src\Mcan.c	   386      			break;
; ..\APP\src\Mcan.c	   387      		}
; ..\APP\src\Mcan.c	   388  
; ..\APP\src\Mcan.c	   389          }
; ..\APP\src\Mcan.c	   390      }
.L14:

; ..\APP\src\Mcan.c	   391  
; ..\APP\src\Mcan.c	   392      /* Transmit Data */
; ..\APP\src\Mcan.c	   393      sample_time = IfxStm_getLower(stmSfr2);
; ..\APP\src\Mcan.c	   394      {
; ..\APP\src\Mcan.c	   395  
; ..\APP\src\Mcan.c	   396          msg.byte4 = msg_45d.data[0];
	ld.w	d0,[a10]38
.L323:
	ld.a	a15,stmSfr2
.L324:

; ..\APP\src\Mcan.c	   397          msg.nm_dvrs.NMCommandCode_DVRS = 2;
; ..\APP\src\Mcan.c	   398          msg.nm_dvrs.Destination_Dvrs = 0x40;
; ..\APP\src\Mcan.c	   399          msg_45d.data[0] = msg.byte4;
; ..\APP\src\Mcan.c	   400  
; ..\APP\src\Mcan.c	   401          while (IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_45D_Tx_MsgObj, &msg_45d) == IfxMultican_Status_notSentBusy)
	extr.u	d1,d0,#8,#8
	lea	a12,[a13]164
.L571:
	mov	d15,#64
.L326:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   464  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   465      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   466  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   469  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   470  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   471      return stm->CMP[comparator].B.CMPVAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   472  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   473  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   475  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   476  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   477      float32 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   478  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   479      result = IfxScuCcu_getStmFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   481      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   482  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   485  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   487      return stm->TIM0.U;
	ld.w	d8,[a15]16
.L327:
	insert	d1,d1,#2,#0,#3
	insert	d0,d0,d1,#8,#8
.L572:
	insert	d0,d0,d15,#0,#8
	st.w	[a10]38,d0
.L573:
	j	.L15
.L16:

; ..\APP\src\Mcan.c	   402          {
; ..\APP\src\Mcan.c	   403          	current_time = IfxStm_getLower(stmSfr2);
	ld.a	a15,stmSfr2
.L574:

; ..\APP\src\Mcan.c	   404      		if( current_time - sample_time >= Time_const )
	ld.w	d1,.7.cnt
.L328:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   464  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   465      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   466  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   469  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   470  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   471      return stm->CMP[comparator].B.CMPVAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   472  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   473  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   475  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   476  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   477      float32 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   478  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   479      result = IfxScuCcu_getStmFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   481      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   482  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   485  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   487      return stm->TIM0.U;
	ld.w	d15,[a15]16
.L329:
	sub	d0,d15,d8
.L575:
	jge.u	d0,d1,.L17
.L15:
	lea	a5,[a10]32
	mov.aa	a4,a12
	call	IfxMultican_Can_MsgObj_sendMessage
.L576:
	mov	d15,#32
.L577:
	jeq	d15,d2,.L16

; ..\APP\src\Mcan.c	   405      		{
; ..\APP\src\Mcan.c	   406      			sample_time += Time_const;
; ..\APP\src\Mcan.c	   407      			break;
; ..\APP\src\Mcan.c	   408      		}
; ..\APP\src\Mcan.c	   409          }
; ..\APP\src\Mcan.c	   410      }
.L17:

; ..\APP\src\Mcan.c	   411  }
	ret
.L286:
	
__Trans_Mcan_13F_function_end:
	.size	Trans_Mcan_13F,__Trans_Mcan_13F_function_end-Trans_Mcan_13F
.L93:
	; End of function
	
	.sdecl	'.text.Mcan..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.Mcan..cocofun_11'
	.align	2
; Function .cocofun_11
.L42:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	mov	d15,#255
.L742:
	sha	d2,d0,#1
.L743:
	sha	d15,d15,d2
.L744:
	and	d1,d15
	st.b	[a15+],d1
.L745:
	add	d0,#1
	fret
.L163:
	; End of function
	.sdecl	'.text.Mcan..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.Mcan..cocofun_10'
	.align	2
; Function .cocofun_10
.L44:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	ld.a	a15,stmSfr2
.L735:
	ld.w	d0,.7.cnt
.L736:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    26   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    28   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    30   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    33   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    35   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    37   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    38   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    40   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    42   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    45   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    46   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    48   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    50   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    52   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    55   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    56   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    60   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    62   * {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    65   * }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    66   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    67   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    69   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    73   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    74   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    76   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    78   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    80   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    81   * \code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    83   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    85   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    88   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    90   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    93   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    95   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    96   * \endcode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    97   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	    99   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   110   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   111  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   114  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   118  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   122  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   126  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   128   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   130   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   131  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   132  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   136  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   138   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   139  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   140  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   144  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   146   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   147  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   148  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   182  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   184   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   185  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   186  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   220  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   224  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   230  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   231  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   235  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   237   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   239   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   240  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   241  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   250  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   251  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   252  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   254   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   259  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   263   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   265  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   269   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   271  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   275  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   278   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   279   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   281  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   285   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   287  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   288  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   289  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   291   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   292  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   296  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   300   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   302  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   306   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   308  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   312   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   314  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   318   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   320  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   324   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   326  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   343   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   345  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   354  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   355  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   357   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   358  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   362  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   367   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   369  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   374   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   376  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   381   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   383  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   388   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   389   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   396   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   397   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   399  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   403  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   407   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   408   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   410  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   415   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   417  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   420   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   421   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   423  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   427   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   428   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   430  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   431  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   436  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   437  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   440   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   441   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   443  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   447  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   448  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   450   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   451   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   453  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   457  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   459  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   461  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   463      result |= ((uint64)stm->CAP.U) << 32;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   464  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   465      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   466  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   467  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   468  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   469  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   470  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   471      return stm->CMP[comparator].B.CMPVAL;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   472  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   473  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   475  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   476  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   477      float32 result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   478  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   479      result = IfxScuCcu_getStmFrequency();
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   480  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   481      return result;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   482  }
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   483  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   484  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   485  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   486  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Stm\Std\IfxStm.h	   487      return stm->TIM0.U;
	ld.w	d15,[a15]16
.L737:
	sub	d15,d8
	fret
.L158:
	; End of function
	.sdecl	'.text.Mcan.init_Mcan_Msg',code,cluster('init_Mcan_Msg')
	.sect	'.text.Mcan.init_Mcan_Msg'
	.align	2
	
	.global	init_Mcan_Msg

; ..\APP\src\Mcan.c	   412  
; ..\APP\src\Mcan.c	   413  void init_Mcan_Msg(void)
; Function init_Mcan_Msg
.L46:
init_Mcan_Msg:	.type	func

; ..\APP\src\Mcan.c	   414  {
; ..\APP\src\Mcan.c	   415      IfxMultican_Message_init(&Mcan_msg_DF, 0xDF, 0xFFFFFFFF, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_DF)
	lea	a15,[a15]@los(Mcan_msg_DF)
.L582:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d15,#223
	st.w	[a15],d15
.L583:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	mov	d0,#-1
	st.w	[a15]6,d0
.L584:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	st.w	[a15]10,d0
.L585:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	mov	d15,#8
	st.b	[a15]4,d15
.L586:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	mov	d1,#0
	st.b	[a15]14,d1
.L331:

; ..\APP\src\Mcan.c	   416      IfxMultican_Message_init(&Mcan_msg_12F, 0x12F, 0xFFFFFFFF, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_12F)
	lea	a15,[a15]@los(Mcan_msg_12F)
.L587:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#303
	fcall	.cocofun_9
.L337:

; ..\APP\src\Mcan.c	   417      IfxMultican_Message_init(&Mcan_msg_13F, 0x13F, 0xffffffff, 0xffffffff, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_13F)
	lea	a15,[a15]@los(Mcan_msg_13F)
.L588:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#319
	fcall	.cocofun_9
.L339:

; ..\APP\src\Mcan.c	   418      IfxMultican_Message_init(&Mcan_msg_45D, 0x45D, 0x0, 0x0, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_45D)
	lea	a15,[a15]@los(Mcan_msg_45D)
.L589:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#1117
	st.w	[a15],d2
.L590:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	st.w	[a15]6,d1
.L591:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	st.w	[a15]10,d1
.L592:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	st.b	[a15]4,d15
.L593:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	st.b	[a15]14,d1
.L340:

; ..\APP\src\Mcan.c	   419      IfxMultican_Message_init(&Mcan_msg_169, 0x169, 0xffffffff, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_169)
	lea	a15,[a15]@los(Mcan_msg_169)
.L594:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#361
	fcall	.cocofun_9
.L341:

; ..\APP\src\Mcan.c	   420      IfxMultican_Message_init(&Mcan_msg_455, 0x455, 0xffffffff, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_455)
	lea	a15,[a15]@los(Mcan_msg_455)
.L595:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#1109
	fcall	.cocofun_9
.L342:

; ..\APP\src\Mcan.c	   421  
; ..\APP\src\Mcan.c	   422      IfxMultican_Message_init(&Mcan_msg_102, 0x102, 0xffffffff, 0xFFFFFFFF, IfxMultican_DataLengthCode_8); /* start with invalid values */
	movh.a	a15,#@his(Mcan_msg_102)
	lea	a15,[a15]@los(Mcan_msg_102)
.L596:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	mov	d2,#258
	fcall	.cocofun_9
.L343:

; ..\APP\src\Mcan.c	   423  }
	ret
.L330:
	
__init_Mcan_Msg_function_end:
	.size	init_Mcan_Msg,__init_Mcan_Msg_function_end-init_Mcan_Msg
.L98:
	; End of function
	
	.sdecl	'.text.Mcan..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.Mcan..cocofun_9'
	.align	2
; Function .cocofun_9
.L48:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     1  /**
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     2   * \file IfxMultican.h
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     3   * \brief MULTICAN  basic functionality
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     4   * \ingroup IfxLld_Multican
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     5   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     6   * \version iLLD_1_0_0_11_0
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     8   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	     9   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    10   *                                 IMPORTANT NOTICE
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    11   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    12   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    16   * products.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    17   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    23   *
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    24   * \defgroup IfxLld_Multican_Std_Enum Enumerations
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    25   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    26   * \defgroup IfxLld_Multican_Std_General General functions
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    27   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    28   * \defgroup IfxLld_Multican_Std_Node CAN Nodes
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    29   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    30   * \defgroup IfxLld_Multican_Std_Message Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    31   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    32   * \defgroup IfxLld_Multican_Std_Message_Objects Message Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    33   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    34   * \defgroup IfxLld_Multican_Std_Interrupts Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    35   * \ingroup IfxLld_Multican_Std
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    36   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    37  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    38  #ifndef IFXMULTICAN_H
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    39  #define IFXMULTICAN_H 1
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    40  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    41  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    42  /*----------------------------------Includes----------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    43  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    44  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    45  #include "_Impl/IfxMultican_cfg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    46  #include "Src/Std/IfxSrc.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    47  #include "_PinMap/IfxMultican_PinMap.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    49  #include "IfxCan_reg.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    50  #include "IfxCan_bf.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    51  #include "Scu/Std/IfxScuWdt.h"
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    52  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    53  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    54  /*------------------------------Type Definitions------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    55  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    56  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    57  /** \brief Message object ID, 0 .. \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    58   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    59  typedef sint32 IfxMultican_MsgObjId;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    60  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    61  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    63  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    64  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    65  /** \addtogroup IfxLld_Multican_Std_Enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    66   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    67  /** \brief CAN input clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    68   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    69  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    70  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    71      IfxMultican_ClockSelect_noClock  = 0, /**< \brief No clock supplied */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    72      IfxMultican_ClockSelect_fclc     = 1, /**< \brief fMULTICAN */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    73      IfxMultican_ClockSelect_fosc0    = 2, /**< \brief Oscillator Clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    74      IfxMultican_ClockSelect_fErayPll = 4  /**< \brief E-Ray clock */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    75  } IfxMultican_ClockSelect;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    76  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    77  /** \brief CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    78   * Definition in Ifx_CAN.MOFCRx.DLC
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    79   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    80  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    81  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    82      IfxMultican_DataLengthCode_0 = 0,    /**< \brief 0 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    83      IfxMultican_DataLengthCode_1,        /**< \brief 1 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    84      IfxMultican_DataLengthCode_2,        /**< \brief 2 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    85      IfxMultican_DataLengthCode_3,        /**< \brief 3 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    86      IfxMultican_DataLengthCode_4,        /**< \brief 4 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    87      IfxMultican_DataLengthCode_5,        /**< \brief 5 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    88      IfxMultican_DataLengthCode_6,        /**< \brief 6 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    89      IfxMultican_DataLengthCode_7,        /**< \brief 7 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    90      IfxMultican_DataLengthCode_8,        /**< \brief 8 data bytes  */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    91      IfxMultican_DataLengthCode_12 = 9,   /**< \brief 12 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    92      IfxMultican_DataLengthCode_16 = 10,  /**< \brief 16 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    93      IfxMultican_DataLengthCode_20 = 11,  /**< \brief 20 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    94      IfxMultican_DataLengthCode_24 = 12,  /**< \brief 24 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    95      IfxMultican_DataLengthCode_32 = 13,  /**< \brief 32 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    96      IfxMultican_DataLengthCode_48 = 14,  /**< \brief 48 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    97      IfxMultican_DataLengthCode_64 = 15   /**< \brief 64 data bytes */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    98  } IfxMultican_DataLengthCode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	    99  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   100  /** \brief CAN frame type
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   101   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   102  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   103  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   104      IfxMultican_Frame_receive,        /**< \brief Data frame is received */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   105      IfxMultican_Frame_transmit,       /**< \brief Data frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   106      IfxMultican_Frame_remoteRequest,  /**< \brief Remote request frame is generated */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   107      IfxMultican_Frame_remoteAnswer    /**< \brief Answer frame is generated on reception of the corresponding remote request */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   108  } IfxMultican_Frame;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   109  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   110  /** \brief Determines the operation mode of the frame counter\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   111   * Definition in Ifx_CAN.NFCRx.B.CFMOD, (x= node Id)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   112   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   113  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   114  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   115      IfxMultican_FrameCounterMode_frameCountMode = 0,  /**< \brief The frame counter is incremented
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   116                                                         * upon the reception and transmission of frames */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   117      IfxMultican_FrameCounterMode_timeStampMode  = 1,  /**< \brief The frame counter is used to count
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   118                                                         * bit times. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   119      IfxMultican_FrameCounterMode_bitTimingMode  = 2,  /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   120                                                         * analysis of the bit timing. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   121      IfxMultican_FrameCounterMode_errorCountMode = 3   /**< \brief The frame counter is used for
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   122                                                         * counting when an error frame is received or an error is
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   123                                                         * detected by the node. */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   124  } IfxMultican_FrameCounterMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   125  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   126  /** \brief CAN message object group\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   127   * Each group consists of 32 consecutive message objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   128   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   129  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   130  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   131      IfxMultican_MsgObjGroup_0 = 0,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   132      IfxMultican_MsgObjGroup_1,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   133      IfxMultican_MsgObjGroup_2,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   134      IfxMultican_MsgObjGroup_3,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   135      IfxMultican_MsgObjGroup_4,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   136      IfxMultican_MsgObjGroup_5,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   137      IfxMultican_MsgObjGroup_6,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   138      IfxMultican_MsgObjGroup_7
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   139  } IfxMultican_MsgObjGroup;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   140  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   141  /** \brief CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   142   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   143  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   144  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   145      IfxMultican_MsgObjMode_standard          = 0,  /**< \brief Standard Message Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   146      IfxMultican_MsgObjMode_receiveFifoBase   = 1,  /**< \brief Receive FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   147      IfxMultican_MsgObjMode_transmitFifoBase  = 2,  /**< \brief Transmit FIFO Base Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   148      IfxMultican_MsgObjMode_transmitFifoSlave = 3,  /**< \brief Transmit FIFO Slave Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   149      IfxMultican_MsgObjMode_gatewaySource     = 4,  /**< \brief Gateway Source Object */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   150      IfxMultican_MsgObjMode_canFD64           = 5   /**< \brief CANFD 64 bytes Message Mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   151  } IfxMultican_MsgObjMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   152  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   153  /** \brief CAN Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   154   * Definition in Ifx_CAN.MOSTATx (x: 0 to max number of msg objs)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   155   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   156  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   157  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   158      IfxMultican_MsgObjStatusFlag_receivePending          = IFX_CAN_MO_STAT_RXPND_OFF,  /**< \brief Receive pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   159      IfxMultican_MsgObjStatusFlag_transmitPending         = IFX_CAN_MO_STAT_TXPND_OFF,  /**< \brief Transmit pending status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   160      IfxMultican_MsgObjStatusFlag_receiveUpdating         = IFX_CAN_MO_STAT_RXUPD_OFF,  /**< \brief Receive updating status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   161      IfxMultican_MsgObjStatusFlag_newData                 = IFX_CAN_MO_STAT_NEWDAT_OFF, /**< \brief New data status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   162      IfxMultican_MsgObjStatusFlag_messageLost             = IFX_CAN_MO_STAT_MSGLST_OFF, /**< \brief Message lost status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   163      IfxMultican_MsgObjStatusFlag_messageValid            = IFX_CAN_MO_STAT_MSGVAL_OFF, /**< \brief Message valid status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   164      IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = IFX_CAN_MO_STAT_RTSEL_OFF,  /**< \brief Receive transmit selected status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   165      IfxMultican_MsgObjStatusFlag_receiveEnable           = IFX_CAN_MO_STAT_RXEN_OFF,   /**< \brief Receive enable status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   166      IfxMultican_MsgObjStatusFlag_transmitRequest         = IFX_CAN_MO_STAT_TXRQ_OFF,   /**< \brief Transmit request status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   167      IfxMultican_MsgObjStatusFlag_transmitEnable0         = IFX_CAN_MO_STAT_TXEN0_OFF,  /**< \brief Transmit enable 0 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   168      IfxMultican_MsgObjStatusFlag_transmitEnable1         = IFX_CAN_MO_STAT_TXEN1_OFF,  /**< \brief Transmit enable 1 status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   169      IfxMultican_MsgObjStatusFlag_messageDirection        = IFX_CAN_MO_STAT_DIR_OFF     /**< \brief Message direction status flag */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   170  } IfxMultican_MsgObjStatusFlag;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   171  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   172  /** \brief CAN priorities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   173   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   174  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   175  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   176      IfxMultican_Priority_ListOrder = 1,  /**< \brief List order */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   177      IfxMultican_Priority_CAN_ID    = 2   /**< \brief CAN ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   178  } IfxMultican_Priority;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   179  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   180  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   181   * Definition in Ifx_CAN.CLC.B.EDIS
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   182   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   183  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   184  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   185      IfxMultican_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   186      IfxMultican_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   187  } IfxMultican_SleepMode;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   188  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   189  /** \brief CAN API status definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   190   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   191  typedef enum
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   192  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   193      IfxMultican_Status_ok                = 0x00000000,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   194      IfxMultican_Status_notInitialised    = 0x00000001,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   195      IfxMultican_Status_wrongParam        = 0x00000002,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   196      IfxMultican_Status_wrongPin          = 0x00000004,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   197      IfxMultican_Status_busHeavy          = 0x00000008,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   198      IfxMultican_Status_busOff            = 0x00000010,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   199      IfxMultican_Status_notSentBusy       = 0x00000020,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   200      IfxMultican_Status_receiveEmpty      = 0x00000040,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   201      IfxMultican_Status_messageLost       = 0x00000080,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   202      IfxMultican_Status_newData           = 0x00000100,
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   203      IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   204  } IfxMultican_Status;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   205  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   206  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   207  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   208  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   209  /*-----------------------------Data Structures--------------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   210  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   211  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   212  /** \brief CAN message definition
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   213   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   214  typedef struct
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   215  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   216      uint32                     id;              /**< \brief CAN message ID */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   217      IfxMultican_DataLengthCode lengthCode;      /**< \brief CAN message data length code */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   218      uint32                     data[2];         /**< \brief CAN message data */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   219      boolean                    fastBitRate;     /**< \brief CAN FD fast bit rate enable/disable */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   220  } IfxMultican_Message;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   221  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   222  /** \brief Message object status bit-fields
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   223   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   224  typedef union
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   225  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   226      Ifx_CAN_MO_STAT_Bits B;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   227      unsigned int         U;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   228  } IfxMultican_MsgObjStat;
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   229  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   230  /** \addtogroup IfxLld_Multican_Std_General
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   231   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   232  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   233  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   234  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   235  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   236  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   237  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   238   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   239   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   240   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   241  IFX_INLINE void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   242  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   243  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   244   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   245   * \param list List number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   246   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   247   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   248  IFX_INLINE void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   249  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   250  /** \brief Disables the module (sets the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   251   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   252   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   253   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   254  IFX_INLINE void IfxMultican_disableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   255  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   256  /** \brief Disregards the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   257   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   258   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   259   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   260  IFX_INLINE void IfxMultican_disableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   261  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   262  /** \brief Enables the module (clears the disable request)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   263   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   264   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   265   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   266  IFX_INLINE void IfxMultican_enableModule(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   267  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   268  /** \brief Enables the sleep mode of the module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   269   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   270   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   271   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   272  IFX_INLINE void IfxMultican_enableSleepMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   273  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   274  /** \brief Returns the selected fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   275   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   276   * \return Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   277   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   278  IFX_INLINE uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   279  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   280  /** \brief Returns the reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   281   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   282   * \return Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   283   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   284  IFX_INLINE uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   285  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   286  /** \brief Returns the selected input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   287   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   288   * \return Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   289   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   290  IFX_INLINE IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   291  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   292  /** \brief Returns the status of module enabled or disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   293   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   294   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   295   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   296  IFX_INLINE boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   297  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   298  /** \brief sets the fractional divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   299   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   300   * \param mode Divider mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   301   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   302   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   303  IFX_INLINE void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   304  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   305  /** \brief sets reload or addition value for the result.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   306   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   307   * \param stepValue Step Value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   308   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   309   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   310  IFX_INLINE void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   311  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   312  /** \brief Sets the input clock source
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   313   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   314   * \param clockSelect Clock selection
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   315   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   316   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   317  IFX_INLINE void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   318  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   319  /** \brief clears the message pending interrupt notification of a given list
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   320   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   321   * \param mask Message Index mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   322   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   323   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   324  IFX_INLINE void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   325  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   326  /** \brief Sets the sensitivity of the module to sleep signal
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   327   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   328   * \param mode mode selection (enable / disable)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   329   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   330   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   331  IFX_INLINE void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   332  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   333  /** \brief Wait until the list panel is ready
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   334   * \param mcan mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   335   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   336   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   337  IFX_INLINE void IfxMultican_waitListReady(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   338  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   339  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   340  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   341  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   342  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   343  /** \brief Calculates the best posible values and configures FBTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   344   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   345   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   346   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   347   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   348   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   349   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   350   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   351   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   352  IFX_EXTERN void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   353  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   354  /** \brief Calculates the best posible values and configures BTEVR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   355   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   356   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   357   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   358   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   359   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   360   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   361   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   362   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   363  IFX_EXTERN void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   364  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   365  /** \brief Reset the CAN module\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   366   * Reset and disable the CAN module, inclusive message object and node registers.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   367   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   368   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   369   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   370  IFX_EXTERN void IfxMultican_deinit(Ifx_CAN *mcan);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   371  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   372  /** \brief resets Multican kernel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   373   * \param can pointer to CAN registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   374   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   375   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   376  IFX_EXTERN void IfxMultican_resetModule(Ifx_CAN *can);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   377  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   378  /** \brief Execute a command from the command panel
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   379   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   380   * \param cmd Specifies the command
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   381   * \param arg2 Specifies the second argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   382   * \param arg1 Specifies the first argument
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   383   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   384   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   385  IFX_EXTERN void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   386  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   387  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   388  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   389  /** \addtogroup IfxLld_Multican_Std_Node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   390   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   391  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   392  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   393  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   394  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   395  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   396  /** \brief Activate the CAN Node. Participate in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   397   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   398   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   399   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   400  IFX_INLINE void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   401  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   402  /** \brief Deactivate the CAN Node. Take out from participation in the CAN bus activities
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   403   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   404   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   405   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   406  IFX_INLINE void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   407  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   408  /** \brief Disables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   409   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   410   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   411   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   412  IFX_INLINE void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   413  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   414  /** \brief Enables the configuration changes for the Bit Timing Register, the Port Control Register, and the Error Counter Register of a CAN Node.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   415   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   416   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   417   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   418  IFX_INLINE void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   419  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   420  /** \brief Returns the base address to a given CAN node number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   421   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   422   * \param node Specifies the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   423   * \return base pointer to CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   424   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   425  IFX_INLINE Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   426  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   427  /** \brief Resets the control register of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   428   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   429   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   430   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   431  IFX_INLINE void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   432  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   433  /** \brief Resets the error counters of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   434   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   435   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   436   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   437  IFX_INLINE void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   438  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   439  /** \brief Resets the interrupt pointers of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   440   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   441   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   442   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   443  IFX_INLINE void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   444  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   445  /** \brief Enables / Disables the alert interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   446   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   447   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   448   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   449   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   450  IFX_INLINE void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   451  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   452  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   453   * (m = 0-15) for an alert interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   454   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   455   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   456   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   457   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   458  IFX_INLINE void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   459  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   460  /** \brief Enables / Disables the analyzer mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   461   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   462   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   463   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   464   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   465  IFX_INLINE void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   466  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   467  /** \brief Determines the threshold value (warning level, default 96) to be reached\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   468   * in order to set the corresponding error warning bit EWRN.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   469   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   470   * \param level Error warning level
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   471   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   472   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   473  IFX_INLINE void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   474  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   475  /** \brief Enables / Disables the flexible data rate of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   476   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   477   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   478   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   479   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   480  IFX_INLINE void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   481  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   482  /** \brief Enables / Disables the CAN frame counter overflow interrupt of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   483   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   484   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   485   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   486   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   487  IFX_INLINE void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   488  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   489  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   490   * (m = 0-15) for a frame counter overflow interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   491   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   492   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   493   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   494   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   495  IFX_INLINE void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   496  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   497  /** \brief Sets the operation mode of the frame counter of the CAN Node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   498   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   499   * \param mode Determines the operation mode of the frame counter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   500   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   501   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   502  IFX_INLINE void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   503  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   504  /** \brief Enables / Disables the last error code interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   505   * This interrupt is generated with each hardware update of bit field NSRx.LEC with LEC > 0 (CAN protocol error).
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   506   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   507   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   508   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   509   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   510  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   511  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   512  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   513   * (m = 0-15) for an LEC interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   514   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   515   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   516   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   517   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   518  IFX_INLINE void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   519  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   520  /** \brief Enables / Disables the loopback mode of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   521   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   522   * \param mode Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   523   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   524   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   525  IFX_INLINE void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   526  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   527  /** \brief Sets the value of the receive error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   528   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   529   * \param value Receive error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   530   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   531   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   532  IFX_INLINE void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   533  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   534  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   535   * (m = 0-15) for a timer event interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   536   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   537   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   538   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   539   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   540  IFX_INLINE void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   541  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   542  /** \brief Enables / Disables the transceiver delay compensation of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   543   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   544   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   545   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   546   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   547  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   548  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   549  /** \brief Sets transceiver delay ompensation offset of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   550   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   551   * \param value transceiver delay ompensation offset that is added to the measured transceiver delay. Range = [0, 15]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   552   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   553   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   554  IFX_INLINE void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   555  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   556  /** \brief Enables / Disables the transfer interrupt of CAN node x. \n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   557   * This interrupt is generated after the successful reception or transmission of a CAN frame in node x
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   558   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   559   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   560   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   561   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   562  IFX_INLINE void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   563  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   564  /** \brief Selects the interrupt output line INT_Om
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   565   * (m = 0-15) for a transfer OK interrupt of CAN Node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   566   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   567   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   568   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   569   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   570  IFX_INLINE void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   571  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   572  /** \brief Sets the value of the transmit error counter of CAN node x.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   573   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   574   * \param value Transmit error counter value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   575   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   576   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   577  IFX_INLINE void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   578  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   579  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   580  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   581  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   582  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   583  /** \brief Reset the CAN node
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   584   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   585   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   586   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   587  IFX_EXTERN void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   588  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   589  /** \brief Select and initialise the CAN node receive pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   590   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   591   * \param rxd Rx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   592   * \param mode Input mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   593   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   594   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   595   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   596  IFX_EXTERN boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   597  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   598  /** \brief Select and initialise the CAN node transmit pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   599   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   600   * \param txd Tx pin
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   601   * \param mode Output mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   602   * \return TRUE: Returns TRUE if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   603   * FALSE: Returns FALSE if the operation was errorneous
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   604   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   605  IFX_EXTERN boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   606  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   607  /** \brief Recovers the CAN node from bus off
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   608   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   609   * \return Status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   610   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   611  IFX_EXTERN IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   612  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   613  /** \brief Calculates the best posible values and configures BTR register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   614   * \param hwNode Pointer to CAN Node registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   615   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   616   * \param baudrate Specifies the node baud rate. Unit: baud
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   617   * \param samplePoint Specifies the sample point. Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   618   * \param synchJumpWidth synchJumpWidth Specifies the re-synchronization jump width.\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   619   * Range = [0, 10000] resp. [0%, 100%] of the total bit time.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   620   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   621   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   622  IFX_EXTERN void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   623  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   624  /** \brief Returns the CAN node timing
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   625   * \param moduleFreq Specifies the CAN module frequency
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   626   * \param btr BTR
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   627   * \param baudrate Baudrate
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   628   * \param samplePoint Sample point
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   629   * \param synchJumpWidth Sync Jump Width
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   630   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   631   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   632  IFX_EXTERN void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   633  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   634  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   635  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   636  /** \addtogroup IfxLld_Multican_Std_Message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   637   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   638  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   639  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   640  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   641  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   642  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   643  /** \brief Initializes a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   644   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   645   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   646   * \param dataLow The lower part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   647   * \param dataHigh The upper part of the 64bit data value
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   648   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   649   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   650   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   651  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   652  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   653  /** \brief Initializes a CAN message long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   654   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   655   * \param id The message ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   656   * \param lengthCode number of bytes (data length code) which should be transmitted (0..8)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   657   * \param fastBitRate Fast bit rate (FCR.BRS) enable/ disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   658   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   659   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   660  IFX_INLINE void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   661  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   662  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   663  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   664  /** \addtogroup IfxLld_Multican_Std_Message_Objects
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   665   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   666  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   667  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   668  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   669  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   670  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   671  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   672   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   673   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   674   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   675  IFX_INLINE void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   676  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   677  /** \brief Clears the FIFO/GateWay pointers of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   678   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   679   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   680   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   681  IFX_INLINE void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   682  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   683  /** \brief Clear the RX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   684   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   685   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   686   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   687  IFX_INLINE void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   688  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   689  /** \brief Clear the TX pending flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   690   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   691   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   692   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   693  IFX_INLINE void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   694  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   695  /** \brief Gets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   696   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   697   * \return Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   698   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   699  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   700  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   701  /** \brief Gets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   702   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   703   * \return CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   704   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   705  IFX_INLINE IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   706  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   707  /** \brief Gets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   708   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   709   * \return messageId
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   710   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   711  IFX_INLINE uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   712  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   713  /** \brief Returns next object pointer (PNEXT) of the current message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   714   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   715   * \return Next message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   716   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   717  IFX_INLINE IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   718  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   719  /** \brief Get base address of a message object register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   720   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   721   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   722   * \return Pointer to Message Object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   723   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   724  IFX_INLINE Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   725  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   726  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   727   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   728   * \return Extended frame: True
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   729   * Standard frame: False
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   730   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   731  IFX_INLINE boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   732  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   733  /** \brief Returns the RX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   734   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   735   * \return TRUE of the RX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   736   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   737  IFX_INLINE boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   738  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   739  /** \brief Returns the TX Request flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   740   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   741   * \return TRUE of the TX Request flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   742   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   743  IFX_INLINE boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   744  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   745  /** \brief Returns the TX pending flag of a message object.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   746   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   747   * \return TRUE of the TX pending flag of a message object is set
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   748   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   749  IFX_INLINE boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   750  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   751  /** \brief Sets acceptance mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   752   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   753   * \param mask Acceptance Mask for the message identifier
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   754   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   755   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   756   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   757  IFX_INLINE void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   758  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   759  /** \brief Enable / Disable bit rate switch of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   760   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   761   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   762   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   763   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   764  IFX_INLINE void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   765  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   766  /** \brief Sets bottom object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   767   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   768   * \param objNumber Bottom message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   769   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   770   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   771  IFX_INLINE void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   772  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   773  /** \brief Sets bottom current pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   774   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   775   * \param objNumber Current message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   776   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   777   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   778  IFX_INLINE void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   779  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   780  /** \brief Enable / Disable data copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   781   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   782   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   783   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   784   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   785  IFX_INLINE void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   786  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   787  /** \brief Sets data length code of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   788   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   789   * \param code CAN frame data length code
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   790   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   791   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   792  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   793  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   794  /** \brief Enable / Disable data length code copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   795   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   796   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   797   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   798   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   799  IFX_INLINE void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   800  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   801  /** \brief Enable / Disable extended data length of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   802   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   803   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   804   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   805   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   806  IFX_INLINE void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   807  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   808  /** \brief Enable / Disable gateway data frame send of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   809   * which in turn sets the TXRQ of the gateway deatination object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   810   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   811   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   812   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   813   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   814  IFX_INLINE void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   815  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   816  /** \brief Enable / Disable identifier copy of a gateway source message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   817   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   818   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   819   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   820   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   821  IFX_INLINE void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   822  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   823  /** \brief Sets identifier extension of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   824   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   825   * \param extension Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   826   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   827   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   828  IFX_INLINE void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   829  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   830  /** \brief Sets acceptance mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   831   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   832   * \param matchingId Acceptance Mask for the message IDE bit
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   833   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   834   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   835  IFX_INLINE void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   836  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   837  /** \brief Sets message identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   838   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   839   * \param messageId CAN Identifier of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   840   * \param extendedFrame Extended frame enabled / disabled
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   841   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   842   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   843  IFX_INLINE void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   844  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   845  /** \brief Sets the message mode of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   846   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   847   * \param mode CAN Message Object Mode
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   848   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   849   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   850  IFX_INLINE void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   851  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   852  /** \brief Sets message pending number that selects the bit position of the bit in the Message Pending Register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   853   * that is set upon a message object n receive/transmit interrupt
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   854   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   855   * \param messageNumber Message pending number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   856   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   857   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   858  IFX_INLINE void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   859  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   860  /** \brief Enable / Disable overflow interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   861   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   862   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   863   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   864   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   865  IFX_INLINE void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   866  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   867  /** \brief Sets priority class of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   868   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   869   * \param priority One of the priority classes 0, 1, 2, 3 to message object n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   870   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   871   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   872  IFX_INLINE void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   873  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   874  /** \brief Enable / Disable receive interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   875   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   876   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   877   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   878   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   879  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   880  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   881  /** \brief Sets receive interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   882   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   883   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   884   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   885   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   886  IFX_INLINE void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   887  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   888  /** \brief Enable / Disable transmit object remote monitoring of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   889   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   890   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   891   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   892   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   893  IFX_INLINE void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   894  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   895  /** \brief Sets bottom object select pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   896   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   897   * \param objNumber Select message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   898   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   899   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   900  IFX_INLINE void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   901  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   902  /** \brief Enable / Disable single data transfer of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   903   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   904   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   905   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   906   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   907  IFX_INLINE void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   908  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   909  /** \brief Enable / Disable single transmit trial of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   910   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   911   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   912   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   913   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   914  IFX_INLINE void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   915  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   916  /** \brief Sets top object pointer of the base message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   917   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   918   * \param objNumber Top message object number
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   919   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   920   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   921  IFX_INLINE void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   922  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   923  /** \brief Enable / Disable transmit interrupt of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   924   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   925   * \param enabled Enable / disable choice
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   926   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   927   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   928  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   929  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   930  /** \brief Sets transmit interrupt node pointer of message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   931   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   932   * \param srcId Service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   933   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   934   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   935  IFX_INLINE void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   936  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   937  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   938  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   939  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   940  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   941  /** \brief Cancel pending TX request by invalidating the request, only when frame transmission has not been started.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   942   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   943   * \return TRUE if cancellation was successfully executed
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   944   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   945  IFX_EXTERN boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   946  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   947  /** \brief Clears the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   948   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   949   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   950   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   951   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   952  IFX_EXTERN void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   953  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   954  /** \brief Reset the message object\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   955   * Append the message object to the end of idle list and reset message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   956   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   957   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   958   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   959   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   960  IFX_EXTERN void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   961  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   962  /** \brief Get message object ID which has TX/RX pending flag from a message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   963   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   964   * \param msgObjGroup Message object group
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   965   * \return Message object index
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   966   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   967  IFX_EXTERN IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   968  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   969  /** \brief Get the message object status
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   970   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   971   * \return \ref IfxMultican_MsgObjStat bitfield
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   972   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   973  IFX_EXTERN IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   974  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   975  /** \brief Gets the status of the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   976   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   977   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   978   * \return Status (TRUE / FALSE)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   979   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   980  IFX_EXTERN boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   981  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   982  /** \brief Read a received CAN long frame
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   983   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   984   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   985   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   986   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   987   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   988   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   989   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   990   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   991   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   992  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   993  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   994  /** \brief Read a received CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   995   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   996   * \param msg This parameter is filled in by the function with the received message. Also when reading is not successful.
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   997   * \return IfxMultican_Status_newData: if the operation was successful\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   998   * IfxMultican_Status_newDataButMessageLost: if the one message lost and last new data is retrieved successfully\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	   999   * IfxMultican_Status_messageLost: if the message lost and new data is not yet ready\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1000   * IfxMultican_Status_receiveEmpty: if no message is been received
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1001   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1002  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1003  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1004  /** \brief Send a CAN Long frame message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1005   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1006   * \param msgObjId Specifies the message object index. Range = [0, \ref IFXMULTICAN_NUM_MESSAGE_OBJECTS - 1]
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1007   * \param msg The message which should be initialized
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1008   * \param data Pointer to data (in words)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1009   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1010   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1011   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1012  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1013  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1014  /** \brief Send a CAN message
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1015   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1016   * \param msg Specifies the message to be send
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1017   * \return IfxMultican_Status_ok: if the operation was successful
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1018   * IfxMultican_Status_notSentBusy: if the operation was unsuccessful due to hardware is busy
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1019   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1020  IFX_EXTERN IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1021  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1022  /** \brief Set message object filter
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1023   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1024   * \param extend TRUE/FALSE : extended ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1025   * \param id ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1026   * \param accMask acceptance mask
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1027   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1028   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1029  IFX_EXTERN void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1030  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1031  /** \brief Sets the selected status flag of a message object
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1032   * \param hwObj Pointer to CAN message object registers
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1033   * \param flag Message Object status flag
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1034   * \return None
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1035   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1036  IFX_EXTERN void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1037  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1038  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1039  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1040  /** \addtogroup IfxLld_Multican_Std_Interrupts
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1041   * \{ */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1042  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1043  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1045  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1046  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1047  /** \brief Get the interrupt source register
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1048   * \param mcan Specifies the CAN module
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1049   * \param srcId Specifies the service request ID
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1050   * \return Address of the interrupt source register\n
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1051   */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1052  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1053  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1054  /** \} */
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1055  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1056  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1057  /*---------------------Inline Function Implementations------------------------*/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1058  /******************************************************************************/
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1059  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1060  IFX_INLINE void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1061  {
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1062      msg->id          = id;
	st.w	[a15],d2
.L727:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1063      msg->data[0]     = dataLow;
	st.w	[a15]6,d0
.L728:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1064      msg->data[1]     = dataHigh;
	st.w	[a15]10,d0
.L729:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1065      msg->lengthCode  = lengthCode;
	st.b	[a15]4,d15
.L730:

; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1066  
; D:\00.Tasking_workspace\DVRS_INTEL\RGB_IR_INTEL_REV05\SoftwarePlatform\illd_tc23x\src\ifx\TC23x\Multican\Std\IfxMultican.h	  1067      msg->fastBitRate = FALSE;
	st.b	[a15]14,d1
	fret
.L153:
	; End of function
	.sdecl	'.text.Mcan.Receive_Mcan_10ms',code,cluster('Receive_Mcan_10ms')
	.sect	'.text.Mcan.Receive_Mcan_10ms'
	.align	2
	
	.global	Receive_Mcan_10ms

; ..\APP\src\Mcan.c	   424  
; ..\APP\src\Mcan.c	   425  void Receive_Mcan_10ms(void)
; Function Receive_Mcan_10ms
.L50:
Receive_Mcan_10ms:	.type	func

; ..\APP\src\Mcan.c	   426  {
; ..\APP\src\Mcan.c	   427  	Mcan_msg mcan_msg;
; ..\APP\src\Mcan.c	   428  
; ..\APP\src\Mcan.c	   429  	uint16 err_cnt = 0;
; ..\APP\src\Mcan.c	   430  
; ..\APP\src\Mcan.c	   431  	/*	Receive Data	*/
; ..\APP\src\Mcan.c	   432      /* wait until MCAN received the frame */
; ..\APP\src\Mcan.c	   433      while (!IfxMultican_Can_MsgObj_isRxPending(&g_MulticanBasic.drivers.mcan_DF_RX_MsgObj))
	mov	d15,#0
	movh.a	a15,#@his(g_MulticanBasic+196)
.L394:
	lea	a15,[a15]@los(g_MulticanBasic+196)
.L601:
	j	.L18
.L19:

; ..\APP\src\Mcan.c	   434      {
; ..\APP\src\Mcan.c	   435      	err_cnt++;
	add	d15,#1
.L395:
	extr.u	d15,d15,#0,#16
.L396:

; ..\APP\src\Mcan.c	   436      	if(err_cnt==350)
	mov	d0,#350
.L602:
	jne	d15,d0,.L20
.L603:

; ..\APP\src\Mcan.c	   437      	{
; ..\APP\src\Mcan.c	   438      		err_cnt =0;
; ..\APP\src\Mcan.c	   439      		can_sleep_count++;
	ld.w	d15,can_sleep_count
.L397:
	add	d15,#1
	st.w	can_sleep_count,d15
.L604:

; ..\APP\src\Mcan.c	   440      		break;
	j	.L21
.L20:
.L18:
	mov.aa	a4,a15
	call	IfxMultican_Can_MsgObj_isRxPending
.L605:
	jeq	d2,#0,.L19

; ..\APP\src\Mcan.c	   441      	}
; ..\APP\src\Mcan.c	   442      }
; ..\APP\src\Mcan.c	   443      IfxMultican_Status  readStatus = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_DF_RX_MsgObj, &Mcan_msg_DF);
.L21:
	movh.a	a12,#@his(Mcan_msg_DF)
	lea	a12,[a12]@los(Mcan_msg_DF)
	mov.aa	a4,a15
	mov.aa	a5,a12
	call	IfxMultican_Can_MsgObj_readMessage
.L606:

; ..\APP\src\Mcan.c	   444  
; ..\APP\src\Mcan.c	   445  
; ..\APP\src\Mcan.c	   446  
; ..\APP\src\Mcan.c	   447      mcan_msg.byte4 = Mcan_msg_DF.data[0];
	ld.w	d15,[a12]6
.L607:

; ..\APP\src\Mcan.c	   448      g_spi_msg.spi_data_tx[23] = mcan_msg.hu_dvrs_e_low.HU_Display;
	movh.a	a15,#@his(g_spi_msg+23)
.L608:
	extr.u	d15,d15,#0,#3
	st.b	[a15]@los(g_spi_msg+23),d15
.L609:

; ..\APP\src\Mcan.c	   449      gu8_HU_Display = mcan_msg.hu_dvrs_e_low.HU_Display;
	st.b	gu8_HU_Display,d15
.L610:

; ..\APP\src\Mcan.c	   450  
; ..\APP\src\Mcan.c	   451  //    if(mcan_msg.hu_dvrs_e_low.HU_Display==1)
; ..\APP\src\Mcan.c	   452  //    {
; ..\APP\src\Mcan.c	   453  //    	mcan_msg.byte4 = Mcan_msg_13F.data[0];
; ..\APP\src\Mcan.c	   454  //    	mcan_msg.Dvrs_hu_pe_low.Display = 1;
; ..\APP\src\Mcan.c	   455  //    	Mcan_msg_13F.data[0] = mcan_msg.byte4;
; ..\APP\src\Mcan.c	   456  //    }
; ..\APP\src\Mcan.c	   457  
; ..\APP\src\Mcan.c	   458  }
	ret
.L344:
	
__Receive_Mcan_10ms_function_end:
	.size	Receive_Mcan_10ms,__Receive_Mcan_10ms_function_end-Receive_Mcan_10ms
.L103:
	; End of function
	
	.sdecl	'.text.Mcan.Recieve_Mcan_200ms',code,cluster('Recieve_Mcan_200ms')
	.sect	'.text.Mcan.Recieve_Mcan_200ms'
	.align	2
	
	.global	Recieve_Mcan_200ms

; ..\APP\src\Mcan.c	   459  
; ..\APP\src\Mcan.c	   460  void Recieve_Mcan_200ms(void)
; Function Recieve_Mcan_200ms
.L52:
Recieve_Mcan_200ms:	.type	func

; ..\APP\src\Mcan.c	   461  {
; ..\APP\src\Mcan.c	   462  	Mcan_msg mcan_msg;
; ..\APP\src\Mcan.c	   463  	IfxMultican_Status  readStatus_169 = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_169_Rx_MsgObj, &Mcan_msg_169);
	movh.a	a15,#@his(Mcan_msg_169)
	lea	a15,[a15]@los(Mcan_msg_169)
.L664:
	movh.a	a2,#@his(g_MulticanBasic+244)
.L665:
	lea	a4,[a2]@los(g_MulticanBasic+244)
.L666:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_readMessage
.L667:

; ..\APP\src\Mcan.c	   464  	mcan_msg.byte4 = Mcan_msg_169.data[0];
	ld.w	d15,[a15]6
.L668:

; ..\APP\src\Mcan.c	   465  	gu8_ENG_STAT = mcan_msg.gw_chassis_pe_low.GW_ENG_STAT;
	extr.u	d15,d15,#16,#3
	st.b	gu8_ENG_STAT,d15
.L669:

; ..\APP\src\Mcan.c	   466  
; ..\APP\src\Mcan.c	   467  }
	ret
.L360:
	
__Recieve_Mcan_200ms_function_end:
	.size	Recieve_Mcan_200ms,__Recieve_Mcan_200ms_function_end-Recieve_Mcan_200ms
.L123:
	; End of function
	
	.sdecl	'.text.Mcan.Recieve_Mcan_NM',code,cluster('Recieve_Mcan_NM')
	.sect	'.text.Mcan.Recieve_Mcan_NM'
	.align	2
	
	.global	Recieve_Mcan_NM

; ..\APP\src\Mcan.c	   468  
; ..\APP\src\Mcan.c	   469  void Recieve_Mcan_NM(void)
; Function Recieve_Mcan_NM
.L54:
Recieve_Mcan_NM:	.type	func

; ..\APP\src\Mcan.c	   470  {
; ..\APP\src\Mcan.c	   471  	Mcan_msg mcan_msg;
; ..\APP\src\Mcan.c	   472  	//uint16 err_cnt = 0;
; ..\APP\src\Mcan.c	   473  	while (!IfxMultican_Can_MsgObj_isRxPending(&g_MulticanBasic.drivers.mcan_440_Rx_MsgObj))
	movh.a	a15,#@his(g_MulticanBasic+260)
.L674:
	lea	a15,[a15]@los(g_MulticanBasic+260)
.L22:
	mov.aa	a4,a15
	call	IfxMultican_Can_MsgObj_isRxPending
.L675:
	jeq	d2,#0,.L22
.L676:

; ..\APP\src\Mcan.c	   474  	    {
; ..\APP\src\Mcan.c	   475  
; ..\APP\src\Mcan.c	   476  	    }
; ..\APP\src\Mcan.c	   477  	readStatus_440 = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_440_Rx_MsgObj, &Mcan_msg_440);
	movh.a	a5,#@his(Mcan_msg_440)
	lea	a5,[a5]@los(Mcan_msg_440)
	mov.aa	a4,a15
	call	IfxMultican_Can_MsgObj_readMessage
.L677:

; ..\APP\src\Mcan.c	   478  	//mcan_msg.byte4 = Mcan_msg_440.data[0];
; ..\APP\src\Mcan.c	   479  
; ..\APP\src\Mcan.c	   480  	if(readStatus_440 == IfxMultican_Status_receiveEmpty )
	mov	d15,#64
	st.h	readStatus_440,d2
.L678:

; ..\APP\src\Mcan.c	   481  	{
; ..\APP\src\Mcan.c	   482  		Mcan_NM_sleep_cnt++;
	ld.bu	d0,Mcan_NM_sleep_cnt
.L679:

; ..\APP\src\Mcan.c	   483  		if(Mcan_NM_sleep_cnt == 8)
; ..\APP\src\Mcan.c	   484  		{
; ..\APP\src\Mcan.c	   485  			Mcan_NM_sleep_cnt=0;
; ..\APP\src\Mcan.c	   486  			Mcan_NM_sleep_flag = 1;
	ld.bu	d1,Mcan_NM_sleep_flag
.L680:
	jne	d15,d2,.L23
.L681:
	add	d0,#1
	extr.u	d0,d0,#0,#8
.L682:
	mov	d15,#8
.L683:
	jne	d15,d0,.L24
.L684:
	mov	d0,#0
.L685:
	mov	d1,#1
	j	.L25
.L23:

; ..\APP\src\Mcan.c	   487  		}
; ..\APP\src\Mcan.c	   488  	}
; ..\APP\src\Mcan.c	   489  	else if (readStatus_440 == IfxMultican_Status_newData)
	mov	d15,#256
.L686:
	jne	d15,d2,.L26
.L687:

; ..\APP\src\Mcan.c	   490  	{
; ..\APP\src\Mcan.c	   491  		Mcan_NM_sleep_cnt = 0;
	mov	d0,#0
.L688:

; ..\APP\src\Mcan.c	   492  		Mcan_NM_sleep_flag = 0;
	mov	d1,d0
.L26:
.L25:
.L24:

; ..\APP\src\Mcan.c	   493  	}
; ..\APP\src\Mcan.c	   494  
; ..\APP\src\Mcan.c	   495  }
	st.b	Mcan_NM_sleep_flag,d1
	st.b	Mcan_NM_sleep_cnt,d0
	ret
.L362:
	
__Recieve_Mcan_NM_function_end:
	.size	Recieve_Mcan_NM,__Recieve_Mcan_NM_function_end-Recieve_Mcan_NM
.L128:
	; End of function
	
	.sdecl	'.text.Mcan.Receive_Mcan_1000ms',code,cluster('Receive_Mcan_1000ms')
	.sect	'.text.Mcan.Receive_Mcan_1000ms'
	.align	2
	
	.global	Receive_Mcan_1000ms

; ..\APP\src\Mcan.c	   496  
; ..\APP\src\Mcan.c	   497  void Receive_Mcan_1000ms(void)
; Function Receive_Mcan_1000ms
.L56:
Receive_Mcan_1000ms:	.type	func

; ..\APP\src\Mcan.c	   498  {
; ..\APP\src\Mcan.c	   499  	int i = 0;
; ..\APP\src\Mcan.c	   500  
; ..\APP\src\Mcan.c	   501      //while (!IfxMultican_Can_MsgObj_isRxPending(&g_MulticanBasic.drivers.mcan_DF_RX_MsgObj))
; ..\APP\src\Mcan.c	   502      {
; ..\APP\src\Mcan.c	   503      }
; ..\APP\src\Mcan.c	   504      IfxMultican_Status  readStatus_12f = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_12f_rx_MsgObj, &Mcan_msg_12F);
	movh.a	a12,#@his(Mcan_msg_12F)
	lea	a12,[a12]@los(Mcan_msg_12F)
.L615:
	movh.a	a13,#@his(g_MulticanBasic)
	lea	a13,[a13]@los(g_MulticanBasic)
.L616:
	lea	a4,[a13]180
.L617:
	mov.aa	a5,a12
	call	IfxMultican_Can_MsgObj_readMessage
.L618:

; ..\APP\src\Mcan.c	   505  
; ..\APP\src\Mcan.c	   506      for(i=0; i<=3;i++)
; ..\APP\src\Mcan.c	   507      {
; ..\APP\src\Mcan.c	   508      	g_spi_msg.spi_data_tx[14+i] = (Mcan_msg_12F.data[0]&(0xFF<<(i*8)))>>i*8;
	mov	d0,#0
	movh.a	a15,#@his(g_spi_msg)
.L398:
	lea	a15,[a15]@los(g_spi_msg)
.L619:
	lea	a2,[a15]14
.L620:
	mov.a	a4,#3
.L27:
	sha	d2,d0,#3
.L621:
	ld.w	d1,[a12]6
.L622:
	fcall	.cocofun_13
.L399:
	add	d0,#1
	st.b	[a2+],d1
	loop	a4,.L27
.L400:

; ..\APP\src\Mcan.c	   509      }
; ..\APP\src\Mcan.c	   510      for(i=0; i<=3;i++)
; ..\APP\src\Mcan.c	   511      {
; ..\APP\src\Mcan.c	   512      	g_spi_msg.spi_data_tx[18+i] = (Mcan_msg_12F.data[1]&(0xFF<<(i*8)))>>i*8;
	mov	d0,#0
	lea	a15,[a15]18
.L623:
	mov.a	a2,#3
.L28:
	sha	d2,d0,#3
.L624:
	ld.w	d1,[a12]10
.L625:
	fcall	.cocofun_13
.L626:
	add	d0,#1
	st.b	[a15+],d1
	loop	a2,.L28
.L351:

; ..\APP\src\Mcan.c	   513      }
; ..\APP\src\Mcan.c	   514  
; ..\APP\src\Mcan.c	   515      IfxMultican_Status  readStatus_18B = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_18B_Rx_MsgObj, &Mcan_msg_18B);
	movh.a	a15,#@his(Mcan_msg_18B)
	lea	a15,[a15]@los(Mcan_msg_18B)
.L627:
	lea	a4,[a13]212
.L628:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_readMessage
.L401:

; ..\APP\src\Mcan.c	   516      gu8_GW_Profile = (uint8)(Mcan_msg_18B.data[0] & 0xf);
	ld.w	d15,[a15]6
.L353:

; ..\APP\src\Mcan.c	   517  
; ..\APP\src\Mcan.c	   518      IfxMultican_Status  readStatus_173 = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_173_Rx_MsgObj, &Mcan_msg_173);
	movh.a	a15,#@his(Mcan_msg_173)
.L354:
	and	d15,#15
	lea	a15,[a15]@los(Mcan_msg_173)
.L629:
	st.b	gu8_GW_Profile,d15
.L355:
	lea	a4,[a13]228
.L630:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_readMessage
.L631:

; ..\APP\src\Mcan.c	   519      gu8_HU_Profile = (uint8)((Mcan_msg_173.data[1] & 0xf000)>>12);
	ld.w	d15,[a15]10
.L632:
	sh	d15,d15,#-12
.L633:
	and	d15,#15
	st.b	gu8_HU_Profile,d15
.L634:

; ..\APP\src\Mcan.c	   520  
; ..\APP\src\Mcan.c	   521  
; ..\APP\src\Mcan.c	   522  }
	ret
.L348:
	
__Receive_Mcan_1000ms_function_end:
	.size	Receive_Mcan_1000ms,__Receive_Mcan_1000ms_function_end-Receive_Mcan_1000ms
.L108:
	; End of function
	
	.sdecl	'.text.Mcan..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.Mcan..cocofun_13'
	.align	2
; Function .cocofun_13
.L58:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	mov	d15,#255
.L757:
	sha	d15,d15,d2
.L758:
	and	d1,d15
.L759:
	rsub	d2,#0
.L760:
	sh	d1,d1,d2
	fret
.L173:
	; End of function
	.sdecl	'.text.Mcan.Transmit_Mcan_10ms',code,cluster('Transmit_Mcan_10ms')
	.sect	'.text.Mcan.Transmit_Mcan_10ms'
	.align	2
	
	.global	Transmit_Mcan_10ms

; ..\APP\src\Mcan.c	   523  
; ..\APP\src\Mcan.c	   524  
; ..\APP\src\Mcan.c	   525  uint8 stat_temp=0;
; ..\APP\src\Mcan.c	   526  
; ..\APP\src\Mcan.c	   527  void Transmit_Mcan_10ms(void)
; Function Transmit_Mcan_10ms
Transmit_Mcan_10ms:	.type	func

; ..\APP\src\Mcan.c	   528  {
; ..\APP\src\Mcan.c	   529  //
; ..\APP\src\Mcan.c	   530  //	Mcan_msg mcan_msg;
; ..\APP\src\Mcan.c	   531  //
; ..\APP\src\Mcan.c	   532  //	mcan_msg.byte4 = Mcan_msg_45D.data[0];
; ..\APP\src\Mcan.c	   533  //	mcan_msg.nm_dvrs.NMCommandCode_DVRS = 2;
; ..\APP\src\Mcan.c	   534  //	mcan_msg.nm_dvrs.NMSleepFlag_DVRS = 0;
; ..\APP\src\Mcan.c	   535  //	mcan_msg.nm_dvrs.Destination_Dvrs = 0x40;
; ..\APP\src\Mcan.c	   536  //	Mcan_msg_45D.data[0] = mcan_msg.byte4;
; ..\APP\src\Mcan.c	   537      while (IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_45D_Tx_MsgObj, &Mcan_msg_45D) == IfxMultican_Status_notSentBusy)
.L29:
	fcall	.cocofun_12
.L639:
	call	IfxMultican_Can_MsgObj_sendMessage
.L640:
	mov	d15,#32
.L641:
	jeq	d15,d2,.L29
.L642:

; ..\APP\src\Mcan.c	   538      {}
; ..\APP\src\Mcan.c	   539  	//IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_45D_Tx_MsgObj, &Mcan_msg_45D);
; ..\APP\src\Mcan.c	   540  
; ..\APP\src\Mcan.c	   541  
; ..\APP\src\Mcan.c	   542  }
	ret
.L356:
	
__Transmit_Mcan_10ms_function_end:
	.size	Transmit_Mcan_10ms,__Transmit_Mcan_10ms_function_end-Transmit_Mcan_10ms
.L113:
	; End of function
	
	.sdecl	'.text.Mcan..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.Mcan..cocofun_12'
	.align	2
; Function .cocofun_12
.L61:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	movh.a	a15,#@his(g_MulticanBasic+164)
.L750:
	lea	a4,[a15]@los(g_MulticanBasic+164)
.L751:
	movh.a	a5,#@his(Mcan_msg_45D)
	lea	a5,[a5]@los(Mcan_msg_45D)
.L752:
	fret
.L168:
	; End of function
	.sdecl	'.text.Mcan.Transmit_Mcan_200ms',code,cluster('Transmit_Mcan_200ms')
	.sect	'.text.Mcan.Transmit_Mcan_200ms'
	.align	2
	
	.global	Transmit_Mcan_200ms

; ..\APP\src\Mcan.c	   543  void Transmit_Mcan_200ms(void)
; Function Transmit_Mcan_200ms
.L63:
Transmit_Mcan_200ms:	.type	func

; ..\APP\src\Mcan.c	   544  {
; ..\APP\src\Mcan.c	   545  //    while (IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_13f_Tx_MsgObj, &Mcan_msg_13F) == IfxMultican_Status_notSentBusy)
; ..\APP\src\Mcan.c	   546  //    {
; ..\APP\src\Mcan.c	   547  //    }
; ..\APP\src\Mcan.c	   548  
; ..\APP\src\Mcan.c	   549  	Mcan_msg mcan_msg;
; ..\APP\src\Mcan.c	   550  
; ..\APP\src\Mcan.c	   551  //	mcan_msg.byte4 = Mcan_msg_13F.data[0];
; ..\APP\src\Mcan.c	   552  //	mcan_msg.Dvrs_hu_pe_low.Display = g_spi_msg.spi_data_rx[3]&0x0f;
; ..\APP\src\Mcan.c	   553  //	//mcan_msg.Dvrs_hu_pe_low.Display = 0x01;
; ..\APP\src\Mcan.c	   554  //
; ..\APP\src\Mcan.c	   555  //	Mcan_msg_13F.data[0] = mcan_msg.byte4;
; ..\APP\src\Mcan.c	   556  //
; ..\APP\src\Mcan.c	   557  //	gu8_DVRS_Display = mcan_msg.Dvrs_hu_pe_low.Display;
; ..\APP\src\Mcan.c	   558  
; ..\APP\src\Mcan.c	   559  
; ..\APP\src\Mcan.c	   560  //	mcan_msg.byte4 = Mcan_msg_13F.data[1];
; ..\APP\src\Mcan.c	   561  //	mcan_msg.Dvrs_hu_pe_high.Status = 0;
; ..\APP\src\Mcan.c	   562  //	Mcan_msg_13F.data[1] = mcan_msg.byte4;
; ..\APP\src\Mcan.c	   563  
; ..\APP\src\Mcan.c	   564  	Mcan_msg_13F.data[0] = g_spi_msg.spi_data_rx[7]>>24 | g_spi_msg.spi_data_rx[6]>>16 | g_spi_msg.spi_data_rx[5]>>8 | g_spi_msg.spi_data_rx[4] ;
	movh.a	a15,#@his(g_spi_msg)
.L647:
	movh.a	a5,#@his(Mcan_msg_13F)
.L648:
	lea	a15,[a15]@los(g_spi_msg)
.L649:
	lea	a5,[a5]@los(Mcan_msg_13F)
.L650:
	mov.aa	a2,a5
.L651:
	ld.bu	d15,[a15]20
.L652:
	st.w	[+a2]6,d15
.L653:

; ..\APP\src\Mcan.c	   565  	Mcan_msg_13F.data[1] = g_spi_msg.spi_data_rx[8];
	ld.bu	d15,[a15]24
.L654:
	st.w	[a5]10,d15
.L655:

; ..\APP\src\Mcan.c	   566  
; ..\APP\src\Mcan.c	   567  	mcan_msg.byte4 = Mcan_msg_13F.data[0];
; ..\APP\src\Mcan.c	   568  	gu8_DVRS_Display = mcan_msg.Dvrs_hu_pe_low.Display;
; ..\APP\src\Mcan.c	   569  
; ..\APP\src\Mcan.c	   570  	//gu8_SOC_MCU_PRK_Setting = mcan_msg.Dvrs_hu_pe_low.Rec_Normal_Prk;
; ..\APP\src\Mcan.c	   571  
; ..\APP\src\Mcan.c	   572  
; ..\APP\src\Mcan.c	   573  
; ..\APP\src\Mcan.c	   574  	IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_13f_Tx_MsgObj, &Mcan_msg_13F);
	movh.a	a15,#@his(g_MulticanBasic+148)
.L656:
	ld.w	d15,[a2]
.L657:
	lea	a4,[a15]@los(g_MulticanBasic+148)
.L658:
	extr.u	d15,d15,#0,#4
	st.b	gu8_DVRS_Display,d15
.L659:
	j	IfxMultican_Can_MsgObj_sendMessage
.L358:
	
__Transmit_Mcan_200ms_function_end:
	.size	Transmit_Mcan_200ms,__Transmit_Mcan_200ms_function_end-Transmit_Mcan_200ms
.L118:
	; End of function
	
	.sdecl	'.text.Mcan.init_NM_DVRS',code,cluster('init_NM_DVRS')
	.sect	'.text.Mcan.init_NM_DVRS'
	.align	2
	
	.global	init_NM_DVRS

; ..\APP\src\Mcan.c	   575  }
; ..\APP\src\Mcan.c	   576  
; ..\APP\src\Mcan.c	   577  void init_NM_DVRS(void)
; Function init_NM_DVRS
.L65:
init_NM_DVRS:	.type	func

; ..\APP\src\Mcan.c	   578  {
; ..\APP\src\Mcan.c	   579  
; ..\APP\src\Mcan.c	   580  	mcan_NM_DVRS.nm_dvrs.NMCommandCode_DVRS = 2;
	lea	a15,mcan_NM_DVRS
.L716:
	mov.aa	a2,a15
	ld.bu	d15,[+a2]1
.L717:
	insert	d15,d15,#2,#0,#3
	st.b	[a2],d15
.L718:

; ..\APP\src\Mcan.c	   581  	mcan_NM_DVRS.nm_dvrs.Destination_Dvrs = 0x40;
	mov	d15,#64
	st.b	[a15],d15
.L719:

; ..\APP\src\Mcan.c	   582  //	mcan_NM_DVRS.nm_dvrs.NMSleepFlag_DVRS = 0x01;
; ..\APP\src\Mcan.c	   583  	Mcan_msg_45D.data[0]  = mcan_NM_DVRS.byte4;
	movh.a	a2,#@his(Mcan_msg_45D+6)
.L720:
	ld.w	d15,[a15]
.L721:
	st.w	[a2]@los(Mcan_msg_45D+6),d15
.L722:

; ..\APP\src\Mcan.c	   584  
; ..\APP\src\Mcan.c	   585  }
	ret
.L378:
	
__init_NM_DVRS_function_end:
	.size	init_NM_DVRS,__init_NM_DVRS_function_end-init_NM_DVRS
.L148:
	; End of function
	
	.sdecl	'.text.Mcan.check_NM_CGW',code,cluster('check_NM_CGW')
	.sect	'.text.Mcan.check_NM_CGW'
	.align	2
	
	.global	check_NM_CGW

; ..\APP\src\Mcan.c	   586  
; ..\APP\src\Mcan.c	   587  void check_NM_CGW(void)
; Function check_NM_CGW
.L67:
check_NM_CGW:	.type	func

; ..\APP\src\Mcan.c	   588  {
; ..\APP\src\Mcan.c	   589  	Mcan_msg mcan_msg;
; ..\APP\src\Mcan.c	   590  
; ..\APP\src\Mcan.c	   591  //	while (!IfxMultican_Can_MsgObj_isRxPending(&g_MulticanBasic.drivers.mcan_455_Rx_MsgObj))
; ..\APP\src\Mcan.c	   592  //	{
; ..\APP\src\Mcan.c	   593  //	}
; ..\APP\src\Mcan.c	   594  	IfxMultican_Status readStatus_455 = IfxMultican_Can_MsgObj_readMessage(&g_MulticanBasic.drivers.mcan_455_Rx_MsgObj, &Mcan_msg_455);
	movh.a	a15,#@his(Mcan_msg_455)
	lea	a15,[a15]@los(Mcan_msg_455)
.L693:
	movh.a	a2,#@his(g_MulticanBasic+276)
.L694:
	lea	a4,[a2]@los(g_MulticanBasic+276)
.L695:
	mov.aa	a5,a15
	call	IfxMultican_Can_MsgObj_readMessage
.L696:

; ..\APP\src\Mcan.c	   595  
; ..\APP\src\Mcan.c	   596  	mcan_msg.byte4 = Mcan_msg_455.data[0];
	ld.w	d15,[a15]6
.L697:

; ..\APP\src\Mcan.c	   597  	gu8_NM_CGW_Sleep_flag = mcan_msg.nm_dvrs.NMSleepFlag_DVRS;
; ..\APP\src\Mcan.c	   598  	gu8_NM_CGW_Dest = mcan_msg.nm_dvrs.Destination_Dvrs;
	st.b	gu8_NM_CGW_Dest,d15
.L698:
	extr.u	d0,d15,#12,#2
	st.b	gu8_NM_CGW_Sleep_flag,d0
.L699:

; ..\APP\src\Mcan.c	   599  
; ..\APP\src\Mcan.c	   600  
; ..\APP\src\Mcan.c	   601  }
	ret
.L363:
	
__check_NM_CGW_function_end:
	.size	check_NM_CGW,__check_NM_CGW_function_end-check_NM_CGW
.L133:
	; End of function
	
	.sdecl	'.text.Mcan.Transmit_NM_DVRS',code,cluster('Transmit_NM_DVRS')
	.sect	'.text.Mcan.Transmit_NM_DVRS'
	.align	2
	
	.global	Transmit_NM_DVRS

; ..\APP\src\Mcan.c	   602  void Transmit_NM_DVRS(void)
; Function Transmit_NM_DVRS
.L69:
Transmit_NM_DVRS:	.type	func

; ..\APP\src\Mcan.c	   603  {
; ..\APP\src\Mcan.c	   604  
; ..\APP\src\Mcan.c	   605  //    while (IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_45D_Tx_MsgObj, &Mcan_msg_45D) == IfxMultican_Status_notSentBusy)
; ..\APP\src\Mcan.c	   606  //    {}
; ..\APP\src\Mcan.c	   607  	if(gu8_NM_DVRS_go_flag == 1)
	ld.bu	d15,gu8_NM_DVRS_go_flag
.L704:
	jne	d15,#1,.L30
.L705:

; ..\APP\src\Mcan.c	   608  	{
; ..\APP\src\Mcan.c	   609  		IfxMultican_Can_MsgObj_sendMessage(&g_MulticanBasic.drivers.mcan_45D_Tx_MsgObj, &Mcan_msg_45D);
	fcall	.cocofun_12
.L706:
	j	IfxMultican_Can_MsgObj_sendMessage
.L30:

; ..\APP\src\Mcan.c	   610  	}
; ..\APP\src\Mcan.c	   611  }
	ret
.L365:
	
__Transmit_NM_DVRS_function_end:
	.size	Transmit_NM_DVRS,__Transmit_NM_DVRS_function_end-Transmit_NM_DVRS
.L138:
	; End of function
	
	.sdecl	'.bss.Mcan.g_MulticanBasic',data,cluster('g_MulticanBasic')
	.sect	'.bss.Mcan.g_MulticanBasic'
	.global	g_MulticanBasic
	.align	4
g_MulticanBasic:	.type	object
	.size	g_MulticanBasic,308
	.space	308
	.sdecl	'.zdata.Mcan.can_sleep_count',data,cluster('can_sleep_count')
	.sect	'.zdata.Mcan.can_sleep_count'
	.global	can_sleep_count
	.align	2
can_sleep_count:	.type	object
	.size	can_sleep_count,4
	.space	4
	.sdecl	'.zdata.Mcan.gu8_HU_Display',data,cluster('gu8_HU_Display')
	.sect	'.zdata.Mcan.gu8_HU_Display'
	.global	gu8_HU_Display
gu8_HU_Display:	.type	object
	.size	gu8_HU_Display,1
	.space	1
	.sdecl	'.zdata.Mcan.gu8_DVRS_Display',data,cluster('gu8_DVRS_Display')
	.sect	'.zdata.Mcan.gu8_DVRS_Display'
	.global	gu8_DVRS_Display
gu8_DVRS_Display:	.type	object
	.size	gu8_DVRS_Display,1
	.space	1
	.sdecl	'.zdata.Mcan.gu8_GW_Profile',data,cluster('gu8_GW_Profile')
	.sect	'.zdata.Mcan.gu8_GW_Profile'
	.global	gu8_GW_Profile
gu8_GW_Profile:	.type	object
	.size	gu8_GW_Profile,1
	.space	1
	.sdecl	'.zdata.Mcan.gu8_HU_Profile',data,cluster('gu8_HU_Profile')
	.sect	'.zdata.Mcan.gu8_HU_Profile'
	.global	gu8_HU_Profile
gu8_HU_Profile:	.type	object
	.size	gu8_HU_Profile,1
	.space	1
	.sdecl	'.zdata.Mcan.gu8_ENG_STAT',data,cluster('gu8_ENG_STAT')
	.sect	'.zdata.Mcan.gu8_ENG_STAT'
	.global	gu8_ENG_STAT
gu8_ENG_STAT:	.type	object
	.size	gu8_ENG_STAT,1
	.space	1
	.sdecl	'.zdata.Mcan.stmSfr2',data,cluster('stmSfr2')
	.sect	'.zdata.Mcan.stmSfr2'
	.global	stmSfr2
	.align	4
stmSfr2:	.type	object
	.size	stmSfr2,4
	.word	-268435456
	.sdecl	'.bss.Mcan.Mcan_msg_DF',data,cluster('Mcan_msg_DF')
	.sect	'.bss.Mcan.Mcan_msg_DF'
	.global	Mcan_msg_DF
	.align	4
Mcan_msg_DF:	.type	object
	.size	Mcan_msg_DF,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_12F',data,cluster('Mcan_msg_12F')
	.sect	'.bss.Mcan.Mcan_msg_12F'
	.global	Mcan_msg_12F
	.align	4
Mcan_msg_12F:	.type	object
	.size	Mcan_msg_12F,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_13F',data,cluster('Mcan_msg_13F')
	.sect	'.bss.Mcan.Mcan_msg_13F'
	.global	Mcan_msg_13F
	.align	4
Mcan_msg_13F:	.type	object
	.size	Mcan_msg_13F,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_45D',data,cluster('Mcan_msg_45D')
	.sect	'.bss.Mcan.Mcan_msg_45D'
	.global	Mcan_msg_45D
	.align	4
Mcan_msg_45D:	.type	object
	.size	Mcan_msg_45D,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_18B',data,cluster('Mcan_msg_18B')
	.sect	'.bss.Mcan.Mcan_msg_18B'
	.global	Mcan_msg_18B
	.align	4
Mcan_msg_18B:	.type	object
	.size	Mcan_msg_18B,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_173',data,cluster('Mcan_msg_173')
	.sect	'.bss.Mcan.Mcan_msg_173'
	.global	Mcan_msg_173
	.align	4
Mcan_msg_173:	.type	object
	.size	Mcan_msg_173,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_169',data,cluster('Mcan_msg_169')
	.sect	'.bss.Mcan.Mcan_msg_169'
	.global	Mcan_msg_169
	.align	4
Mcan_msg_169:	.type	object
	.size	Mcan_msg_169,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_440',data,cluster('Mcan_msg_440')
	.sect	'.bss.Mcan.Mcan_msg_440'
	.global	Mcan_msg_440
	.align	4
Mcan_msg_440:	.type	object
	.size	Mcan_msg_440,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_455',data,cluster('Mcan_msg_455')
	.sect	'.bss.Mcan.Mcan_msg_455'
	.global	Mcan_msg_455
	.align	4
Mcan_msg_455:	.type	object
	.size	Mcan_msg_455,16
	.space	16
	.sdecl	'.bss.Mcan.Mcan_msg_102',data,cluster('Mcan_msg_102')
	.sect	'.bss.Mcan.Mcan_msg_102'
	.global	Mcan_msg_102
	.align	4
Mcan_msg_102:	.type	object
	.size	Mcan_msg_102,16
	.space	16
	.sdecl	'.zdata.Mcan.scu2',data,cluster('scu2')
	.sect	'.zdata.Mcan.scu2'
	.global	scu2
	.align	4
scu2:	.type	object
	.size	scu2,4
	.word	-268214272
	.sdecl	'.zdata.Mcan.smu2',data,cluster('smu2')
	.sect	'.zdata.Mcan.smu2'
	.global	smu2
	.align	4
smu2:	.type	object
	.size	smu2,4
	.word	-268212224
	.sdecl	'.zbss.Mcan.readStatus_440',data,cluster('readStatus_440')
	.sect	'.zbss.Mcan.readStatus_440'
	.global	readStatus_440
	.align	2
readStatus_440:	.type	object
	.size	readStatus_440,2
	.space	2
	.sdecl	'.zdata.Mcan.Mcan_NM_sleep_cnt',data,cluster('Mcan_NM_sleep_cnt')
	.sect	'.zdata.Mcan.Mcan_NM_sleep_cnt'
	.global	Mcan_NM_sleep_cnt
Mcan_NM_sleep_cnt:	.type	object
	.size	Mcan_NM_sleep_cnt,1
	.space	1
	.sdecl	'.zdata.Mcan.Mcan_NM_sleep_flag',data,cluster('Mcan_NM_sleep_flag')
	.sect	'.zdata.Mcan.Mcan_NM_sleep_flag'
	.global	Mcan_NM_sleep_flag
Mcan_NM_sleep_flag:	.type	object
	.size	Mcan_NM_sleep_flag,1
	.space	1
	.sdecl	'.zbss.Mcan.mcan_NM_DVRS',data,cluster('mcan_NM_DVRS')
	.sect	'.zbss.Mcan.mcan_NM_DVRS'
	.global	mcan_NM_DVRS
	.align	2
mcan_NM_DVRS:	.type	object
	.size	mcan_NM_DVRS,6
	.space	6
	.sdecl	'.zdata.Mcan.gu8_NM_CGW_Sleep_flag',data,cluster('gu8_NM_CGW_Sleep_flag')
	.sect	'.zdata.Mcan.gu8_NM_CGW_Sleep_flag'
	.global	gu8_NM_CGW_Sleep_flag
gu8_NM_CGW_Sleep_flag:	.type	object
	.size	gu8_NM_CGW_Sleep_flag,1
	.byte	255
	.sdecl	'.zdata.Mcan.gu8_NM_CGW_Dest',data,cluster('gu8_NM_CGW_Dest')
	.sect	'.zdata.Mcan.gu8_NM_CGW_Dest'
	.global	gu8_NM_CGW_Dest
gu8_NM_CGW_Dest:	.type	object
	.size	gu8_NM_CGW_Dest,1
	.byte	255
	.sdecl	'.zdata.Mcan.gu8_NM_DVRS_go_flag',data,cluster('gu8_NM_DVRS_go_flag')
	.sect	'.zdata.Mcan.gu8_NM_DVRS_go_flag'
	.global	gu8_NM_DVRS_go_flag
gu8_NM_DVRS_go_flag:	.type	object
	.size	gu8_NM_DVRS_go_flag,1
	.space	1
	.sdecl	'.zdata.Mcan.stat_temp',data,cluster('stat_temp')
	.sect	'.zdata.Mcan.stat_temp'
	.global	stat_temp
stat_temp:	.type	object
	.size	stat_temp,1
	.space	1
	.calls	'init_Mcan','IfxMultican_Can_initModuleConfig'
	.calls	'init_Mcan','IfxMultican_Can_initModule'
	.calls	'init_Mcan','IfxMultican_Can_Node_initConfig'
	.calls	'init_Mcan','IfxMultican_Can_Node_init'
	.calls	'init_Mcan','IfxMultican_Can_MsgObj_initConfig'
	.calls	'init_Mcan','IfxMultican_Can_MsgObj_init'
	.calls	'Transmit_Mcan','IfxMultican_Can_MsgObj_sendMessage'
	.calls	'Trans_Mcan_13F','IfxMultican_Can_MsgObj_isRxPending'
	.calls	'Trans_Mcan_13F','IfxMultican_Can_MsgObj_readMessage'
	.calls	'Trans_Mcan_13F','IfxMultican_Can_MsgObj_sendMessage'
	.calls	'Receive_Mcan_10ms','IfxMultican_Can_MsgObj_isRxPending'
	.calls	'Receive_Mcan_10ms','IfxMultican_Can_MsgObj_readMessage'
	.calls	'Recieve_Mcan_200ms','IfxMultican_Can_MsgObj_readMessage'
	.calls	'Recieve_Mcan_NM','IfxMultican_Can_MsgObj_isRxPending'
	.calls	'Recieve_Mcan_NM','IfxMultican_Can_MsgObj_readMessage'
	.calls	'Receive_Mcan_1000ms','IfxMultican_Can_MsgObj_readMessage'
	.calls	'Transmit_Mcan_10ms','IfxMultican_Can_MsgObj_sendMessage'
	.calls	'Transmit_Mcan_200ms','IfxMultican_Can_MsgObj_sendMessage'
	.calls	'check_NM_CGW','IfxMultican_Can_MsgObj_readMessage'
	.calls	'Transmit_NM_DVRS','IfxMultican_Can_MsgObj_sendMessage'
	.calls	'Trans_Mcan_13F','.cocofun_10'
	.calls	'Trans_Mcan_13F','.cocofun_11'
	.calls	'init_Mcan_Msg','.cocofun_9'
	.calls	'Receive_Mcan_1000ms','.cocofun_13'
	.calls	'Transmit_Mcan_10ms','.cocofun_12'
	.calls	'Transmit_NM_DVRS','.cocofun_12'
	.calls	'init_Mcan_Port','',0
	.calls	'sleep_Mcan_Trans','',0
	.calls	'init_Mcan','',200
	.calls	'Transmit_Mcan','',16
	.calls	'Trans_Mcan_13F','',64
	.calls	'.cocofun_11','',0
	.calls	'.cocofun_10','',0
	.calls	'init_Mcan_Msg','',0
	.calls	'.cocofun_9','',0
	.calls	'Receive_Mcan_10ms','',0
	.calls	'Recieve_Mcan_200ms','',0
	.calls	'Recieve_Mcan_NM','',0
	.calls	'Receive_Mcan_1000ms','',0
	.calls	'.cocofun_13','',0
	.calls	'Transmit_Mcan_10ms','',0
	.calls	'.cocofun_12','',0
	.calls	'Transmit_Mcan_200ms','',0
	.calls	'init_NM_DVRS','',0
	.calls	'check_NM_CGW','',0
	.extern	IfxMultican1_RXD2E_P20_9_IN
	.extern	IfxMultican1_TXD2_P20_10_OUT
	.extern	IfxMultican_Can_initModule
	.extern	IfxMultican_Can_initModuleConfig
	.extern	IfxMultican_Can_Node_init
	.extern	IfxMultican_Can_Node_initConfig
	.extern	IfxMultican_Can_MsgObj_init
	.extern	IfxMultican_Can_MsgObj_initConfig
	.extern	IfxMultican_Can_MsgObj_isRxPending
	.extern	IfxMultican_Can_MsgObj_readMessage
	.extern	IfxMultican_Can_MsgObj_sendMessage
	.extern	g_spi_msg
	.calls	'Transmit_NM_DVRS','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L71:
	.word	132846
	.half	3
	.word	.L72
	.byte	4
.L70:
	.byte	1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L73
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	195
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	169
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	201
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	201
	.byte	8
	.byte	'value',0,2,118,43
	.word	169
	.byte	3,0,4
	.byte	'unsigned int',0,4,7
.L289:
	.byte	4
	.byte	'int',0,4,5
.L379:
	.byte	4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'ECC',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'SRR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	322
	.byte	4,2,35,0,0,13
	.word	612
	.byte	6
	.word	651
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	656
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,133,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	704
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	704
	.byte	16,0,2,35,0,0,11,6,187,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	720
	.byte	4,2,35,0,0
.L346:
	.byte	4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,142,8,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,6,195,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	878
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,157,8,16,4,10
	.byte	'AE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,6,203,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1122
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,243,13,25,12,12
	.byte	'CON0',0
	.word	816
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1082
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1313
	.byte	4,2,35,8,0,13
	.word	1353
	.byte	6
	.word	1416
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1421
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	856
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1421
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	856
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	856
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1421
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,8,231,2,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,239,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1651
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,8,129,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,191,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1967
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,231,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2538
	.byte	4,2,35,0,0,14,4
	.word	305
	.byte	15,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,247,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2666
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,135,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2881
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,143,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3096
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	305
	.byte	5,0,2,35,3,0,11,8,255,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3313
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,239,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3533
	.byte	4,2,35,0,0,14,24
	.word	305
	.byte	15,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,8,160,3,16,4,10
	.byte	'PD0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,135,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3856
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,8,181,3,16,4,10
	.byte	'PD8',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,143,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4160
	.byte	4,2,35,0,0,14,8
	.word	305
	.byte	15,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,223,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4485
	.byte	4,2,35,0,0,14,12
	.word	305
	.byte	15,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,8,138,3,16,4,10
	.byte	'PDIS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,255,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4825
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,8,253,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	856
	.byte	6,7,2,35,0,10
	.byte	'SEL9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'SEL10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,247,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,8,166,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,8,207,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5402
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,8,187,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,11,8,223,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5549
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,8,198,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	20,0,2,35,0,0,11,8,231,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5718
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,8,176,2,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,215,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5890
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,8,192,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,8,159,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6065
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,8,213,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,8,175,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6239
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,8,224,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,8,183,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6413
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,8,203,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,167,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6589
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,8,209,2,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,8,199,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6745
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,8,235,1,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,151,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7078
	.byte	4,2,35,0,0,14,96
	.word	305
	.byte	15,95,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,8,215,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7435
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,8,207,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7522
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,8,159,5,25,128,2,12
	.byte	'OUT',0
	.word	1927
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2498
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	2617
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	2841
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3056
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3273
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3493
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	2657
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	3807
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	3847
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4120
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4436
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4476
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	4776
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	4816
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5151
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5362
	.byte	4,2,35,100,12
	.byte	'reserved_64',0
	.word	4476
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5509
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	5678
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	5850
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6025
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6199
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6373
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6549
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	6705
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7038
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7386
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	7426
	.byte	96,3,35,152,1,12
	.byte	'ACCEN1',0
	.word	7482
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8049
	.byte	4,3,35,252,1,0,13
	.word	8089
	.byte	6
	.word	8622
.L231:
	.byte	2
	.byte	'IfxPort_setPinHigh',0,3,7,247,3,17,1,1
.L233:
	.byte	8
	.byte	'port',0,7,247,3,43
	.word	8627
.L235:
	.byte	8
	.byte	'pinIndex',0,7,247,3,55
	.word	305
.L237:
	.byte	16,3,0,0
.L367:
	.byte	2
	.byte	'IfxPort_setPinLow',0,3,7,253,3,17,1,1
.L369:
	.byte	8
	.byte	'port',0,7,253,3,42
	.word	8627
.L371:
	.byte	8
	.byte	'pinIndex',0,7,253,3,54
	.word	305
.L373:
	.byte	16,3,0,0,17,7,131,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0
.L238:
	.byte	2
	.byte	'IfxPort_setPinState',0,3,7,143,4,17,1,1
.L239:
	.byte	8
	.byte	'port',0,7,143,4,44
	.word	8627
.L241:
	.byte	8
	.byte	'pinIndex',0,7,143,4,56
	.word	305
.L243:
	.byte	8
	.byte	'action',0,7,143,4,80
	.word	8757
.L245:
	.byte	3,0,9
	.byte	'_Ifx_CAN_N_CR_Bits',0,10,172,3,16,4,10
	.byte	'INIT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TRIE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'LECIE',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ALIE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CANDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'TXDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CCE',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CALM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'SUSEN',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'FDEN',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,11,10,215,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8938
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_SR_Bits',0,10,241,3,16,4,10
	.byte	'LEC',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'TXOK',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RXOK',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ALERT',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EWRN',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'BOFF',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'LLE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'LOE',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'SUSACK',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RESI',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'FLEC',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,10,135,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_IPR_Bits',0,10,221,3,16,4,10
	.byte	'ALINP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'LECINP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'TRINP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CFCINP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'TEINP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,11,10,247,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9456
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_PCR_Bits',0,10,232,3,16,4,10
	.byte	'RXSEL',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'LBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,11,10,255,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9633
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_BTEVR_Bits',0,10,147,3,16,4,10
	.byte	'BRP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'SJW',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'DIV8',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TSEG2',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'TSEG1',0,2
	.word	856
	.byte	6,4,2,35,2,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,10,199,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9776
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_BTR_Bits',0,10,161,3,16,4,10
	.byte	'BRP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'SJW',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'TSEG1',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'TSEG2',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'DIV8',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,207,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10016
	.byte	4,2,35,0,0,11,10,129,8,5,4,12
	.byte	'BTEVR',0
	.word	9976
	.byte	4,2,35,0,12
	.byte	'BTR',0
	.word	10146
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_ECNT_Bits',0,10,188,3,16,4,10
	.byte	'REC',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'TEC',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'EWRNLVL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'LETD',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'LEINC',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	6,0,2,35,3,0,11,10,223,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10221
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_FCR_Bits',0,10,209,3,16,4,10
	.byte	'CFC',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'CFSEL',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'CFMOD',0,1
	.word	305
	.byte	2,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'CFCIE',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'CFCOV',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,239,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10394
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TCCR_Bits',0,10,130,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'TPSC',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	6,14,2,35,0,10
	.byte	'TRIGSRC',0,1
	.word	305
	.byte	3,3,2,35,2,10
	.byte	'reserved_21',0,2
	.word	856
	.byte	11,0,2,35,2,0,11,10,143,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10590
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TRTR_Bits',0,10,151,4,16,4,10
	.byte	'RELOAD',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'TEIE',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'TE',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,159,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10761
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TTTR_Bits',0,10,161,4,16,4,10
	.byte	'RELOAD',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'TXMO',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,11,10,167,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10923
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_FBTR_Bits',0,10,199,3,16,4,10
	.byte	'FBRP',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'FSJW',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'FTSEG1',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'FTSEG2',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,11,10,231,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11064
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_N_TDCR_Bits',0,10,140,4,16,4,10
	.byte	'TDCV',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'TDCO',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'TDC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,151,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11223
	.byte	4,2,35,0,0,14,192,1
	.word	305
	.byte	15,191,1,0,9
	.byte	'_Ifx_CAN_N',0,10,251,7,25,128,2,12
	.byte	'CR',0
	.word	9151
	.byte	4,2,35,0,12
	.byte	'SR',0
	.word	9416
	.byte	4,2,35,4,12
	.byte	'IPR',0
	.word	9593
	.byte	4,2,35,8,12
	.byte	'PCR',0
	.word	9736
	.byte	4,2,35,12,19
	.word	10186
	.byte	4,2,35,16,12
	.byte	'ECNT',0
	.word	10354
	.byte	4,2,35,20,12
	.byte	'FCR',0
	.word	10550
	.byte	4,2,35,24,12
	.byte	'TCCR',0
	.word	10721
	.byte	4,2,35,28,12
	.byte	'TRTR',0
	.word	10883
	.byte	4,2,35,32,12
	.byte	'TATTR',0
	.word	11024
	.byte	4,2,35,36,12
	.byte	'TBTTR',0
	.word	11024
	.byte	4,2,35,40,12
	.byte	'TCTTR',0
	.word	11024
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	4476
	.byte	8,2,35,48,12
	.byte	'FBTR',0
	.word	11183
	.byte	4,2,35,56,12
	.byte	'TDCR',0
	.word	11366
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	11406
	.byte	192,1,2,35,64,0,13
	.word	11417
	.byte	6
	.word	11666
	.byte	2
	.byte	'IfxMultican_Node_activate',0,3,9,169,10,17,1,1,8
	.byte	'hwNode',0,9,169,10,54
	.word	11671
	.byte	3,0,2
	.byte	'IfxMultican_Node_deactivate',0,3,9,175,10,17,1,1,8
	.byte	'hwNode',0,9,175,10,56
	.word	11671
	.byte	3,0,9
	.byte	'_Ifx_CAN_CLC_Bits',0,10,92,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,10,215,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11782
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_ID_Bits',0,10,111,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,231,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11938
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_FDR_Bits',0,10,102,16,4,10
	.byte	'STEP',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,223,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12059
	.byte	4,2,35,0,0,14,216,1
	.word	305
	.byte	15,215,1,0,9
	.byte	'_Ifx_CAN_OCS_Bits',0,10,170,4,16,4,10
	.byte	'TGS',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'TGB',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'TG_P',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	20,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,10,175,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12210
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_KRSTCLR_Bits',0,10,134,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,10,255,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12416
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_KRST1_Bits',0,10,127,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,10,247,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12522
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_KRST0_Bits',0,10,119,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,10,239,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12625
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_ACCEN1_Bits',0,10,86,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,10,207,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12747
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_ACCEN0_Bits',0,10,49,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,10,199,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12836
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_LIST_Bits',0,10,141,1,16,4,10
	.byte	'BEGIN',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'END',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SIZE',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'EMPTY',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,11,10,135,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13405
	.byte	4,2,35,0,0,14,64
	.word	13519
	.byte	15,15,0,9
	.byte	'_Ifx_CAN_MSPND_Bits',0,10,141,3,16,4,10
	.byte	'PND',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,10,191,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13568
	.byte	4,2,35,0,0,14,32
	.word	13610
	.byte	15,7,0,14,32
	.word	305
	.byte	15,31,0,9
	.byte	'_Ifx_CAN_MSID_Bits',0,10,128,3,16,4,10
	.byte	'INDEX',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,11,10,175,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13668
	.byte	4,2,35,0,0,14,32
	.word	13733
	.byte	15,7,0,9
	.byte	'_Ifx_CAN_MSIMASK_Bits',0,10,135,3,16,4,10
	.byte	'IM',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,10,183,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13782
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_PANCTR_Bits',0,10,183,4,16,4,10
	.byte	'PANCMD',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RBUSY',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'PANAR1',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'PANAR2',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,183,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13865
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MCR_Bits',0,10,151,1,16,4,10
	.byte	'CLKSEL',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'DXCM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	3,4,2,35,1,10
	.byte	'MPSEL',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,143,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14043
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MITR_Bits',0,10,186,1,16,4,10
	.byte	'IT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,167,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14226
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MECR_Bits',0,10,162,1,16,4,10
	.byte	'TH',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'INP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'NODE',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'ANYED',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'CAPEIE',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'DEPTH',0,1
	.word	305
	.byte	3,2,2,35,3,10
	.byte	'SOF',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,10,151,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14329
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MESTAT_Bits',0,10,177,1,16,4,10
	.byte	'CAPT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'CAPRED',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'CAPE',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,11,10,159,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14576
	.byte	4,2,35,0,0,14,40
	.word	305
	.byte	15,39,0,14,128,6
	.word	11417
	.byte	15,2,0,13
	.word	14726
	.byte	14,128,22
	.word	305
	.byte	15,255,21,0,9
	.byte	'_Ifx_CAN_MO_EDATA0_Bits',0,10,130,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,215,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14752
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_FCR_Bits',0,10,193,2,16,4,10
	.byte	'MMC',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'RXTOE',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'BRS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'FDF',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'GDFS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'IDC',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DLCC',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'DATC',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RXIE',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'TXIE',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'OVIE',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'FRREN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'RMM',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SDT',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'STT',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'DLC',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,10,143,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14883
	.byte	4,2,35,0,0,11,10,201,7,5,4,12
	.byte	'EDATA0',0
	.word	14843
	.byte	4,2,35,0,12
	.byte	'FCR',0
	.word	15252
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA1_Bits',0,10,139,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,223,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15328
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_FGPR_Bits',0,10,218,2,16,4,10
	.byte	'BOT',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'TOP',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'CUR',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'SEL',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,151,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15459
	.byte	4,2,35,0,0,11,10,207,7,5,4,12
	.byte	'EDATA1',0
	.word	15419
	.byte	4,2,35,0,12
	.byte	'FGPR',0
	.word	15548
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA2_Bits',0,10,148,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,231,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15625
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_IPR_Bits',0,10,227,2,16,4,10
	.byte	'RXINP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'TXINP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'MPN',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'CFCVAL',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,10,159,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15756
	.byte	4,2,35,0,0,11,10,213,7,5,4,12
	.byte	'EDATA2',0
	.word	15716
	.byte	4,2,35,0,12
	.byte	'IPR',0
	.word	15851
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_AMR_Bits',0,10,193,1,16,4,10
	.byte	'AM',0,4
	.word	282
	.byte	29,3,2,35,0,10
	.byte	'MIDE',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,10,175,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15927
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA3_Bits',0,10,157,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,239,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16048
	.byte	4,2,35,0,0,11,10,219,7,5,4,12
	.byte	'AMR',0
	.word	16008
	.byte	4,2,35,0,12
	.byte	'EDATA3',0
	.word	16139
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_DATAL_Bits',0,10,249,1,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,207,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16215
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA4_Bits',0,10,166,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,247,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16345
	.byte	4,2,35,0,0,11,10,225,7,5,4,12
	.byte	'DATAL',0
	.word	16305
	.byte	4,2,35,0,12
	.byte	'EDATA4',0
	.word	16436
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_DATAH_Bits',0,10,240,1,16,4,10
	.byte	'DB4',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB5',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB6',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB7',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,199,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16514
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA5_Bits',0,10,175,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,255,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16644
	.byte	4,2,35,0,0,11,10,231,7,5,4,12
	.byte	'DATAH',0
	.word	16604
	.byte	4,2,35,0,12
	.byte	'EDATA5',0
	.word	16735
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_AR_Bits',0,10,201,1,16,4,10
	.byte	'ID',0,4
	.word	282
	.byte	29,3,2,35,0,10
	.byte	'IDE',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'PRI',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,10,183,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16813
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_EDATA6_Bits',0,10,184,2,16,4,10
	.byte	'DB0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DB1',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'DB2',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'DB3',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,135,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16924
	.byte	4,2,35,0,0,11,10,237,7,5,4,12
	.byte	'AR',0
	.word	16884
	.byte	4,2,35,0,12
	.byte	'EDATA6',0
	.word	17015
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_CTR_Bits',0,10,209,1,16,4,10
	.byte	'RESRXPND',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RESTXPND',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RESRXUPD',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'RESNEWDAT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RESMSGLST',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RESMSGVAL',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RESRTSEL',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RESRXEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'RESTXRQ',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RESTXEN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RESTXEN1',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RESDIR',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SETRXPND',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SETTXPND',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'SETRXUPD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'SETNEWDAT',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'SETMSGLST',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'SETMSGVAL',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SETRTSEL',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'SETRXEN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SETTXRQ',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SETTXEN0',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'SETTXEN1',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SETDIR',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,11,10,191,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17090
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO_STAT_Bits',0,10,236,2,16,4,10
	.byte	'RXPND',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TXPND',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RXUPD',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'NEWDAT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'MSGLST',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'MSGVAL',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RTSEL',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RXEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TXRQ',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TXEN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'TXEN1',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'DIR',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'LIST',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'PPREV',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'PNEXT',0,1
	.word	305
	.byte	8,0,2,35,3,0,11,10,167,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17682
	.byte	4,2,35,0,0,11,10,243,7,5,4,12
	.byte	'CTR',0
	.word	17642
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	17964
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_CAN_MO',0,10,199,7,25,32,19
	.word	15292
	.byte	4,2,35,0,19
	.word	15588
	.byte	4,2,35,4,19
	.word	15891
	.byte	4,2,35,8,19
	.word	16179
	.byte	4,2,35,12,19
	.word	16476
	.byte	4,2,35,16,19
	.word	16775
	.byte	4,2,35,20,19
	.word	17055
	.byte	4,2,35,24,19
	.word	18004
	.byte	4,2,35,28,0,14,128,32
	.word	18038
	.byte	15,127,0,13
	.word	18129
	.byte	14,128,64
	.word	305
	.byte	15,255,63,0,9
	.byte	'_Ifx_CAN',0,10,159,8,25,128,128,1,12
	.byte	'CLC',0
	.word	11898
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	12019
	.byte	4,2,35,8,12
	.byte	'FDR',0
	.word	12159
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	12199
	.byte	216,1,2,35,16,12
	.byte	'OCS',0
	.word	12376
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	12482
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	12585
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	12707
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	12796
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	13365
	.byte	4,3,35,252,1,12
	.byte	'LIST',0
	.word	13559
	.byte	64,3,35,128,2,12
	.byte	'MSPND',0
	.word	13650
	.byte	32,3,35,192,2,12
	.byte	'reserved_160',0
	.word	13659
	.byte	32,3,35,224,2,12
	.byte	'MSID',0
	.word	13773
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	13659
	.byte	32,3,35,160,3,12
	.byte	'MSIMASK',0
	.word	13825
	.byte	4,3,35,192,3,12
	.byte	'PANCTR',0
	.word	14003
	.byte	4,3,35,196,3,12
	.byte	'MCR',0
	.word	14186
	.byte	4,3,35,200,3,12
	.byte	'MITR',0
	.word	14289
	.byte	4,3,35,204,3,12
	.byte	'MECR',0
	.word	14536
	.byte	4,3,35,208,3,12
	.byte	'MESTAT',0
	.word	14677
	.byte	4,3,35,212,3,12
	.byte	'reserved_1D8',0
	.word	14717
	.byte	40,3,35,216,3,12
	.byte	'N',0
	.word	14736
	.byte	128,6,3,35,128,4,12
	.byte	'reserved_500',0
	.word	14741
	.byte	128,22,3,35,128,10,12
	.byte	'MO',0
	.word	18139
	.byte	128,32,3,35,128,32,12
	.byte	'reserved_2000',0
	.word	18144
	.byte	128,64,3,35,128,64,0,13
	.word	18155
	.byte	6
	.word	18638
	.byte	17,11,64,9,1,18
	.byte	'IfxMultican_NodeId_none',0,127,18
	.byte	'IfxMultican_NodeId_0',0,0,18
	.byte	'IfxMultican_NodeId_1',0,1,18
	.byte	'IfxMultican_NodeId_2',0,2,0,7
	.byte	'IfxMultican_Node_getPointer',0,3,9,193,10,23
	.word	11671
	.byte	1,1,8
	.byte	'mcan',0,9,193,10,60
	.word	18643
	.byte	8
	.byte	'node',0,9,193,10,85
	.word	18648
	.byte	3,0
.L382:
	.byte	4
	.byte	'unsigned long int',0,4,7,17,9,80,9,1,18
	.byte	'IfxMultican_DataLengthCode_0',0,0,18
	.byte	'IfxMultican_DataLengthCode_1',0,1,18
	.byte	'IfxMultican_DataLengthCode_2',0,2,18
	.byte	'IfxMultican_DataLengthCode_3',0,3,18
	.byte	'IfxMultican_DataLengthCode_4',0,4,18
	.byte	'IfxMultican_DataLengthCode_5',0,5,18
	.byte	'IfxMultican_DataLengthCode_6',0,6,18
	.byte	'IfxMultican_DataLengthCode_7',0,7,18
	.byte	'IfxMultican_DataLengthCode_8',0,8,18
	.byte	'IfxMultican_DataLengthCode_12',0,9,18
	.byte	'IfxMultican_DataLengthCode_16',0,10,18
	.byte	'IfxMultican_DataLengthCode_20',0,11,18
	.byte	'IfxMultican_DataLengthCode_24',0,12,18
	.byte	'IfxMultican_DataLengthCode_32',0,13,18
	.byte	'IfxMultican_DataLengthCode_48',0,14,18
	.byte	'IfxMultican_DataLengthCode_64',0,15,0,14,8
	.word	18819
	.byte	15,1,0
.L271:
	.byte	20,9,214,1,9,16,12
	.byte	'id',0
	.word	18819
	.byte	4,2,35,0,12
	.byte	'lengthCode',0
	.word	18840
	.byte	1,2,35,4,12
	.byte	'data',0
	.word	19349
	.byte	8,2,35,6,12
	.byte	'fastBitRate',0
	.word	305
	.byte	1,2,35,14,0,6
	.word	19358
.L273:
	.byte	2
	.byte	'IfxMultican_Message_init',0,3,9,164,8,17,1,1
.L275:
	.byte	8
	.byte	'msg',0,9,164,8,63
	.word	19432
.L277:
	.byte	8
	.byte	'id',0,9,164,8,75
	.word	18819
.L279:
	.byte	8
	.byte	'dataLow',0,9,164,8,86
	.word	18819
.L281:
	.byte	8
	.byte	'dataHigh',0,9,164,8,102
	.word	18819
.L283:
	.byte	8
	.byte	'lengthCode',0,9,164,8,139,1
	.word	18840
.L285:
	.byte	3,0,13
	.word	18038
	.byte	6
	.word	19553
	.byte	2
	.byte	'IfxMultican_MsgObj_clearRxPending',0,3,9,198,8,17,1,1,8
	.byte	'hwObj',0,9,198,8,63
	.word	19558
	.byte	3,0,2
	.byte	'IfxMultican_MsgObj_clearTxPending',0,3,9,204,8,17,1,1,8
	.byte	'hwObj',0,9,204,8,63
	.word	19558
	.byte	3,0,4
	.byte	'long int',0,4,5,7
	.byte	'IfxMultican_MsgObj_getPointer',0,3,9,236,8,24
	.word	19558
	.byte	1,1,8
	.byte	'mcan',0,9,236,8,63
	.word	18643
	.byte	8
	.byte	'msgObjId',0,9,236,8,90
	.word	19681
	.byte	3,0,17,13,83,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_none',0,1,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,12,170,5,31
	.word	19769
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,12,185,4,20
	.word	305
	.byte	1,1,3,0,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,12,190,5,19
	.word	18819
	.byte	1,1,8
	.byte	'address',0,12,190,5,55
	.word	18819
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,12,198,5,20
	.word	305
	.byte	1,1,8
	.byte	'address',0,12,198,5,70
	.word	18819
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,12,153,7,17,1,1,8
	.byte	'address',0,12,153,7,56
	.word	18819
	.byte	8
	.byte	'count',0,12,153,7,72
	.word	18819
	.byte	3,0,4
	.byte	'float',0,4,4,7
	.byte	'IfxScuCcu_getStmFrequency',0,3,14,175,8,20
	.word	20108
	.byte	1,1,3,0,9
	.byte	'_Ifx_STM_CLC_Bits',0,16,100,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,16,149,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20157
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ID_Bits',0,16,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,11,16,181,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20313
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0_Bits',0,16,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,229,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20435
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM1_Bits',0,16,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,245,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20520
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM2_Bits',0,16,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,253,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20605
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM3_Bits',0,16,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,133,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20690
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM4_Bits',0,16,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,141,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20776
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM5_Bits',0,16,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,149,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20862
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM6_Bits',0,16,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,157,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20948
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAP_Bits',0,16,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,133,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21034
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CMP_Bits',0,16,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,165,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21121
	.byte	4,2,35,0,0,14,8
	.word	21163
	.byte	15,1,0,9
	.byte	'_Ifx_STM_CMCON_Bits',0,16,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	305
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	3,0,2,35,3,0,11,16,157,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21212
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ICR_Bits',0,16,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	282
	.byte	25,0,2,35,0,0,11,16,173,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21443
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ISCR_Bits',0,16,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,11,16,189,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21660
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,16,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,237,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21824
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAPSV_Bits',0,16,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,141,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21911
	.byte	4,2,35,0,0,14,144,1
	.word	305
	.byte	15,143,1,0,9
	.byte	'_Ifx_STM_OCS_Bits',0,16,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,11,16,221,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22011
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,16,175,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,16,213,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22171
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST1_Bits',0,16,168,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,11,16,205,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22277
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST0_Bits',0,16,160,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,11,16,197,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22381
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,16,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,11,16,253,1,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22504
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,16,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,11,16,245,1,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22593
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM',0,16,173,3,25,128,2,12
	.byte	'CLC',0
	.word	20273
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	20395
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'TIM0',0
	.word	20480
	.byte	4,2,35,16,12
	.byte	'TIM1',0
	.word	20565
	.byte	4,2,35,20,12
	.byte	'TIM2',0
	.word	20650
	.byte	4,2,35,24,12
	.byte	'TIM3',0
	.word	20736
	.byte	4,2,35,28,12
	.byte	'TIM4',0
	.word	20822
	.byte	4,2,35,32,12
	.byte	'TIM5',0
	.word	20908
	.byte	4,2,35,36,12
	.byte	'TIM6',0
	.word	20994
	.byte	4,2,35,40,12
	.byte	'CAP',0
	.word	21081
	.byte	4,2,35,44,12
	.byte	'CMP',0
	.word	21203
	.byte	8,2,35,48,12
	.byte	'CMCON',0
	.word	21403
	.byte	4,2,35,56,12
	.byte	'ICR',0
	.word	21620
	.byte	4,2,35,60,12
	.byte	'ISCR',0
	.word	21784
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	4816
	.byte	12,2,35,68,12
	.byte	'TIM0SV',0
	.word	21871
	.byte	4,2,35,80,12
	.byte	'CAPSV',0
	.word	21960
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	22000
	.byte	144,1,2,35,88,12
	.byte	'OCS',0
	.word	22131
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	22237
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	22341
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	22464
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	22553
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	23122
	.byte	4,3,35,252,1,0,13
	.word	23162
.L380:
	.byte	6
	.word	23582
	.byte	7
	.byte	'IfxStm_get',0,3,15,202,3,19
	.word	169
	.byte	1,1,8
	.byte	'stm',0,15,202,3,39
	.word	23587
	.byte	3,0,7
	.byte	'IfxStm_getFrequency',0,3,15,219,3,20
	.word	20108
	.byte	1,1,8
	.byte	'stm',0,15,219,3,49
	.word	23587
	.byte	16,3,0,0
.L303:
	.byte	7
	.byte	'IfxStm_getLower',0,3,15,229,3,19
	.word	18819
	.byte	1,1
.L305:
	.byte	8
	.byte	'stm',0,15,229,3,44
	.word	23587
.L307:
	.byte	3,0,21
	.word	140
	.byte	3,0,21
	.word	206
	.byte	22
	.word	224
	.byte	3,0,21
	.word	239
	.byte	22
	.word	253
	.byte	22
	.word	266
	.byte	3,0,21
	.word	661
	.byte	22
	.word	689
	.byte	3,0,21
	.word	1426
	.byte	22
	.word	1466
	.byte	22
	.word	1484
	.byte	3,0,21
	.word	1504
	.byte	22
	.word	1542
	.byte	22
	.word	1560
	.byte	3,0,21
	.word	1580
	.byte	22
	.word	1631
	.byte	3,0,21
	.word	8632
	.byte	22
	.word	8659
	.byte	22
	.word	8673
	.byte	16,23
	.word	8860
	.byte	22
	.word	8888
	.byte	22
	.word	8902
	.byte	22
	.word	8920
	.byte	24
	.word	8936
	.byte	0,3,0,0,21
	.word	8695
	.byte	22
	.word	8721
	.byte	22
	.word	8735
	.byte	16,23
	.word	8860
	.byte	22
	.word	8888
	.byte	22
	.word	8902
	.byte	22
	.word	8920
	.byte	24
	.word	8936
	.byte	0,3,0,0,21
	.word	8860
	.byte	22
	.word	8888
	.byte	22
	.word	8902
	.byte	22
	.word	8920
	.byte	3,0,21
	.word	11676
	.byte	22
	.word	11710
	.byte	3,0,21
	.word	11728
	.byte	22
	.word	11764
	.byte	3,0,21
	.word	18749
	.byte	22
	.word	18789
	.byte	22
	.word	18803
	.byte	3,0,21
	.word	19437
	.byte	22
	.word	19470
	.byte	22
	.word	19483
	.byte	22
	.word	19495
	.byte	22
	.word	19512
	.byte	22
	.word	19530
	.byte	3,0,21
	.word	19563
	.byte	22
	.word	19605
	.byte	3,0,21
	.word	19622
	.byte	22
	.word	19664
	.byte	3,0,21
	.word	19693
	.byte	22
	.word	19735
	.byte	22
	.word	19749
	.byte	3,0,21
	.word	19824
	.byte	3,0,21
	.word	19858
	.byte	3,0,21
	.word	19900
	.byte	22
	.word	19941
	.byte	3,0,21
	.word	19960
	.byte	22
	.word	20015
	.byte	3,0,21
	.word	20034
	.byte	22
	.word	20074
	.byte	22
	.word	20091
	.byte	3,0,21
	.word	20117
	.byte	3,0
.L385:
	.byte	17,9,191,1,9,2,18
	.byte	'IfxMultican_Status_ok',0,0,18
	.byte	'IfxMultican_Status_notInitialised',0,1,18
	.byte	'IfxMultican_Status_wrongParam',0,2,18
	.byte	'IfxMultican_Status_wrongPin',0,4,18
	.byte	'IfxMultican_Status_busHeavy',0,8,18
	.byte	'IfxMultican_Status_busOff',0,16,18
	.byte	'IfxMultican_Status_notSentBusy',0,32,18
	.byte	'IfxMultican_Status_receiveEmpty',0,192,0,18
	.byte	'IfxMultican_Status_messageLost',0,128,1,18
	.byte	'IfxMultican_Status_newData',0,128,2,18
	.byte	'IfxMultican_Status_newDataButOneLost',0,128,3,0,20,17,191,6,9,4,12
	.byte	'mcan',0
	.word	18643
	.byte	4,2,35,0,0,6
	.word	24463
	.byte	17,9,69,9,1,18
	.byte	'IfxMultican_ClockSelect_noClock',0,0,18
	.byte	'IfxMultican_ClockSelect_fclc',0,1,18
	.byte	'IfxMultican_ClockSelect_fosc0',0,2,18
	.byte	'IfxMultican_ClockSelect_fErayPll',0,4,0,17,18,49,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,0,20,17,147,6,9,4,12
	.byte	'priority',0
	.word	856
	.byte	2,2,35,0,12
	.byte	'typeOfService',0
	.word	24627
	.byte	1,2,35,2,0,14,64
	.word	24668
	.byte	15,15,0
.L248:
	.byte	20,17,198,6,9,76,12
	.byte	'module',0
	.word	18643
	.byte	4,2,35,0,12
	.byte	'clockSelect',0
	.word	24489
	.byte	1,2,35,4,12
	.byte	'moduleFreq',0
	.word	20108
	.byte	4,2,35,6,12
	.byte	'nodePointer',0
	.word	24716
	.byte	64,2,35,10,0,25
	.word	24725
	.byte	6
	.word	24810
	.byte	26
	.byte	'IfxMultican_Can_initModule',0,17,178,7,31
	.word	24104
	.byte	1,1,1,1,8
	.byte	'mcan',0,17,178,7,75
	.word	24484
	.byte	8
	.byte	'config',0,17,178,7,111
	.word	24815
	.byte	0,6
	.word	24725
	.byte	27
	.byte	'IfxMultican_Can_initModuleConfig',0,17,188,7,17,1,1,1,1,8
	.byte	'config',0,17,188,7,74
	.word	24891
	.byte	8
	.byte	'mcan',0,17,188,7,91
	.word	18643
	.byte	0,20,17,177,6,9,12,12
	.byte	'mcan',0
	.word	18643
	.byte	4,2,35,0,12
	.byte	'node',0
	.word	11671
	.byte	4,2,35,4,12
	.byte	'nodeId',0
	.word	18648
	.byte	1,2,35,8,12
	.byte	'fastNode',0
	.word	305
	.byte	1,2,35,9,0,6
	.word	24969
	.byte	20,17,251,5,9,20,12
	.byte	'nominalBaudrate',0
	.word	18819
	.byte	4,2,35,0,12
	.byte	'nominalSynchJumpWidth',0
	.word	856
	.byte	2,2,35,4,12
	.byte	'nominalSamplePoint',0
	.word	856
	.byte	2,2,35,6,12
	.byte	'fastBaudrate',0
	.word	18819
	.byte	4,2,35,8,12
	.byte	'fastSynchJumpWidth',0
	.word	856
	.byte	2,2,35,12,12
	.byte	'fastSamplePoint',0
	.word	856
	.byte	2,2,35,14,12
	.byte	'loopDelayOffset',0
	.word	856
	.byte	2,2,35,16,0,20,7,149,1,9,8,12
	.byte	'port',0
	.word	8627
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	305
	.byte	1,2,35,4,0,17,20,94,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,20,19,39,15,20,12
	.byte	'module',0
	.word	18643
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	18648
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	25234
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	25273
	.byte	1,2,35,16,0,25
	.word	25391
	.byte	6
	.word	25458
	.byte	17,7,54,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,17,7,91,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,20,19,48,15,20,12
	.byte	'module',0
	.word	18643
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	18648
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	25234
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	25593
	.byte	1,2,35,16,0,25
	.word	25810
	.byte	6
	.word	25877
	.byte	17,7,105,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,11,74,9,1,18
	.byte	'IfxMultican_SrcId_0',0,0,18
	.byte	'IfxMultican_SrcId_1',0,1,18
	.byte	'IfxMultican_SrcId_2',0,2,18
	.byte	'IfxMultican_SrcId_3',0,3,18
	.byte	'IfxMultican_SrcId_4',0,4,18
	.byte	'IfxMultican_SrcId_5',0,5,18
	.byte	'IfxMultican_SrcId_6',0,6,18
	.byte	'IfxMultican_SrcId_7',0,7,18
	.byte	'IfxMultican_SrcId_8',0,8,18
	.byte	'IfxMultican_SrcId_9',0,9,18
	.byte	'IfxMultican_SrcId_10',0,10,18
	.byte	'IfxMultican_SrcId_11',0,11,18
	.byte	'IfxMultican_SrcId_12',0,12,18
	.byte	'IfxMultican_SrcId_13',0,13,18
	.byte	'IfxMultican_SrcId_14',0,14,18
	.byte	'IfxMultican_SrcId_15',0,15,0,20,17,155,6,9,2,12
	.byte	'enabled',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'srcId',0
	.word	25956
	.byte	1,2,35,1,0
.L251:
	.byte	20,17,237,6,9,64,12
	.byte	'module',0
	.word	18643
	.byte	4,2,35,0,12
	.byte	'nodeId',0
	.word	18648
	.byte	1,2,35,4,12
	.byte	'analyzerMode',0
	.word	305
	.byte	1,2,35,5,12
	.byte	'loopBackMode',0
	.word	305
	.byte	1,2,35,6,12
	.byte	'baudrate',0
	.word	18819
	.byte	4,2,35,8,12
	.byte	'samplePoint',0
	.word	856
	.byte	2,2,35,12,12
	.byte	'synchJumpWidth',0
	.word	856
	.byte	2,2,35,14,12
	.byte	'flexibleDataRate',0
	.word	305
	.byte	1,2,35,16,12
	.byte	'fdConfig',0
	.word	25043
	.byte	20,2,35,20,12
	.byte	'rxPin',0
	.word	25463
	.byte	4,2,35,40,12
	.byte	'rxPinMode',0
	.word	25468
	.byte	1,2,35,44,12
	.byte	'txPin',0
	.word	25882
	.byte	4,2,35,48,12
	.byte	'txPinMode',0
	.word	25887
	.byte	1,2,35,52,12
	.byte	'errorWarningLevel',0
	.word	305
	.byte	1,2,35,53,12
	.byte	'transferInterrupt',0
	.word	26320
	.byte	2,2,35,54,12
	.byte	'lastErrorCodeInterrupt',0
	.word	26320
	.byte	2,2,35,56,12
	.byte	'alertInterrupt',0
	.word	26320
	.byte	2,2,35,58,12
	.byte	'frameCounterInterrupt',0
	.word	26320
	.byte	2,2,35,60,12
	.byte	'timerInterrupt',0
	.word	26320
	.byte	2,2,35,62,0,25
	.word	26359
	.byte	6
	.word	26782
	.byte	26
	.byte	'IfxMultican_Can_Node_init',0,17,250,7,31
	.word	24104
	.byte	1,1,1,1,8
	.byte	'node',0,17,250,7,79
	.word	25038
	.byte	8
	.byte	'config',0,17,250,7,119
	.word	26787
	.byte	0,6
	.word	26359
	.byte	27
	.byte	'IfxMultican_Can_Node_initConfig',0,17,132,8,17,1,1,1,1,8
	.byte	'config',0,17,132,8,77
	.word	26862
	.byte	8
	.byte	'mcan',0,17,132,8,102
	.word	24484
	.byte	0,20,17,208,6,9,16,12
	.byte	'node',0
	.word	25038
	.byte	4,2,35,0,12
	.byte	'msgObjId',0
	.word	19681
	.byte	4,2,35,4,12
	.byte	'msgObjCount',0
	.word	856
	.byte	2,2,35,8,12
	.byte	'fifoPointer',0
	.word	19681
	.byte	4,2,35,10,0,6
	.word	26939
	.byte	20,17,163,6,9,16,10
	.byte	'singleDataTransfer',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'singleTransmitTrial',0,1
	.word	305
	.byte	1,6,2,35,0,12
	.byte	'messageLen',0
	.word	18840
	.byte	1,2,35,1,10
	.byte	'extendedFrame',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'matchingId',0,1
	.word	305
	.byte	1,6,2,35,2,12
	.byte	'topMsgObjId',0
	.word	19681
	.byte	4,2,35,4,12
	.byte	'bottomMsgObjId',0
	.word	19681
	.byte	4,2,35,8,10
	.byte	'fastBitRate',0,1
	.word	305
	.byte	1,7,2,35,12,0,17,9,102,9,1,18
	.byte	'IfxMultican_Frame_receive',0,0,18
	.byte	'IfxMultican_Frame_transmit',0,1,18
	.byte	'IfxMultican_Frame_remoteRequest',0,2,18
	.byte	'IfxMultican_Frame_remoteAnswer',0,3,0,17,9,174,1,9,1,18
	.byte	'IfxMultican_Priority_ListOrder',0,1,18
	.byte	'IfxMultican_Priority_CAN_ID',0,2,0,20,17,136,6,9,6,10
	.byte	'copyDataLengthCode',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'copyData',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'copyId',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'enableTransmit',0,1
	.word	305
	.byte	1,4,2,35,0,12
	.byte	'gatewayDstObjId',0
	.word	19681
	.byte	4,2,35,2,0
.L255:
	.byte	20,17,218,6,9,56,12
	.byte	'node',0
	.word	25038
	.byte	4,2,35,0,12
	.byte	'msgObjId',0
	.word	19681
	.byte	4,2,35,4,12
	.byte	'msgObjCount',0
	.word	856
	.byte	2,2,35,8,12
	.byte	'control',0
	.word	27025
	.byte	16,2,35,12,12
	.byte	'frame',0
	.word	27228
	.byte	1,2,35,28,12
	.byte	'acceptanceMask',0
	.word	18819
	.byte	4,2,35,30,12
	.byte	'messageId',0
	.word	18819
	.byte	4,2,35,34,12
	.byte	'priority',0
	.word	27358
	.byte	1,2,35,38,12
	.byte	'rxInterrupt',0
	.word	26320
	.byte	2,2,35,40,12
	.byte	'txInterrupt',0
	.word	26320
	.byte	2,2,35,42,10
	.byte	'gatewayTransfers',0,1
	.word	305
	.byte	1,7,2,35,44,12
	.byte	'gatewayConfig',0
	.word	27428
	.byte	6,2,35,46,12
	.byte	'firstSlaveObjId',0
	.word	19681
	.byte	4,2,35,52,0,25
	.word	27554
	.byte	6
	.word	27825
	.byte	26
	.byte	'IfxMultican_Can_MsgObj_init',0,17,245,8,31
	.word	24104
	.byte	1,1,1,1,8
	.byte	'msgObj',0,17,245,8,83
	.word	27020
	.byte	8
	.byte	'config',0,17,245,8,127
	.word	27830
	.byte	0,6
	.word	27554
	.byte	27
	.byte	'IfxMultican_Can_MsgObj_initConfig',0,17,255,8,17,1,1,1,1,8
	.byte	'config',0,17,255,8,81
	.word	27909
	.byte	8
	.byte	'node',0,17,255,8,111
	.word	25038
	.byte	0,26
	.byte	'IfxMultican_Can_MsgObj_isRxPending',0,17,133,9,20
	.word	305
	.byte	1,1,1,1,8
	.byte	'msgObj',0,17,133,9,79
	.word	27020
	.byte	0,26
	.byte	'IfxMultican_Can_MsgObj_readMessage',0,17,158,9,31
	.word	24104
	.byte	1,1,1,1,8
	.byte	'msgObj',0,17,158,9,90
	.word	27020
	.byte	8
	.byte	'msg',0,17,158,9,119
	.word	19432
	.byte	0,25
	.word	19358
	.byte	6
	.word	28131
	.byte	26
	.byte	'IfxMultican_Can_MsgObj_sendMessage',0,17,169,9,31
	.word	24104
	.byte	1,1,1,1,8
	.byte	'msgObj',0,17,169,9,90
	.word	27020
	.byte	8
	.byte	'msg',0,17,169,9,125
	.word	28136
	.byte	0,20,21,67,9,4,10
	.byte	'Display',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'Rec_Normal',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'Rec_Crash',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'Rec_Manual',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'Timelapse',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'Rec_Normal_Prk',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'Rec_Crash_prk',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'Prk_time',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'Prk_Crash_Event_Count',0,1
	.word	305
	.byte	8,0,2,35,3,0,20,21,81,9,4,10
	.byte	'BeepSound',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'Event_Sound',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'Status',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'RESEVED',0,4
	.word	18819
	.byte	24,0,2,35,0,0,20,21,90,9,4,10
	.byte	'HU_Display',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'HU_UpdateReseved',0,1
	.word	305
	.byte	2,3,2,35,0,10
	.byte	'Reseved',0,4
	.word	18819
	.byte	27,0,2,35,0,0,20,21,97,9,6,10
	.byte	'Destination_Dvrs',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'NMCommandCode_DVRS',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'Reserved',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'NMSleepFlag_DVRS',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'Reseved',0,4
	.word	18819
	.byte	20,12,2,35,2,0,20,21,106,9,4,10
	.byte	'Reserved',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'GW_ENG_STAT',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'Reseved',0,2
	.word	856
	.byte	13,0,2,35,2,0
.L287:
	.byte	11,21,119,9,6,12
	.byte	'Dvrs_hu_pe_low',0
	.word	28219
	.byte	4,2,35,0,12
	.byte	'Dvrs_hu_pe_high',0
	.word	28434
	.byte	4,2,35,0,12
	.byte	'hu_dvrs_e_low',0
	.word	28521
	.byte	4,2,35,0,12
	.byte	'nm_dvrs',0
	.word	28596
	.byte	6,2,35,0,12
	.byte	'gw_chassis_pe_low',0
	.word	28727
	.byte	4,2,35,0,12
	.byte	'byte4',0
	.word	18819
	.byte	4,2,35,0,0,21
	.word	23592
	.byte	22
	.word	23615
	.byte	3,0,21
	.word	23630
	.byte	22
	.word	23662
	.byte	16,23
	.word	20117
	.byte	24
	.word	20155
	.byte	0,3,0,0,21
	.word	23679
	.byte	22
	.word	23707
	.byte	3,0,4
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,22,1,1
	.word	28981
	.byte	28
	.byte	'__size_t',0,22,1,1
	.word	282
	.byte	28
	.byte	'__ptrdiff_t',0,22,1,1
	.word	298
	.byte	29,1,6
	.word	29049
	.byte	28
	.byte	'__codeptr',0,22,1,1
	.word	29051
	.byte	28
	.byte	'__intptr_t',0,22,1,1
	.word	298
	.byte	28
	.byte	'__uintptr_t',0,22,1,1
	.word	282
	.byte	28
	.byte	'uint32_t',0,23,254,1,41
	.word	282
	.byte	28
	.byte	'_iob_flag_t',0,24,82,25
	.word	856
	.byte	28
	.byte	'uint8',0,25,89,24
	.word	305
	.byte	28
	.byte	'sint16',0,25,90,24
	.word	28981
	.byte	28
	.byte	'uint16',0,25,91,24
	.word	856
	.byte	28
	.byte	'sint32',0,25,92,24
	.word	19681
	.byte	28
	.byte	'uint32',0,25,93,24
	.word	18819
	.byte	28
	.byte	'float32',0,25,94,24
	.word	20108
	.byte	28
	.byte	'boolean',0,25,104,24
	.word	305
	.byte	4
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,20,36,28
	.word	29257
	.byte	28
	.byte	'uint64',0,20,37,28
	.word	169
	.byte	28
	.byte	'pvoid',0,20,40,28
	.word	201
	.byte	28
	.byte	'Ifx_TickTime',0,20,43,28
	.word	29257
	.byte	28
	.byte	'Ifx_Priority',0,20,67,16
	.word	856
	.byte	28
	.byte	'Ifx_RxSel',0,20,104,3
	.word	25273
	.byte	28
	.byte	'IfxMultican_NodeId',0,11,70,3
	.word	18648
	.byte	28
	.byte	'IfxMultican_SrcId',0,11,92,3
	.word	25956
	.byte	28
	.byte	'IfxSrc_Tos',0,18,53,3
	.word	24627
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	322
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	612
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,86,25,12,12
	.byte	'TX',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,8,0,13
	.word	29497
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,4,91,3
	.word	29556
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,94,25,4,12
	.byte	'SBSRC',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	29584
	.byte	28
	.byte	'Ifx_SRC_BCUSPB',0,4,97,3
	.word	29621
	.byte	14,64
	.word	612
	.byte	15,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,100,25,64,12
	.byte	'INT',0
	.word	29649
	.byte	64,2,35,0,0,13
	.word	29658
	.byte	28
	.byte	'Ifx_SRC_CAN',0,4,103,3
	.word	29690
	.byte	14,32
	.word	612
	.byte	15,7,0,9
	.byte	'_Ifx_SRC_CAN1',0,4,106,25,32,12
	.byte	'INT',0
	.word	29715
	.byte	32,2,35,0,0,13
	.word	29724
	.byte	28
	.byte	'Ifx_SRC_CAN1',0,4,109,3
	.word	29757
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,0,13
	.word	29783
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	29855
	.byte	14,8
	.word	612
	.byte	15,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,12
	.byte	'SR',0
	.word	29881
	.byte	8,2,35,0,0,13
	.word	29890
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	29926
	.byte	14,28
	.word	305
	.byte	15,27,0,9
	.byte	'_Ifx_SRC_CPU',0,4,127,25,32,12
	.byte	'SBSRC',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	29956
	.byte	28,2,35,4,0,13
	.word	29965
	.byte	28
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	30019
	.byte	9
	.byte	'_Ifx_SRC_DMA',0,4,134,1,25,80,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	4816
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	29649
	.byte	64,2,35,16,0,13
	.word	30045
	.byte	28
	.byte	'Ifx_SRC_DMA',0,4,139,1,3
	.word	30110
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,142,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	30136
	.byte	28
	.byte	'Ifx_SRC_EMEM',0,4,145,1,3
	.word	30169
	.byte	9
	.byte	'_Ifx_SRC_ERAY',0,4,148,1,25,80,12
	.byte	'INT',0
	.word	29881
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	29881
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	29881
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	29881
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	612
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	612
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	14717
	.byte	40,2,35,40,0,13
	.word	30196
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,4,157,1,3
	.word	30323
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,160,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	30350
	.byte	28
	.byte	'Ifx_SRC_ETH',0,4,163,1,3
	.word	30382
	.byte	9
	.byte	'_Ifx_SRC_EVR',0,4,166,1,25,8,12
	.byte	'WUT',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SCDC',0
	.word	612
	.byte	4,2,35,4,0,13
	.word	30408
	.byte	28
	.byte	'Ifx_SRC_EVR',0,4,170,1,3
	.word	30455
	.byte	9
	.byte	'_Ifx_SRC_FFT',0,4,173,1,25,12,12
	.byte	'DONE',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'RFS',0
	.word	612
	.byte	4,2,35,8,0,13
	.word	30481
	.byte	28
	.byte	'Ifx_SRC_FFT',0,4,178,1,3
	.word	30541
	.byte	14,240,11
	.word	305
	.byte	15,239,11,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,181,1,25,128,12,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	30567
	.byte	240,11,2,35,16,0,13
	.word	30578
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,4,188,1,3
	.word	30674
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,191,1,25,48,12
	.byte	'CIRQ',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	612
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	612
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	3847
	.byte	24,2,35,24,0,13
	.word	30701
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,4,200,1,3
	.word	30818
	.byte	14,236,2
	.word	305
	.byte	15,235,2,0,14,32
	.word	29715
	.byte	15,0,0,14,224,7
	.word	305
	.byte	15,223,7,0,14,64
	.word	29715
	.byte	15,1,0,9
	.byte	'_Ifx_SRC_GTM',0,4,203,1,25,192,11,12
	.byte	'AEIIRQ',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	30846
	.byte	236,2,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	4816
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	30857
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	30866
	.byte	224,7,3,35,160,3,12
	.byte	'TOM',0
	.word	30877
	.byte	64,3,35,128,11,0,13
	.word	30886
	.byte	28
	.byte	'Ifx_SRC_GTM',0,4,212,1,3
	.word	31033
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,215,1,25,8,12
	.byte	'HSM',0
	.word	29881
	.byte	8,2,35,0,0,13
	.word	31059
	.byte	28
	.byte	'Ifx_SRC_HSM',0,4,218,1,3
	.word	31092
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,221,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	31118
	.byte	28
	.byte	'Ifx_SRC_LMU',0,4,224,1,3
	.word	31150
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,227,1,25,4,12
	.byte	'SR',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	31176
	.byte	28
	.byte	'Ifx_SRC_PMU',0,4,230,1,3
	.word	31208
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,233,1,25,24,12
	.byte	'TX',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'HC',0
	.word	612
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	612
	.byte	4,2,35,20,0,13
	.word	31234
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,4,241,1,3
	.word	31327
	.byte	14,16
	.word	612
	.byte	15,3,0,9
	.byte	'_Ifx_SRC_SCU',0,4,244,1,25,20,12
	.byte	'DTS',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	31354
	.byte	16,2,35,4,0,13
	.word	31363
	.byte	28
	.byte	'Ifx_SRC_SCU',0,4,248,1,3
	.word	31409
	.byte	9
	.byte	'_Ifx_SRC_SENT',0,4,251,1,25,16,12
	.byte	'SR',0
	.word	31354
	.byte	16,2,35,0,0,13
	.word	31435
	.byte	28
	.byte	'Ifx_SRC_SENT',0,4,254,1,3
	.word	31468
	.byte	14,12
	.word	612
	.byte	15,2,0,9
	.byte	'_Ifx_SRC_SMU',0,4,129,2,25,12,12
	.byte	'SR',0
	.word	31495
	.byte	12,2,35,0,0,13
	.word	31504
	.byte	28
	.byte	'Ifx_SRC_SMU',0,4,132,2,3
	.word	31536
	.byte	14,88
	.word	305
	.byte	15,87,0,9
	.byte	'_Ifx_SRC_STM',0,4,135,2,25,96,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'reserved_8',0
	.word	31562
	.byte	88,2,35,8,0,13
	.word	31571
	.byte	28
	.byte	'Ifx_SRC_STM',0,4,140,2,3
	.word	31637
	.byte	14,176,2
	.word	305
	.byte	15,175,2,0,9
	.byte	'_Ifx_SRC_VADCCG',0,4,143,2,25,192,2,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	31663
	.byte	176,2,2,35,16,0,13
	.word	31674
	.byte	28
	.byte	'Ifx_SRC_VADCCG',0,4,150,2,3
	.word	31772
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,153,2,25,16,12
	.byte	'SR0',0
	.word	612
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	612
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	612
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	612
	.byte	4,2,35,12,0,13
	.word	31801
	.byte	28
	.byte	'Ifx_SRC_VADCG',0,4,159,2,3
	.word	31875
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,162,2,25,4,12
	.byte	'SRC',0
	.word	612
	.byte	4,2,35,0,0,13
	.word	31903
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,4,165,2,3
	.word	31937
	.byte	14,24
	.word	29497
	.byte	15,1,0,13
	.word	31964
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,178,2,25,24,12
	.byte	'ASCLIN',0
	.word	31973
	.byte	24,2,35,0,0,13
	.word	31978
	.byte	28
	.byte	'Ifx_SRC_GASCLIN',0,4,181,2,3
	.word	32018
	.byte	13
	.word	29584
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,184,2,25,4,12
	.byte	'SPB',0
	.word	32048
	.byte	4,2,35,0,0,13
	.word	32053
	.byte	28
	.byte	'Ifx_SRC_GBCU',0,4,187,2,3
	.word	32087
	.byte	14,64
	.word	29658
	.byte	15,0,0,13
	.word	32114
	.byte	14,32
	.word	29724
	.byte	15,0,0,13
	.word	32128
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,190,2,25,96,12
	.byte	'CAN',0
	.word	32123
	.byte	64,2,35,0,12
	.byte	'CAN1',0
	.word	32137
	.byte	32,2,35,64,0,13
	.word	32142
	.byte	28
	.byte	'Ifx_SRC_GCAN',0,4,194,2,3
	.word	32190
	.byte	14,32
	.word	29783
	.byte	15,1,0,13
	.word	32217
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,197,2,25,32,12
	.byte	'CCU6',0
	.word	32226
	.byte	32,2,35,0,0,13
	.word	32231
	.byte	28
	.byte	'Ifx_SRC_GCCU6',0,4,200,2,3
	.word	32267
	.byte	13
	.word	29890
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,203,2,25,8,12
	.byte	'CERBERUS',0
	.word	32295
	.byte	8,2,35,0,0,13
	.word	32300
	.byte	28
	.byte	'Ifx_SRC_GCERBERUS',0,4,206,2,3
	.word	32344
	.byte	14,32
	.word	29965
	.byte	15,0,0,13
	.word	32376
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,209,2,25,32,12
	.byte	'CPU',0
	.word	32385
	.byte	32,2,35,0,0,13
	.word	32390
	.byte	28
	.byte	'Ifx_SRC_GCPU',0,4,212,2,3
	.word	32424
	.byte	14,80
	.word	30045
	.byte	15,0,0,13
	.word	32451
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,215,2,25,80,12
	.byte	'DMA',0
	.word	32460
	.byte	80,2,35,0,0,13
	.word	32465
	.byte	28
	.byte	'Ifx_SRC_GDMA',0,4,218,2,3
	.word	32499
	.byte	14,4
	.word	30136
	.byte	15,0,0,13
	.word	32526
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,221,2,25,4,12
	.byte	'EMEM',0
	.word	32535
	.byte	4,2,35,0,0,13
	.word	32540
	.byte	28
	.byte	'Ifx_SRC_GEMEM',0,4,224,2,3
	.word	32576
	.byte	14,80
	.word	30196
	.byte	15,0,0,13
	.word	32604
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,227,2,25,80,12
	.byte	'ERAY',0
	.word	32613
	.byte	80,2,35,0,0,13
	.word	32618
	.byte	28
	.byte	'Ifx_SRC_GERAY',0,4,230,2,3
	.word	32654
	.byte	14,4
	.word	30350
	.byte	15,0,0,13
	.word	32682
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,233,2,25,4,12
	.byte	'ETH',0
	.word	32691
	.byte	4,2,35,0,0,13
	.word	32696
	.byte	28
	.byte	'Ifx_SRC_GETH',0,4,236,2,3
	.word	32730
	.byte	14,8
	.word	30408
	.byte	15,0,0,13
	.word	32757
	.byte	9
	.byte	'_Ifx_SRC_GEVR',0,4,239,2,25,8,12
	.byte	'EVR',0
	.word	32766
	.byte	8,2,35,0,0,13
	.word	32771
	.byte	28
	.byte	'Ifx_SRC_GEVR',0,4,242,2,3
	.word	32805
	.byte	14,12
	.word	30481
	.byte	15,0,0,13
	.word	32832
	.byte	9
	.byte	'_Ifx_SRC_GFFT',0,4,245,2,25,12,12
	.byte	'FFT',0
	.word	32841
	.byte	12,2,35,0,0,13
	.word	32846
	.byte	28
	.byte	'Ifx_SRC_GFFT',0,4,248,2,3
	.word	32880
	.byte	14,128,12
	.word	30578
	.byte	15,0,0,13
	.word	32907
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,251,2,25,128,12,12
	.byte	'GPSR',0
	.word	32917
	.byte	128,12,2,35,0,0,13
	.word	32922
	.byte	28
	.byte	'Ifx_SRC_GGPSR',0,4,254,2,3
	.word	32960
	.byte	14,48
	.word	30701
	.byte	15,0,0,13
	.word	32988
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,129,3,25,48,12
	.byte	'GPT12',0
	.word	32997
	.byte	48,2,35,0,0,13
	.word	33002
	.byte	28
	.byte	'Ifx_SRC_GGPT12',0,4,132,3,3
	.word	33040
	.byte	14,192,11
	.word	30886
	.byte	15,0,0,13
	.word	33069
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,135,3,25,192,11,12
	.byte	'GTM',0
	.word	33079
	.byte	192,11,2,35,0,0,13
	.word	33084
	.byte	28
	.byte	'Ifx_SRC_GGTM',0,4,138,3,3
	.word	33120
	.byte	14,8
	.word	31059
	.byte	15,0,0,13
	.word	33147
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,141,3,25,8,12
	.byte	'HSM',0
	.word	33156
	.byte	8,2,35,0,0,13
	.word	33161
	.byte	28
	.byte	'Ifx_SRC_GHSM',0,4,144,3,3
	.word	33195
	.byte	14,4
	.word	31118
	.byte	15,0,0,13
	.word	33222
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,147,3,25,4,12
	.byte	'LMU',0
	.word	33231
	.byte	4,2,35,0,0,13
	.word	33236
	.byte	28
	.byte	'Ifx_SRC_GLMU',0,4,150,3,3
	.word	33270
	.byte	14,8
	.word	31176
	.byte	15,1,0,13
	.word	33297
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,153,3,25,8,12
	.byte	'PMU',0
	.word	33306
	.byte	8,2,35,0,0,13
	.word	33311
	.byte	28
	.byte	'Ifx_SRC_GPMU',0,4,156,3,3
	.word	33345
	.byte	14,96
	.word	31234
	.byte	15,3,0,13
	.word	33372
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,159,3,25,96,12
	.byte	'QSPI',0
	.word	33381
	.byte	96,2,35,0,0,13
	.word	33386
	.byte	28
	.byte	'Ifx_SRC_GQSPI',0,4,162,3,3
	.word	33422
	.byte	13
	.word	31363
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,165,3,25,20,12
	.byte	'SCU',0
	.word	33450
	.byte	20,2,35,0,0,13
	.word	33455
	.byte	28
	.byte	'Ifx_SRC_GSCU',0,4,168,3,3
	.word	33489
	.byte	14,16
	.word	31435
	.byte	15,0,0,13
	.word	33516
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,171,3,25,16,12
	.byte	'SENT',0
	.word	33525
	.byte	16,2,35,0,0,13
	.word	33530
	.byte	28
	.byte	'Ifx_SRC_GSENT',0,4,174,3,3
	.word	33566
	.byte	14,12
	.word	31504
	.byte	15,0,0,13
	.word	33594
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,177,3,25,12,12
	.byte	'SMU',0
	.word	33603
	.byte	12,2,35,0,0,13
	.word	33608
	.byte	28
	.byte	'Ifx_SRC_GSMU',0,4,180,3,3
	.word	33642
	.byte	14,96
	.word	31571
	.byte	15,0,0,13
	.word	33669
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,183,3,25,96,12
	.byte	'STM',0
	.word	33678
	.byte	96,2,35,0,0,13
	.word	33683
	.byte	28
	.byte	'Ifx_SRC_GSTM',0,4,186,3,3
	.word	33717
	.byte	14,64
	.word	31801
	.byte	15,3,0,13
	.word	33744
	.byte	14,224,1
	.word	305
	.byte	15,223,1,0,14,192,2
	.word	31674
	.byte	15,0,0,13
	.word	33769
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,189,3,25,224,4,12
	.byte	'G',0
	.word	33753
	.byte	64,2,35,0,12
	.byte	'reserved_40',0
	.word	33758
	.byte	224,1,2,35,64,12
	.byte	'CG',0
	.word	33779
	.byte	192,2,3,35,160,2,0,13
	.word	33784
	.byte	28
	.byte	'Ifx_SRC_GVADC',0,4,194,3,3
	.word	33854
	.byte	13
	.word	31903
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,197,3,25,4,12
	.byte	'XBAR',0
	.word	33882
	.byte	4,2,35,0,0,13
	.word	33887
	.byte	28
	.byte	'Ifx_SRC_GXBAR',0,4,200,3,3
	.word	33923
	.byte	28
	.byte	'Ifx_CAN_ACCEN0_Bits',0,10,83,3
	.word	12836
	.byte	28
	.byte	'Ifx_CAN_ACCEN1_Bits',0,10,89,3
	.word	12747
	.byte	28
	.byte	'Ifx_CAN_CLC_Bits',0,10,99,3
	.word	11782
	.byte	28
	.byte	'Ifx_CAN_FDR_Bits',0,10,108,3
	.word	12059
	.byte	28
	.byte	'Ifx_CAN_ID_Bits',0,10,116,3
	.word	11938
	.byte	28
	.byte	'Ifx_CAN_KRST0_Bits',0,10,124,3
	.word	12625
	.byte	28
	.byte	'Ifx_CAN_KRST1_Bits',0,10,131,1,3
	.word	12522
	.byte	28
	.byte	'Ifx_CAN_KRSTCLR_Bits',0,10,138,1,3
	.word	12416
	.byte	28
	.byte	'Ifx_CAN_LIST_Bits',0,10,148,1,3
	.word	13405
	.byte	28
	.byte	'Ifx_CAN_MCR_Bits',0,10,159,1,3
	.word	14043
	.byte	28
	.byte	'Ifx_CAN_MECR_Bits',0,10,174,1,3
	.word	14329
	.byte	28
	.byte	'Ifx_CAN_MESTAT_Bits',0,10,183,1,3
	.word	14576
	.byte	28
	.byte	'Ifx_CAN_MITR_Bits',0,10,190,1,3
	.word	14226
	.byte	28
	.byte	'Ifx_CAN_MO_AMR_Bits',0,10,198,1,3
	.word	15927
	.byte	28
	.byte	'Ifx_CAN_MO_AR_Bits',0,10,206,1,3
	.word	16813
	.byte	28
	.byte	'Ifx_CAN_MO_CTR_Bits',0,10,237,1,3
	.word	17090
	.byte	28
	.byte	'Ifx_CAN_MO_DATAH_Bits',0,10,246,1,3
	.word	16514
	.byte	28
	.byte	'Ifx_CAN_MO_DATAL_Bits',0,10,255,1,3
	.word	16215
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA0_Bits',0,10,136,2,3
	.word	14752
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA1_Bits',0,10,145,2,3
	.word	15328
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA2_Bits',0,10,154,2,3
	.word	15625
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA3_Bits',0,10,163,2,3
	.word	16048
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA4_Bits',0,10,172,2,3
	.word	16345
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA5_Bits',0,10,181,2,3
	.word	16644
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA6_Bits',0,10,190,2,3
	.word	16924
	.byte	28
	.byte	'Ifx_CAN_MO_FCR_Bits',0,10,215,2,3
	.word	14883
	.byte	28
	.byte	'Ifx_CAN_MO_FGPR_Bits',0,10,224,2,3
	.word	15459
	.byte	28
	.byte	'Ifx_CAN_MO_IPR_Bits',0,10,233,2,3
	.word	15756
	.byte	28
	.byte	'Ifx_CAN_MO_STAT_Bits',0,10,253,2,3
	.word	17682
	.byte	28
	.byte	'Ifx_CAN_MSID_Bits',0,10,132,3,3
	.word	13668
	.byte	28
	.byte	'Ifx_CAN_MSIMASK_Bits',0,10,138,3,3
	.word	13782
	.byte	28
	.byte	'Ifx_CAN_MSPND_Bits',0,10,144,3,3
	.word	13568
	.byte	28
	.byte	'Ifx_CAN_N_BTEVR_Bits',0,10,158,3,3
	.word	9776
	.byte	28
	.byte	'Ifx_CAN_N_BTR_Bits',0,10,169,3,3
	.word	10016
	.byte	28
	.byte	'Ifx_CAN_N_CR_Bits',0,10,185,3,3
	.word	8938
	.byte	28
	.byte	'Ifx_CAN_N_ECNT_Bits',0,10,196,3,3
	.word	10221
	.byte	28
	.byte	'Ifx_CAN_N_FBTR_Bits',0,10,206,3,3
	.word	11064
	.byte	28
	.byte	'Ifx_CAN_N_FCR_Bits',0,10,218,3,3
	.word	10394
	.byte	28
	.byte	'Ifx_CAN_N_IPR_Bits',0,10,229,3,3
	.word	9456
	.byte	28
	.byte	'Ifx_CAN_N_PCR_Bits',0,10,238,3,3
	.word	9633
	.byte	28
	.byte	'Ifx_CAN_N_SR_Bits',0,10,255,3,3
	.word	9191
	.byte	28
	.byte	'Ifx_CAN_N_TCCR_Bits',0,10,137,4,3
	.word	10590
	.byte	28
	.byte	'Ifx_CAN_N_TDCR_Bits',0,10,148,4,3
	.word	11223
	.byte	28
	.byte	'Ifx_CAN_N_TRTR_Bits',0,10,158,4,3
	.word	10761
	.byte	28
	.byte	'Ifx_CAN_N_TTTR_Bits',0,10,167,4,3
	.word	10923
	.byte	28
	.byte	'Ifx_CAN_OCS_Bits',0,10,180,4,3
	.word	12210
	.byte	28
	.byte	'Ifx_CAN_PANCTR_Bits',0,10,191,4,3
	.word	13865
	.byte	28
	.byte	'Ifx_CAN_ACCEN0',0,10,204,4,3
	.word	13365
	.byte	28
	.byte	'Ifx_CAN_ACCEN1',0,10,212,4,3
	.word	12796
	.byte	28
	.byte	'Ifx_CAN_CLC',0,10,220,4,3
	.word	11898
	.byte	28
	.byte	'Ifx_CAN_FDR',0,10,228,4,3
	.word	12159
	.byte	28
	.byte	'Ifx_CAN_ID',0,10,236,4,3
	.word	12019
	.byte	28
	.byte	'Ifx_CAN_KRST0',0,10,244,4,3
	.word	12707
	.byte	28
	.byte	'Ifx_CAN_KRST1',0,10,252,4,3
	.word	12585
	.byte	28
	.byte	'Ifx_CAN_KRSTCLR',0,10,132,5,3
	.word	12482
	.byte	28
	.byte	'Ifx_CAN_LIST',0,10,140,5,3
	.word	13519
	.byte	28
	.byte	'Ifx_CAN_MCR',0,10,148,5,3
	.word	14186
	.byte	28
	.byte	'Ifx_CAN_MECR',0,10,156,5,3
	.word	14536
	.byte	28
	.byte	'Ifx_CAN_MESTAT',0,10,164,5,3
	.word	14677
	.byte	28
	.byte	'Ifx_CAN_MITR',0,10,172,5,3
	.word	14289
	.byte	28
	.byte	'Ifx_CAN_MO_AMR',0,10,180,5,3
	.word	16008
	.byte	28
	.byte	'Ifx_CAN_MO_AR',0,10,188,5,3
	.word	16884
	.byte	28
	.byte	'Ifx_CAN_MO_CTR',0,10,196,5,3
	.word	17642
	.byte	28
	.byte	'Ifx_CAN_MO_DATAH',0,10,204,5,3
	.word	16604
	.byte	28
	.byte	'Ifx_CAN_MO_DATAL',0,10,212,5,3
	.word	16305
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA0',0,10,220,5,3
	.word	14843
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA1',0,10,228,5,3
	.word	15419
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA2',0,10,236,5,3
	.word	15716
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA3',0,10,244,5,3
	.word	16139
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA4',0,10,252,5,3
	.word	16436
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA5',0,10,132,6,3
	.word	16735
	.byte	28
	.byte	'Ifx_CAN_MO_EDATA6',0,10,140,6,3
	.word	17015
	.byte	28
	.byte	'Ifx_CAN_MO_FCR',0,10,148,6,3
	.word	15252
	.byte	28
	.byte	'Ifx_CAN_MO_FGPR',0,10,156,6,3
	.word	15548
	.byte	28
	.byte	'Ifx_CAN_MO_IPR',0,10,164,6,3
	.word	15851
	.byte	28
	.byte	'Ifx_CAN_MO_STAT',0,10,172,6,3
	.word	17964
	.byte	28
	.byte	'Ifx_CAN_MSID',0,10,180,6,3
	.word	13733
	.byte	28
	.byte	'Ifx_CAN_MSIMASK',0,10,188,6,3
	.word	13825
	.byte	28
	.byte	'Ifx_CAN_MSPND',0,10,196,6,3
	.word	13610
	.byte	28
	.byte	'Ifx_CAN_N_BTEVR',0,10,204,6,3
	.word	9976
	.byte	28
	.byte	'Ifx_CAN_N_BTR',0,10,212,6,3
	.word	10146
	.byte	28
	.byte	'Ifx_CAN_N_CR',0,10,220,6,3
	.word	9151
	.byte	28
	.byte	'Ifx_CAN_N_ECNT',0,10,228,6,3
	.word	10354
	.byte	28
	.byte	'Ifx_CAN_N_FBTR',0,10,236,6,3
	.word	11183
	.byte	28
	.byte	'Ifx_CAN_N_FCR',0,10,244,6,3
	.word	10550
	.byte	28
	.byte	'Ifx_CAN_N_IPR',0,10,252,6,3
	.word	9593
	.byte	28
	.byte	'Ifx_CAN_N_PCR',0,10,132,7,3
	.word	9736
	.byte	28
	.byte	'Ifx_CAN_N_SR',0,10,140,7,3
	.word	9416
	.byte	28
	.byte	'Ifx_CAN_N_TCCR',0,10,148,7,3
	.word	10721
	.byte	28
	.byte	'Ifx_CAN_N_TDCR',0,10,156,7,3
	.word	11366
	.byte	28
	.byte	'Ifx_CAN_N_TRTR',0,10,164,7,3
	.word	10883
	.byte	28
	.byte	'Ifx_CAN_N_TTTR',0,10,172,7,3
	.word	11024
	.byte	28
	.byte	'Ifx_CAN_OCS',0,10,180,7,3
	.word	12376
	.byte	28
	.byte	'Ifx_CAN_PANCTR',0,10,188,7,3
	.word	14003
	.byte	13
	.word	18038
	.byte	28
	.byte	'Ifx_CAN_MO',0,10,248,7,3
	.word	36424
	.byte	13
	.word	11417
	.byte	28
	.byte	'Ifx_CAN_N',0,10,146,8,3
	.word	36449
	.byte	13
	.word	18155
	.byte	28
	.byte	'Ifx_CAN',0,10,188,8,3
	.word	36473
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	7522
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	7435
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4485
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2538
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3533
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2666
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3313
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	2881
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3096
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,8,200,1,3
	.word	6065
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,8,210,1,3
	.word	6589
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,8,221,1,3
	.word	6239
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,8,232,1,3
	.word	6413
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,8,254,1,3
	.word	7078
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,8,163,2,3
	.word	1967
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,8,173,2,3
	.word	5402
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,8,184,2,3
	.word	5890
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,8,195,2,3
	.word	5549
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,8,206,2,3
	.word	5718
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,8,228,2,3
	.word	6745
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,8,250,2,3
	.word	1651
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,8,135,3,3
	.word	5191
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,8,157,3,3
	.word	4825
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,8,178,3,3
	.word	3856
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,8,199,3,3
	.word	4160
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,8,212,3,3
	.word	8049
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,8,220,3,3
	.word	7482
	.byte	28
	.byte	'Ifx_P_ESR',0,8,228,3,3
	.word	4776
	.byte	28
	.byte	'Ifx_P_ID',0,8,236,3,3
	.word	2617
	.byte	28
	.byte	'Ifx_P_IN',0,8,244,3,3
	.word	3807
	.byte	28
	.byte	'Ifx_P_IOCR0',0,8,252,3,3
	.word	2841
	.byte	28
	.byte	'Ifx_P_IOCR12',0,8,132,4,3
	.word	3493
	.byte	28
	.byte	'Ifx_P_IOCR4',0,8,140,4,3
	.word	3056
	.byte	28
	.byte	'Ifx_P_IOCR8',0,8,148,4,3
	.word	3273
	.byte	28
	.byte	'Ifx_P_OMCR',0,8,156,4,3
	.word	7386
	.byte	28
	.byte	'Ifx_P_OMCR0',0,8,164,4,3
	.word	6199
	.byte	28
	.byte	'Ifx_P_OMCR12',0,8,172,4,3
	.word	6705
	.byte	28
	.byte	'Ifx_P_OMCR4',0,8,180,4,3
	.word	6373
	.byte	28
	.byte	'Ifx_P_OMCR8',0,8,188,4,3
	.word	6549
	.byte	28
	.byte	'Ifx_P_OMR',0,8,196,4,3
	.word	2498
	.byte	28
	.byte	'Ifx_P_OMSR',0,8,204,4,3
	.word	7038
	.byte	28
	.byte	'Ifx_P_OMSR0',0,8,212,4,3
	.word	5509
	.byte	28
	.byte	'Ifx_P_OMSR12',0,8,220,4,3
	.word	6025
	.byte	28
	.byte	'Ifx_P_OMSR4',0,8,228,4,3
	.word	5678
	.byte	28
	.byte	'Ifx_P_OMSR8',0,8,236,4,3
	.word	5850
	.byte	28
	.byte	'Ifx_P_OUT',0,8,244,4,3
	.word	1927
	.byte	28
	.byte	'Ifx_P_PCSR',0,8,252,4,3
	.word	5362
	.byte	28
	.byte	'Ifx_P_PDISC',0,8,132,5,3
	.word	5151
	.byte	28
	.byte	'Ifx_P_PDR0',0,8,140,5,3
	.word	4120
	.byte	28
	.byte	'Ifx_P_PDR1',0,8,148,5,3
	.word	4436
	.byte	13
	.word	8089
	.byte	28
	.byte	'Ifx_P',0,8,193,5,3
	.word	37642
	.byte	17,26,139,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,28
	.byte	'IfxScu_CCUCON0_CLKSEL',0,26,143,10,3
	.word	37662
	.byte	17,26,153,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,26,158,10,3
	.word	37759
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	37881
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	38438
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	38515
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	38651
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	38933
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	39171
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,149,1,3
	.word	39299
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,152,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	305
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,163,1,3
	.word	39526
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,166,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,172,1,3
	.word	39745
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,175,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,179,1,3
	.word	39873
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,182,1,16,4,10
	.byte	'CHREV',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	305
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,193,1,3
	.word	39973
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,196,1,16,4,10
	.byte	'PWD',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	282
	.byte	22,6,2,35,0,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,204,1,3
	.word	40181
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,207,1,16,4,10
	.byte	'LOWER',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,216,1,3
	.word	40346
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,219,1,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,226,1,3
	.word	40529
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,229,1,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,6,248,1,3
	.word	40683
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,251,1,16,4,10
	.byte	'INTF0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,6,134,2,3
	.word	41047
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,137,2,16,4,10
	.byte	'POL',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,6,150,2,3
	.word	41258
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,153,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,158,2,3
	.word	41510
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,161,2,16,4,10
	.byte	'ARI',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,166,2,3
	.word	41628
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,169,2,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,176,2,3
	.word	41739
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,179,2,16,4,10
	.byte	'ADC13V',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,186,2,3
	.word	41902
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,189,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	10,0,2,35,0,10
	.byte	'SWDOVMOD',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,201,2,3
	.word	42064
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,204,2,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,212,2,3
	.word	42342
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,215,2,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	28,4,2,35,0,10
	.byte	'RSTSWDOFF',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,222,2,3
	.word	42521
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,225,2,16,4,10
	.byte	'SD33P',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,232,2,3
	.word	42681
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,235,2,16,4,10
	.byte	'SDFREQSPRD',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'TON',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'TOFF',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SYNCDIV',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,244,2,3
	.word	42842
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,247,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'STBS',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'STSP',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'NS',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'OL',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PIAD',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ADCMODE',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'ADCLPF',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'ADCLSB',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,134,3,3
	.word	43034
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,137,3,16,4,10
	.byte	'SDOLCON',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'MODSEL',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'MODLOW',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'MODMAN',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'MODHIGH',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,147,3,3
	.word	43330
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,150,3,16,4,10
	.byte	'EVR13',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SCMOD',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,4
	.word	282
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,164,3,3
	.word	43545
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,167,3,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,175,3,3
	.word	43834
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,178,3,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	305
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	305
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,189,3,3
	.word	44013
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,192,3,16,4,10
	.byte	'STEP',0,2
	.word	856
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,6,200,3,3
	.word	44231
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,203,3,16,4,10
	.byte	'FS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,6,223,3,3
	.word	44394
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,226,3,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,6,231,3,3
	.word	44730
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,234,3,16,4,10
	.byte	'IPEN00',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,6,130,4,3
	.word	44837
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,133,4,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,6,138,4,3
	.word	45289
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,141,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,6,148,4,3
	.word	45388
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,151,4,16,4,10
	.byte	'LBISTREQ',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	856
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,157,4,3
	.word	45538
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,160,4,16,4,10
	.byte	'SEED',0,4
	.word	282
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,167,4,3
	.word	45687
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,170,4,16,4,10
	.byte	'SIGNATURE',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,175,4,3
	.word	45848
	.byte	9
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,178,4,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,184,4,3
	.word	45978
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,187,4,16,4,10
	.byte	'LCLT0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,192,4,3
	.word	46112
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,195,4,16,4,10
	.byte	'DEPT',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	856
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,6,200,4,3
	.word	46227
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,203,4,16,4,10
	.byte	'PS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	856
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,6,211,4,3
	.word	46338
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	305
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,231,4,3
	.word	46496
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,234,4,16,4,10
	.byte	'P0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,6,239,4,3
	.word	46836
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,242,4,16,4,10
	.byte	'CSEL0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	856
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,255,4,3
	.word	46937
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,130,5,16,4,10
	.byte	'OVEN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,136,5,3
	.word	47204
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,139,5,16,4,10
	.byte	'PDIS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,6,144,5,3
	.word	47340
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,147,5,16,4,10
	.byte	'PD0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,6,154,5,3
	.word	47451
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,157,5,16,4,10
	.byte	'PDR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,6,168,5,3
	.word	47584
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,171,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,188,5,3
	.word	47787
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,191,5,16,4,10
	.byte	'K2DIV',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,199,5,3
	.word	48143
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,202,5,16,4,10
	.byte	'MODCFG',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,206,5,3
	.word	48321
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,209,5,16,4,10
	.byte	'VCOBYP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	305
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,226,5,3
	.word	48421
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,229,5,16,4,10
	.byte	'K2DIV',0,1
	.word	305
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	305
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,237,5,3
	.word	48791
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,240,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,249,5,3
	.word	48977
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,252,5,16,4,10
	.byte	'VCOBYST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,135,6,3
	.word	49175
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,138,6,16,4,10
	.byte	'REQSLP',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	282
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,145,6,3
	.word	49408
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,148,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	305
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,174,6,3
	.word	49560
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,177,6,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'IRADIS',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	14,5,2,35,0,10
	.byte	'STBYEVEN',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	305
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,185,6,3
	.word	50119
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR3_Bits',0,6,188,6,16,4,10
	.byte	'WUTREL',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'WUTDIV',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR3_Bits',0,6,196,6,3
	.word	50302
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,199,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	305
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'WUTWKP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUN',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'WUTWKEN',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	4,5,2,35,2,10
	.byte	'ESR0TRIST',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'WUTEN',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'WUTMODE',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'WUTRUN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,226,6,3
	.word	50471
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,229,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'WUTWKPCLR',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'WUTOVRUNCLR',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,242,6,3
	.word	51038
	.byte	9
	.byte	'_Ifx_SCU_PMSWUTCNT_Bits',0,6,245,6,16,4,10
	.byte	'WUTCNT',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWUTCNT_Bits',0,6,250,6,3
	.word	51354
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,253,6,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	856
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,135,7,3
	.word	51473
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,138,7,16,4,10
	.byte	'ESR0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,149,7,3
	.word	51682
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,152,7,16,4,10
	.byte	'ESR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,175,7,3
	.word	51893
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,178,7,16,4,10
	.byte	'HBT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,182,7,3
	.word	52325
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,185,7,16,4,10
	.byte	'HWCFG',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	305
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,198,7,3
	.word	52421
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,201,7,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,206,7,3
	.word	52681
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,209,7,16,4,10
	.byte	'CCTRIG0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,218,7,3
	.word	52806
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,221,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,228,7,3
	.word	53003
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,231,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,238,7,3
	.word	53156
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,241,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,248,7,3
	.word	53309
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,251,7,16,4,10
	.byte	'ESR0T',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,130,8,3
	.word	53462
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,139,8,3
	.word	720
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,154,8,3
	.word	878
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,170,8,3
	.word	1122
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,173,8,16,4,10
	.byte	'ENDINIT',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'LCK',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PW',0,4
	.word	704
	.byte	14,16,2,35,0,10
	.byte	'REL',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,179,8,3
	.word	53717
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,182,8,16,4,10
	.byte	'CLRIRF',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,195,8,3
	.word	53843
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,198,8,16,4,10
	.byte	'AE',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,211,8,3
	.word	54095
	.byte	11,6,219,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37881
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN0',0,6,224,8,3
	.word	54314
	.byte	11,6,227,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38438
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1',0,6,232,8,3
	.word	54378
	.byte	11,6,235,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38515
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,6,240,8,3
	.word	54442
	.byte	11,6,243,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38651
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,6,248,8,3
	.word	54507
	.byte	11,6,251,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38933
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,6,128,9,3
	.word	54572
	.byte	11,6,131,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39171
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,6,136,9,3
	.word	54637
	.byte	11,6,139,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39299
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,6,144,9,3
	.word	54702
	.byte	11,6,147,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39526
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,6,152,9,3
	.word	54767
	.byte	11,6,155,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39745
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,6,160,9,3
	.word	54832
	.byte	11,6,163,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39873
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,6,168,9,3
	.word	54897
	.byte	11,6,171,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39973
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,6,176,9,3
	.word	54962
	.byte	11,6,179,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40181
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCON',0,6,184,9,3
	.word	55026
	.byte	11,6,187,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40346
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSLIM',0,6,192,9,3
	.word	55090
	.byte	11,6,195,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40529
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSSTAT',0,6,200,9,3
	.word	55154
	.byte	11,6,203,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40683
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,6,208,9,3
	.word	55219
	.byte	11,6,211,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41047
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,6,216,9,3
	.word	55281
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41258
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,6,224,9,3
	.word	55343
	.byte	11,6,227,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41510
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG',0,6,232,9,3
	.word	55405
	.byte	11,6,235,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41628
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,6,240,9,3
	.word	55469
	.byte	11,6,243,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41739
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR13CON',0,6,248,9,3
	.word	55534
	.byte	11,6,251,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41902
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,128,10,3
	.word	55600
	.byte	11,6,131,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42064
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,136,10,3
	.word	55668
	.byte	11,6,139,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42342
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROVMON',0,6,144,10,3
	.word	55736
	.byte	11,6,147,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42521
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRRSTCON',0,6,152,10,3
	.word	55802
	.byte	11,6,155,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42681
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,160,10,3
	.word	55869
	.byte	11,6,163,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42842
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,168,10,3
	.word	55938
	.byte	11,6,171,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43034
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,176,10,3
	.word	56006
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43330
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,184,10,3
	.word	56074
	.byte	11,6,187,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43545
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT',0,6,192,10,3
	.word	56142
	.byte	11,6,195,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43834
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRUVMON',0,6,200,10,3
	.word	56207
	.byte	11,6,203,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44013
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,6,208,10,3
	.word	56273
	.byte	11,6,211,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44231
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,6,216,10,3
	.word	56337
	.byte	11,6,219,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44394
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,6,224,10,3
	.word	56398
	.byte	11,6,227,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44730
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,6,232,10,3
	.word	56459
	.byte	11,6,235,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44837
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,6,240,10,3
	.word	56519
	.byte	11,6,243,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45289
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,6,248,10,3
	.word	56581
	.byte	11,6,251,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45388
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,6,128,11,3
	.word	56641
	.byte	11,6,131,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45538
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,136,11,3
	.word	56703
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45687
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,144,11,3
	.word	56771
	.byte	11,6,147,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45848
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,152,11,3
	.word	56839
	.byte	11,6,155,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45978
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON0',0,6,160,11,3
	.word	56907
	.byte	11,6,163,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46112
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,6,168,11,3
	.word	56972
	.byte	11,6,171,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46227
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,6,176,11,3
	.word	57037
	.byte	11,6,179,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46338
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,6,184,11,3
	.word	57100
	.byte	11,6,187,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46496
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,6,192,11,3
	.word	57161
	.byte	11,6,195,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46836
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,6,200,11,3
	.word	57225
	.byte	11,6,203,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46937
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,6,208,11,3
	.word	57286
	.byte	11,6,211,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47204
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,6,216,11,3
	.word	57350
	.byte	11,6,219,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47340
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,6,224,11,3
	.word	57417
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47451
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,6,232,11,3
	.word	57480
	.byte	11,6,235,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47584
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,6,240,11,3
	.word	57541
	.byte	11,6,243,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47787
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON0',0,6,248,11,3
	.word	57603
	.byte	11,6,251,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48143
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON1',0,6,128,12,3
	.word	57668
	.byte	11,6,131,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48321
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON2',0,6,136,12,3
	.word	57733
	.byte	11,6,139,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48421
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,144,12,3
	.word	57798
	.byte	11,6,147,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48791
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,152,12,3
	.word	57867
	.byte	11,6,155,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,160,12,3
	.word	57936
	.byte	11,6,163,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49175
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT',0,6,168,12,3
	.word	58005
	.byte	11,6,171,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49408
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR',0,6,176,12,3
	.word	58070
	.byte	11,6,179,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49560
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR0',0,6,184,12,3
	.word	58133
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50119
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,6,192,12,3
	.word	58198
	.byte	11,6,195,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50302
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR3',0,6,200,12,3
	.word	58263
	.byte	11,6,203,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50471
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTAT',0,6,208,12,3
	.word	58328
	.byte	11,6,211,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51038
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,216,12,3
	.word	58394
	.byte	11,6,219,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51354
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWUTCNT',0,6,224,12,3
	.word	58463
	.byte	11,6,227,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51682
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,6,232,12,3
	.word	58530
	.byte	11,6,235,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51473
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,6,240,12,3
	.word	58594
	.byte	11,6,243,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51893
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,6,248,12,3
	.word	58659
	.byte	11,6,251,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52325
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON',0,6,128,13,3
	.word	58724
	.byte	11,6,131,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52421
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,6,136,13,3
	.word	58789
	.byte	11,6,139,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52681
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,6,144,13,3
	.word	58853
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52806
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,6,152,13,3
	.word	58919
	.byte	11,6,155,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53003
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,6,160,13,3
	.word	58983
	.byte	11,6,163,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53156
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS',0,6,168,13,3
	.word	59048
	.byte	11,6,171,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53309
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,6,176,13,3
	.word	59113
	.byte	11,6,179,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53462
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,6,184,13,3
	.word	59178
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,192,13,3
	.word	816
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,200,13,3
	.word	1082
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,208,13,3
	.word	1313
	.byte	11,6,211,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53717
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,6,216,13,3
	.word	59329
	.byte	11,6,219,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53843
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,6,224,13,3
	.word	59396
	.byte	11,6,227,13,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54095
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,6,232,13,3
	.word	59463
	.byte	13
	.word	1353
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,6,248,13,3
	.word	59528
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,251,13,25,12,12
	.byte	'CON0',0
	.word	59329
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	59396
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	59463
	.byte	4,2,35,8,0,13
	.word	59557
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,6,128,14,3
	.word	59618
	.byte	14,8
	.word	55405
	.byte	15,1,0,14,4
	.word	58070
	.byte	15,0,0,13
	.word	59557
	.byte	14,12
	.word	1353
	.byte	15,0,0,13
	.word	59668
	.byte	14,16
	.word	305
	.byte	15,15,0,14,20
	.word	305
	.byte	15,19,0,14,16
	.word	55219
	.byte	15,3,0,14,16
	.word	56519
	.byte	15,3,0,14,188,1
	.word	305
	.byte	15,187,1,0,14,244,1
	.word	305
	.byte	15,243,1,0,9
	.byte	'_Ifx_SCU',0,6,141,14,25,128,8,12
	.byte	'reserved_0',0
	.word	4476
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	56459
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2657
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	57161
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	58005
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	57603
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	57668
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	57733
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	57936
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	57798
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	57867
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	54507
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	54572
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	56337
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	56273
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	54637
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	54702
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	54767
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	54832
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	58659
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	2657
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	58530
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	54442
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	58853
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	58594
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	2657
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	55802
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	59645
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	55469
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	58919
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	54897
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	3847
	.byte	24,3,35,132,1,12
	.byte	'PDR',0
	.word	57480
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	56641
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	57225
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	57100
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	56581
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	56142
	.byte	4,3,35,176,1,12
	.byte	'reserved_B4',0
	.word	2657
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	55534
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	2657
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	58789
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	2657
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	58133
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	58328
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	58394
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	59654
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	4476
	.byte	8,3,35,216,1,12
	.byte	'DTSSTAT',0
	.word	55154
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	55026
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	58198
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	2657
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	59663
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	55343
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	59677
	.byte	12,3,35,128,2,12
	.byte	'reserved_10C',0
	.word	3847
	.byte	24,3,35,140,2,12
	.byte	'TRAPSTAT',0
	.word	59178
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	59113
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	58983
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	59048
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	56907
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	2657
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	56972
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	54962
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	57037
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4476
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	58724
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	59682
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	56703
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	56771
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	56839
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	29956
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	57417
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4816
	.byte	12,3,35,144,3,12
	.byte	'EVRADCSTAT',0
	.word	55600
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	56207
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	55736
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	55668
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	2657
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	55938
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	56006
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	56074
	.byte	4,3,35,184,3,12
	.byte	'reserved_1BC',0
	.word	4476
	.byte	8,3,35,188,3,12
	.byte	'EVRSDCOEFF2',0
	.word	55869
	.byte	4,3,35,196,3,12
	.byte	'reserved_1C8',0
	.word	59691
	.byte	20,3,35,200,3,12
	.byte	'PMSWUTCNT',0
	.word	58463
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	57350
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	57286
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	14717
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	59700
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	55281
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	56398
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	57541
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	59709
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	2657
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	55090
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	59718
	.byte	188,1,3,35,196,4,12
	.byte	'PMSWCR3',0
	.word	58263
	.byte	4,3,35,128,6,12
	.byte	'reserved_304',0
	.word	59729
	.byte	244,1,3,35,132,6,12
	.byte	'ACCEN1',0
	.word	54378
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	54314
	.byte	4,3,35,252,7,0,13
	.word	59740
	.byte	28
	.byte	'Ifx_SCU',0,6,244,14,3
	.word	61636
	.byte	28
	.byte	'IfxPort_InputMode',0,7,60,3
	.word	25468
	.byte	17,7,66,9,1,18
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,18
	.byte	'IfxPort_Mode_inputPullDown',0,8,18
	.byte	'IfxPort_Mode_inputPullUp',0,16,18
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,18
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,28
	.byte	'IfxPort_Mode',0,7,87,3
	.word	61684
	.byte	28
	.byte	'IfxPort_OutputIdx',0,7,101,3
	.word	25593
	.byte	28
	.byte	'IfxPort_OutputMode',0,7,109,3
	.word	25887
	.byte	17,7,115,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,28
	.byte	'IfxPort_PadDriver',0,7,125,3
	.word	62427
	.byte	28
	.byte	'IfxPort_State',0,7,137,1,3
	.word	8757
	.byte	28
	.byte	'IfxPort_Pin',0,7,153,1,3
	.word	25234
	.byte	25
	.word	25391
	.byte	28
	.byte	'IfxMultican_Rxd_In',0,19,45,3
	.word	62787
	.byte	25
	.word	25810
	.byte	28
	.byte	'IfxMultican_Txd_Out',0,19,54,3
	.word	62819
	.byte	25
	.word	25391
	.byte	30
	.byte	'IfxMultican1_RXD2E_P20_9_IN',0,19,70,31
	.word	62852
	.byte	1,1,25
	.word	25810
	.byte	30
	.byte	'IfxMultican1_TXD2_P20_10_OUT',0,19,96,32
	.word	62895
	.byte	1,1,28
	.byte	'IfxMultican_MsgObjId',0,9,59,16
	.word	19681
	.byte	28
	.byte	'IfxMultican_ClockSelect',0,9,75,3
	.word	24489
	.byte	28
	.byte	'IfxMultican_DataLengthCode',0,9,98,3
	.word	18840
	.byte	28
	.byte	'IfxMultican_Frame',0,9,108,3
	.word	27228
	.byte	17,9,113,9,1,18
	.byte	'IfxMultican_FrameCounterMode_frameCountMode',0,0,18
	.byte	'IfxMultican_FrameCounterMode_timeStampMode',0,1,18
	.byte	'IfxMultican_FrameCounterMode_bitTimingMode',0,2,18
	.byte	'IfxMultican_FrameCounterMode_errorCountMode',0,3,0,28
	.byte	'IfxMultican_FrameCounterMode',0,9,124,3
	.word	63061
	.byte	17,9,129,1,9,1,18
	.byte	'IfxMultican_MsgObjGroup_0',0,0,18
	.byte	'IfxMultican_MsgObjGroup_1',0,1,18
	.byte	'IfxMultican_MsgObjGroup_2',0,2,18
	.byte	'IfxMultican_MsgObjGroup_3',0,3,18
	.byte	'IfxMultican_MsgObjGroup_4',0,4,18
	.byte	'IfxMultican_MsgObjGroup_5',0,5,18
	.byte	'IfxMultican_MsgObjGroup_6',0,6,18
	.byte	'IfxMultican_MsgObjGroup_7',0,7,0,28
	.byte	'IfxMultican_MsgObjGroup',0,9,139,1,3
	.word	63286
	.byte	17,9,143,1,9,1,18
	.byte	'IfxMultican_MsgObjMode_standard',0,0,18
	.byte	'IfxMultican_MsgObjMode_receiveFifoBase',0,1,18
	.byte	'IfxMultican_MsgObjMode_transmitFifoBase',0,2,18
	.byte	'IfxMultican_MsgObjMode_transmitFifoSlave',0,3,18
	.byte	'IfxMultican_MsgObjMode_gatewaySource',0,4,18
	.byte	'IfxMultican_MsgObjMode_canFD64',0,5,0,28
	.byte	'IfxMultican_MsgObjMode',0,9,151,1,3
	.word	63550
	.byte	28
	.byte	'IfxMultican_Priority',0,9,178,1,3
	.word	27358
	.byte	17,9,183,1,9,1,18
	.byte	'IfxMultican_SleepMode_enable',0,0,18
	.byte	'IfxMultican_SleepMode_disable',0,1,0,28
	.byte	'IfxMultican_SleepMode',0,9,187,1,3
	.word	63851
	.byte	28
	.byte	'IfxMultican_Status',0,9,204,1,3
	.word	24104
	.byte	28
	.byte	'IfxMultican_Message',0,9,220,1,3
	.word	19358
	.byte	11,9,224,1,9,4,12
	.byte	'B',0
	.word	17682
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,0,28
	.byte	'IfxMultican_MsgObjStat',0,9,228,1,3
	.word	64009
	.byte	9
	.byte	'_Ifx_CPU_A_Bits',0,27,45,16,4,10
	.byte	'ADDR',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_A_Bits',0,27,48,3
	.word	64070
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,27,51,16,4,10
	.byte	'VSS',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BIV_Bits',0,27,55,3
	.word	64131
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,27,58,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BTV_Bits',0,27,62,3
	.word	64210
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,27,65,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT_Bits',0,27,69,3
	.word	64296
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,27,72,16,4,10
	.byte	'CM',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	704
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	704
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	704
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL_Bits',0,27,80,3
	.word	64385
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,27,83,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT_Bits',0,27,89,3
	.word	64531
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,27,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID_Bits',0,27,96,3
	.word	64658
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,27,99,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L_Bits',0,27,103,3
	.word	64756
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,27,106,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U_Bits',0,27,110,3
	.word	64849
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,27,113,16,4,10
	.byte	'MODREV',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID_Bits',0,27,118,3
	.word	64942
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,27,121,16,4,10
	.byte	'XE',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE_Bits',0,27,125,3
	.word	65049
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,27,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT_Bits',0,27,136,1,3
	.word	65136
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,27,139,1,16,4,10
	.byte	'CID',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID_Bits',0,27,143,1,3
	.word	65290
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,27,146,1,16,4,10
	.byte	'DATA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_D_Bits',0,27,149,1,3
	.word	65384
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,27,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	704
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DATR_Bits',0,27,163,1,3
	.word	65447
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,27,166,1,16,4,10
	.byte	'DE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	704
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	704
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR_Bits',0,27,177,1,3
	.word	65665
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,27,180,1,16,4,10
	.byte	'DTA',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR_Bits',0,27,184,1,3
	.word	65880
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,27,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0_Bits',0,27,192,1,3
	.word	65974
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,27,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2_Bits',0,27,199,1,3
	.word	66090
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,27,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	704
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCX_Bits',0,27,206,1,3
	.word	66191
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,27,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD_Bits',0,27,212,1,3
	.word	66284
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,27,215,1,16,4,10
	.byte	'TA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR_Bits',0,27,218,1,3
	.word	66364
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,27,221,1,16,4,10
	.byte	'IED',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	704
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR_Bits',0,27,233,1,3
	.word	66433
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,27,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DMS_Bits',0,27,240,1,3
	.word	66662
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,27,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L_Bits',0,27,247,1,3
	.word	66755
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,27,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	704
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U_Bits',0,27,254,1,3
	.word	66850
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,27,129,2,16,4,10
	.byte	'RE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE_Bits',0,27,133,2,3
	.word	66945
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,27,136,2,16,4,10
	.byte	'WE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE_Bits',0,27,140,2,3
	.word	67035
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,27,143,2,16,4,10
	.byte	'SRE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	704
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	704
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	704
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR_Bits',0,27,161,2,3
	.word	67125
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,27,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT_Bits',0,27,172,2,3
	.word	67449
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,27,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FCX_Bits',0,27,180,2,3
	.word	67603
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,27,183,2,16,4,10
	.byte	'TST',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	704
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	704
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,27,202,2,3
	.word	67709
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,27,205,2,16,4,10
	.byte	'OPC',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	704
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,27,212,2,3
	.word	68058
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,27,215,2,16,4,10
	.byte	'PC',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,27,218,2,3
	.word	68218
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,27,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,27,224,2,3
	.word	68299
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,27,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,27,230,2,3
	.word	68386
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,27,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,27,236,2,3
	.word	68473
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,27,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT_Bits',0,27,243,2,3
	.word	68560
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,27,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	704
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	704
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	704
	.byte	6,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICR_Bits',0,27,253,2,3
	.word	68651
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,27,128,3,16,4,10
	.byte	'ISP',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_ISP_Bits',0,27,131,3,3
	.word	68794
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,27,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_LCX_Bits',0,27,139,3,3
	.word	68860
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,27,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT_Bits',0,27,146,3,3
	.word	68966
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,27,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT_Bits',0,27,153,3,3
	.word	69059
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,27,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	704
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT_Bits',0,27,160,3,3
	.word	69152
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,27,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_PC_Bits',0,27,167,3,3
	.word	69245
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,27,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0_Bits',0,27,175,3,3
	.word	69330
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,27,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1_Bits',0,27,183,3,3
	.word	69446
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,27,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2_Bits',0,27,190,3,3
	.word	69557
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,27,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	704
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	704
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI_Bits',0,27,200,3,3
	.word	69658
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,27,203,3,16,4,10
	.byte	'TA',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR_Bits',0,27,206,3,3
	.word	69788
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,27,209,3,16,4,10
	.byte	'IED',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	704
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR_Bits',0,27,221,3,3
	.word	69857
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,27,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	704
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0_Bits',0,27,229,3,3
	.word	70086
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,27,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	704
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1_Bits',0,27,237,3,3
	.word	70199
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,27,240,3,16,4,10
	.byte	'PSI',0,4
	.word	704
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2_Bits',0,27,244,3,3
	.word	70312
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,27,247,3,16,4,10
	.byte	'FRE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	704
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR_Bits',0,27,129,4,3
	.word	70403
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,27,132,4,16,4,10
	.byte	'CDC',0,4
	.word	704
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	704
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	704
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	704
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSW_Bits',0,27,147,4,3
	.word	70606
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,27,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	704
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	704
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN_Bits',0,27,156,4,3
	.word	70849
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,27,159,4,16,4,10
	.byte	'PC',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	704
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON_Bits',0,27,171,4,3
	.word	70977
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,27,174,4,16,4,10
	.byte	'EN',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,27,177,4,3
	.word	71218
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,27,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,27,183,4,3
	.word	71301
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,27,186,4,16,4,10
	.byte	'EN',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,27,189,4,3
	.word	71392
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,27,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,27,195,4,3
	.word	71483
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,27,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,27,202,4,3
	.word	71582
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,27,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,27,209,4,3
	.word	71689
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,27,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT_Bits',0,27,220,4,3
	.word	71796
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,27,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON_Bits',0,27,231,4,3
	.word	71950
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,27,234,4,16,4,10
	.byte	'ASI',0,4
	.word	704
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	704
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,27,238,4,3
	.word	72111
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,27,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	704
	.byte	15,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON_Bits',0,27,249,4,3
	.word	72209
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,27,252,4,16,4,10
	.byte	'Timer',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,27,255,4,3
	.word	72381
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,27,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR_Bits',0,27,133,5,3
	.word	72461
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,27,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	704
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	704
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	704
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	704
	.byte	3,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT_Bits',0,27,153,5,3
	.word	72534
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,27,156,5,16,4,10
	.byte	'T0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,27,167,5,3
	.word	72852
	.byte	11,27,175,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64070
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_A',0,27,180,5,3
	.word	73047
	.byte	11,27,183,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64131
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BIV',0,27,188,5,3
	.word	73106
	.byte	11,27,191,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64210
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BTV',0,27,196,5,3
	.word	73167
	.byte	11,27,199,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64296
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT',0,27,204,5,3
	.word	73228
	.byte	11,27,207,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64385
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL',0,27,212,5,3
	.word	73290
	.byte	11,27,215,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64531
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT',0,27,220,5,3
	.word	73353
	.byte	11,27,223,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64658
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID',0,27,228,5,3
	.word	73417
	.byte	11,27,231,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64756
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L',0,27,236,5,3
	.word	73482
	.byte	11,27,239,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64849
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U',0,27,244,5,3
	.word	73545
	.byte	11,27,247,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64942
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID',0,27,252,5,3
	.word	73608
	.byte	11,27,255,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65049
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE',0,27,132,6,3
	.word	73672
	.byte	11,27,135,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65136
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT',0,27,140,6,3
	.word	73734
	.byte	11,27,143,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65290
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID',0,27,148,6,3
	.word	73797
	.byte	11,27,151,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65384
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_D',0,27,156,6,3
	.word	73861
	.byte	11,27,159,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65447
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DATR',0,27,164,6,3
	.word	73920
	.byte	11,27,167,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65665
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR',0,27,172,6,3
	.word	73982
	.byte	11,27,175,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65880
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR',0,27,180,6,3
	.word	74045
	.byte	11,27,183,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65974
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0',0,27,188,6,3
	.word	74109
	.byte	11,27,191,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66090
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2',0,27,196,6,3
	.word	74172
	.byte	11,27,199,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66191
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCX',0,27,204,6,3
	.word	74235
	.byte	11,27,207,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66284
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD',0,27,212,6,3
	.word	74296
	.byte	11,27,215,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66364
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR',0,27,220,6,3
	.word	74359
	.byte	11,27,223,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66433
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR',0,27,228,6,3
	.word	74422
	.byte	11,27,231,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66662
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DMS',0,27,236,6,3
	.word	74485
	.byte	11,27,239,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66755
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L',0,27,244,6,3
	.word	74546
	.byte	11,27,247,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66850
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U',0,27,252,6,3
	.word	74609
	.byte	11,27,255,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66945
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE',0,27,132,7,3
	.word	74672
	.byte	11,27,135,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67035
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE',0,27,140,7,3
	.word	74734
	.byte	11,27,143,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67125
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR',0,27,148,7,3
	.word	74796
	.byte	11,27,151,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67449
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT',0,27,156,7,3
	.word	74858
	.byte	11,27,159,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67603
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FCX',0,27,164,7,3
	.word	74921
	.byte	11,27,167,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67709
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,27,172,7,3
	.word	74982
	.byte	11,27,175,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68058
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,27,180,7,3
	.word	75052
	.byte	11,27,183,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68218
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,27,188,7,3
	.word	75122
	.byte	11,27,191,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68299
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,27,196,7,3
	.word	75191
	.byte	11,27,199,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68386
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,27,204,7,3
	.word	75262
	.byte	11,27,207,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68473
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,27,212,7,3
	.word	75333
	.byte	11,27,215,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68560
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT',0,27,220,7,3
	.word	75404
	.byte	11,27,223,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68651
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICR',0,27,228,7,3
	.word	75466
	.byte	11,27,231,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68794
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ISP',0,27,236,7,3
	.word	75527
	.byte	11,27,239,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68860
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_LCX',0,27,244,7,3
	.word	75588
	.byte	11,27,247,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68966
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT',0,27,252,7,3
	.word	75649
	.byte	11,27,255,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69059
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT',0,27,132,8,3
	.word	75712
	.byte	11,27,135,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69152
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT',0,27,140,8,3
	.word	75775
	.byte	11,27,143,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69245
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PC',0,27,148,8,3
	.word	75838
	.byte	11,27,151,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69330
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0',0,27,156,8,3
	.word	75898
	.byte	11,27,159,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69446
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1',0,27,164,8,3
	.word	75961
	.byte	11,27,167,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69557
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2',0,27,172,8,3
	.word	76024
	.byte	11,27,175,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69658
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI',0,27,180,8,3
	.word	76087
	.byte	11,27,183,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69788
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR',0,27,188,8,3
	.word	76149
	.byte	11,27,191,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69857
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR',0,27,196,8,3
	.word	76212
	.byte	11,27,199,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70086
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0',0,27,204,8,3
	.word	76275
	.byte	11,27,207,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70199
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1',0,27,212,8,3
	.word	76337
	.byte	11,27,215,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70312
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2',0,27,220,8,3
	.word	76399
	.byte	11,27,223,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70403
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR',0,27,228,8,3
	.word	76461
	.byte	11,27,231,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70606
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSW',0,27,236,8,3
	.word	76523
	.byte	11,27,239,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70849
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN',0,27,244,8,3
	.word	76584
	.byte	11,27,247,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON',0,27,252,8,3
	.word	76647
	.byte	11,27,255,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71218
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA',0,27,132,9,3
	.word	76711
	.byte	11,27,135,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71301
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB',0,27,140,9,3
	.word	76781
	.byte	11,27,143,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71392
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,27,148,9,3
	.word	76851
	.byte	11,27,151,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71483
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,27,156,9,3
	.word	76925
	.byte	11,27,159,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71582
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,27,164,9,3
	.word	76999
	.byte	11,27,167,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71689
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,27,172,9,3
	.word	77069
	.byte	11,27,175,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71796
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT',0,27,180,9,3
	.word	77139
	.byte	11,27,183,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71950
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON',0,27,188,9,3
	.word	77202
	.byte	11,27,191,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72111
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI',0,27,196,9,3
	.word	77266
	.byte	11,27,199,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72209
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON',0,27,204,9,3
	.word	77332
	.byte	11,27,207,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72381
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER',0,27,212,9,3
	.word	77397
	.byte	11,27,215,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72461
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR',0,27,220,9,3
	.word	77464
	.byte	11,27,223,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72534
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT',0,27,228,9,3
	.word	77528
	.byte	11,27,231,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72852
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC',0,27,236,9,3
	.word	77592
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,27,247,9,25,8,12
	.byte	'L',0
	.word	73482
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	73545
	.byte	4,2,35,4,0,13
	.word	77658
	.byte	28
	.byte	'Ifx_CPU_CPR',0,27,251,9,3
	.word	77700
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,27,254,9,25,8,12
	.byte	'L',0
	.word	74546
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	74609
	.byte	4,2,35,4,0,13
	.word	77726
	.byte	28
	.byte	'Ifx_CPU_DPR',0,27,130,10,3
	.word	77768
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,27,133,10,25,16,12
	.byte	'LA',0
	.word	76999
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	77069
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	76851
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	76925
	.byte	4,2,35,12,0,13
	.word	77794
	.byte	28
	.byte	'Ifx_CPU_SPROT_RGN',0,27,139,10,3
	.word	77876
	.byte	14,12
	.word	77397
	.byte	15,2,0,9
	.byte	'_Ifx_CPU_TPS',0,27,142,10,25,16,12
	.byte	'CON',0
	.word	77332
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	77908
	.byte	12,2,35,4,0,13
	.word	77917
	.byte	28
	.byte	'Ifx_CPU_TPS',0,27,146,10,3
	.word	77965
	.byte	9
	.byte	'_Ifx_CPU_TR',0,27,149,10,25,8,12
	.byte	'EVT',0
	.word	77528
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	77464
	.byte	4,2,35,4,0,13
	.word	77991
	.byte	28
	.byte	'Ifx_CPU_TR',0,27,153,10,3
	.word	78036
	.byte	28
	.byte	'IfxCpu_ResourceCpu',0,13,87,3
	.word	19769
	.byte	17,12,118,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,28
	.byte	'IfxCpu_CounterMode',0,12,122,3
	.word	78088
	.byte	20,12,132,1,9,6,12
	.byte	'counter',0
	.word	18819
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	305
	.byte	1,2,35,4,0,28
	.byte	'IfxCpu_Counter',0,12,136,1,3
	.word	78175
	.byte	20,12,144,1,9,32,12
	.byte	'instruction',0
	.word	78175
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	78175
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	78175
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	78175
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	78175
	.byte	6,2,35,24,0,28
	.byte	'IfxCpu_Perf',0,12,151,1,3
	.word	78241
	.byte	28
	.byte	'Ifx_STM_ACCEN0_Bits',0,16,79,3
	.word	22593
	.byte	28
	.byte	'Ifx_STM_ACCEN1_Bits',0,16,85,3
	.word	22504
	.byte	28
	.byte	'Ifx_STM_CAP_Bits',0,16,91,3
	.word	21034
	.byte	28
	.byte	'Ifx_STM_CAPSV_Bits',0,16,97,3
	.word	21911
	.byte	28
	.byte	'Ifx_STM_CLC_Bits',0,16,107,3
	.word	20157
	.byte	28
	.byte	'Ifx_STM_CMCON_Bits',0,16,120,3
	.word	21212
	.byte	28
	.byte	'Ifx_STM_CMP_Bits',0,16,126,3
	.word	21121
	.byte	28
	.byte	'Ifx_STM_ICR_Bits',0,16,139,1,3
	.word	21443
	.byte	28
	.byte	'Ifx_STM_ID_Bits',0,16,147,1,3
	.word	20313
	.byte	28
	.byte	'Ifx_STM_ISCR_Bits',0,16,157,1,3
	.word	21660
	.byte	28
	.byte	'Ifx_STM_KRST0_Bits',0,16,165,1,3
	.word	22381
	.byte	28
	.byte	'Ifx_STM_KRST1_Bits',0,16,172,1,3
	.word	22277
	.byte	28
	.byte	'Ifx_STM_KRSTCLR_Bits',0,16,179,1,3
	.word	22171
	.byte	28
	.byte	'Ifx_STM_OCS_Bits',0,16,189,1,3
	.word	22011
	.byte	28
	.byte	'Ifx_STM_TIM0_Bits',0,16,195,1,3
	.word	20435
	.byte	28
	.byte	'Ifx_STM_TIM0SV_Bits',0,16,201,1,3
	.word	21824
	.byte	28
	.byte	'Ifx_STM_TIM1_Bits',0,16,207,1,3
	.word	20520
	.byte	28
	.byte	'Ifx_STM_TIM2_Bits',0,16,213,1,3
	.word	20605
	.byte	28
	.byte	'Ifx_STM_TIM3_Bits',0,16,219,1,3
	.word	20690
	.byte	28
	.byte	'Ifx_STM_TIM4_Bits',0,16,225,1,3
	.word	20776
	.byte	28
	.byte	'Ifx_STM_TIM5_Bits',0,16,231,1,3
	.word	20862
	.byte	28
	.byte	'Ifx_STM_TIM6_Bits',0,16,237,1,3
	.word	20948
	.byte	28
	.byte	'Ifx_STM_ACCEN0',0,16,250,1,3
	.word	23122
	.byte	28
	.byte	'Ifx_STM_ACCEN1',0,16,130,2,3
	.word	22553
	.byte	28
	.byte	'Ifx_STM_CAP',0,16,138,2,3
	.word	21081
	.byte	28
	.byte	'Ifx_STM_CAPSV',0,16,146,2,3
	.word	21960
	.byte	28
	.byte	'Ifx_STM_CLC',0,16,154,2,3
	.word	20273
	.byte	28
	.byte	'Ifx_STM_CMCON',0,16,162,2,3
	.word	21403
	.byte	28
	.byte	'Ifx_STM_CMP',0,16,170,2,3
	.word	21163
	.byte	28
	.byte	'Ifx_STM_ICR',0,16,178,2,3
	.word	21620
	.byte	28
	.byte	'Ifx_STM_ID',0,16,186,2,3
	.word	20395
	.byte	28
	.byte	'Ifx_STM_ISCR',0,16,194,2,3
	.word	21784
	.byte	28
	.byte	'Ifx_STM_KRST0',0,16,202,2,3
	.word	22464
	.byte	28
	.byte	'Ifx_STM_KRST1',0,16,210,2,3
	.word	22341
	.byte	28
	.byte	'Ifx_STM_KRSTCLR',0,16,218,2,3
	.word	22237
	.byte	28
	.byte	'Ifx_STM_OCS',0,16,226,2,3
	.word	22131
	.byte	28
	.byte	'Ifx_STM_TIM0',0,16,234,2,3
	.word	20480
	.byte	28
	.byte	'Ifx_STM_TIM0SV',0,16,242,2,3
	.word	21871
	.byte	28
	.byte	'Ifx_STM_TIM1',0,16,250,2,3
	.word	20565
	.byte	28
	.byte	'Ifx_STM_TIM2',0,16,130,3,3
	.word	20650
	.byte	28
	.byte	'Ifx_STM_TIM3',0,16,138,3,3
	.word	20736
	.byte	28
	.byte	'Ifx_STM_TIM4',0,16,146,3,3
	.word	20822
	.byte	28
	.byte	'Ifx_STM_TIM5',0,16,154,3,3
	.word	20908
	.byte	28
	.byte	'Ifx_STM_TIM6',0,16,162,3,3
	.word	20994
	.byte	13
	.word	23162
	.byte	28
	.byte	'Ifx_STM',0,16,201,3,3
	.word	79442
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,28,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,28,79,3
	.word	79464
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,28,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,28,85,3
	.word	80025
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,28,88,16,4,10
	.byte	'SEL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,28,95,3
	.word	80106
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,28,98,16,4,10
	.byte	'VLD0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,28,111,3
	.word	80259
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,28,114,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,28,121,3
	.word	80507
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,28,124,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,28,128,1,3
	.word	80653
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,28,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,28,136,1,3
	.word	80751
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,28,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,28,144,1,3
	.word	80867
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,28,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,28,153,1,3
	.word	80983
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,28,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,28,162,1,3
	.word	81123
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,28,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	282
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,28,171,1,3
	.word	81263
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,28,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	856
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,28,193,1,3
	.word	81402
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,28,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,28,218,1,3
	.word	81764
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,28,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RES1',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RES4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	856
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,28,254,1,3
	.word	82205
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,28,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,28,137,2,3
	.word	82809
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,28,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,28,156,2,3
	.word	82989
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,28,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	282
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,28,167,2,3
	.word	83311
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,28,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,28,174,2,3
	.word	83492
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,28,177,2,16,4,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,28,188,2,3
	.word	83592
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,28,191,2,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,28,194,2,3
	.word	83808
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,28,197,2,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,28,200,2,3
	.word	83887
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,28,203,2,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,28,208,2,3
	.word	83966
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,28,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	856
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,28,221,2,3
	.word	84077
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,28,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RES1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,28,233,2,3
	.word	84291
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,28,236,2,16,4,10
	.byte	'L',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'RES8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'RES9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RES10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'RES11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'RES12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'RES13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'RES14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'RES15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,28,254,2,3
	.word	84477
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,28,129,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,28,135,3,3
	.word	84812
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,28,138,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,28,146,3,3
	.word	84955
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,28,149,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	856
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	305
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	305
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'BOOTSEL',0,1
	.word	305
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	856
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,28,166,3,3
	.word	85144
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,28,169,3,16,4,10
	.byte	'S0ROM',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,28,201,3,3
	.word	85503
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,28,204,3,16,4,10
	.byte	'S0L',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,28,235,3,3
	.word	86098
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,28,238,3,16,4,10
	.byte	'S0WOP',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,28,141,4,3
	.word	86622
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,28,144,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,28,148,4,3
	.word	87204
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,28,151,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,28,155,4,3
	.word	87306
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,28,158,4,16,4,10
	.byte	'TAG',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	282
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,28,162,4,3
	.word	87408
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,28,165,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	282
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,28,169,4,3
	.word	87510
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,28,172,4,16,4,10
	.byte	'STRT',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,28,183,4,3
	.word	87604
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,28,186,4,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,28,189,4,3
	.word	87814
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,28,192,4,16,4,10
	.byte	'DATA',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,28,195,4,3
	.word	87887
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,28,198,4,16,4,10
	.byte	'SEL',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	282
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,28,205,4,3
	.word	87960
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,28,208,4,16,4,10
	.byte	'VLD0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,28,212,4,3
	.word	88115
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,28,215,4,16,4,10
	.byte	'reserved_0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	282
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,28,222,4,3
	.word	88220
	.byte	11,28,230,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79464
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,28,235,4,3
	.word	88368
	.byte	11,28,238,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80025
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,28,243,4,3
	.word	88434
	.byte	11,28,246,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80106
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,28,251,4,3
	.word	88500
	.byte	11,28,254,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80259
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,28,131,5,3
	.word	88568
	.byte	11,28,134,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80507
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_TOP',0,28,139,5,3
	.word	88637
	.byte	11,28,142,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80653
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,28,147,5,3
	.word	88705
	.byte	11,28,150,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80751
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,28,155,5,3
	.word	88770
	.byte	11,28,158,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80867
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,28,163,5,3
	.word	88835
	.byte	11,28,166,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80983
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,28,171,5,3
	.word	88900
	.byte	11,28,174,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81123
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,28,179,5,3
	.word	88965
	.byte	11,28,182,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81263
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,28,187,5,3
	.word	89030
	.byte	11,28,190,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81402
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,28,195,5,3
	.word	89094
	.byte	11,28,198,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81764
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,28,203,5,3
	.word	89158
	.byte	11,28,206,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82205
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,28,211,5,3
	.word	89222
	.byte	11,28,214,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82809
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,28,219,5,3
	.word	89285
	.byte	11,28,222,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82989
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,28,227,5,3
	.word	89352
	.byte	11,28,230,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83311
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,28,235,5,3
	.word	89418
	.byte	11,28,238,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83492
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,28,243,5,3
	.word	89485
	.byte	11,28,246,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83592
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,28,251,5,3
	.word	89552
	.byte	11,28,254,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83808
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,28,131,6,3
	.word	89619
	.byte	11,28,134,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83887
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,28,139,6,3
	.word	89686
	.byte	11,28,142,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83966
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,28,147,6,3
	.word	89753
	.byte	11,28,150,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84077
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,28,155,6,3
	.word	89815
	.byte	11,28,158,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84291
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,28,163,6,3
	.word	89879
	.byte	11,28,166,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84477
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,28,171,6,3
	.word	89943
	.byte	11,28,174,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84812
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,28,179,6,3
	.word	90010
	.byte	11,28,182,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84955
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,28,187,6,3
	.word	90079
	.byte	11,28,190,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85144
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,28,195,6,3
	.word	90148
	.byte	11,28,198,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85503
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,28,203,6,3
	.word	90221
	.byte	11,28,206,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86098
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,28,211,6,3
	.word	90290
	.byte	11,28,214,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86622
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,28,219,6,3
	.word	90357
	.byte	11,28,222,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87204
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,28,227,6,3
	.word	90426
	.byte	11,28,230,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87306
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,28,235,6,3
	.word	90494
	.byte	11,28,238,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87408
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,28,243,6,3
	.word	90562
	.byte	11,28,246,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87510
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,28,251,6,3
	.word	90630
	.byte	11,28,254,6,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87604
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,28,131,7,3
	.word	90694
	.byte	11,28,134,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87814
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,28,139,7,3
	.word	90758
	.byte	11,28,142,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87887
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,28,147,7,3
	.word	90822
	.byte	11,28,150,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87960
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,28,155,7,3
	.word	90886
	.byte	11,28,158,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88115
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,28,163,7,3
	.word	90954
	.byte	11,28,166,7,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88220
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_TOP',0,28,171,7,3
	.word	91023
	.byte	14,36
	.word	305
	.byte	15,35,0,9
	.byte	'_Ifx_FLASH_CBAB',0,28,182,7,25,48,12
	.byte	'CFG',0
	.word	88500
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	88568
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	88637
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	91091
	.byte	36,2,35,12,0,13
	.word	91100
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,28,188,7,3
	.word	91183
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,28,191,7,25,48,12
	.byte	'CFG0',0
	.word	90426
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	90494
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	90562
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	91091
	.byte	36,2,35,12,0,13
	.word	91212
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,28,197,7,3
	.word	91296
	.byte	14,80
	.word	305
	.byte	15,79,0,9
	.byte	'_Ifx_FLASH_UBAB',0,28,200,7,25,92,12
	.byte	'CFG',0
	.word	90886
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	90954
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	91023
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	91324
	.byte	80,2,35,12,0,13
	.word	91333
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,28,206,7,3
	.word	91416
	.byte	31,1,1,6
	.word	91445
	.byte	28
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,14,129,1,16
	.word	91448
	.byte	20,14,197,5,9,8,12
	.byte	'value',0
	.word	18819
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	18819
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_CcuconRegConfig',0,14,201,5,3
	.word	91493
	.byte	20,14,206,5,9,8,12
	.byte	'pDivider',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	305
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	305
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	20108
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_InitialStepConfig',0,14,212,5,3
	.word	91564
	.byte	20,14,216,5,9,12,12
	.byte	'k2Step',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	20108
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	91453
	.byte	4,2,35,8,0,28
	.byte	'IfxScuCcu_PllStepsConfig',0,14,221,5,3
	.word	91681
	.byte	6
	.word	91445
	.byte	20,14,229,5,9,40,12
	.byte	'ccucon0',0
	.word	91493
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	91493
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	91493
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	91493
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	91493
	.byte	8,2,35,32,0,28
	.byte	'IfxScuCcu_ClockDistributionConfig',0,14,236,5,3
	.word	91783
	.byte	20,14,240,5,9,8,12
	.byte	'value',0
	.word	18819
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	18819
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,14,244,5,3
	.word	91918
	.byte	6
	.word	91681
	.byte	20,14,249,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	305
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	91994
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	91564
	.byte	8,2,35,8,0,28
	.byte	'IfxScuCcu_SysPllConfig',0,14,254,5,3
	.word	91999
	.byte	28
	.byte	'IfxMultican_Can_FdConfig',0,17,132,6,3
	.word	25043
	.byte	28
	.byte	'IfxMultican_Can_GatewayConfig',0,17,143,6,3
	.word	27428
	.byte	28
	.byte	'IfxMultican_Can_InterruptConfig',0,17,151,6,3
	.word	24668
	.byte	28
	.byte	'IfxMultican_Can_InterruptSource',0,17,159,6,3
	.word	26320
	.byte	28
	.byte	'IfxMultican_Can_MsgObjControl',0,17,173,6,3
	.word	27025
	.byte	28
	.byte	'IfxMultican_Can_Node',0,17,183,6,3
	.word	24969
	.byte	28
	.byte	'IfxMultican_Can',0,17,194,6,3
	.word	24463
	.byte	28
	.byte	'IfxMultican_Can_Config',0,17,204,6,3
	.word	24725
	.byte	28
	.byte	'IfxMultican_Can_MsgObj',0,17,214,6,3
	.word	26939
	.byte	28
	.byte	'IfxMultican_Can_MsgObjConfig',0,17,233,6,3
	.word	27554
	.byte	28
	.byte	'IfxMultican_Can_NodeConfig',0,17,130,7,3
	.word	26359
	.byte	20,21,38,5,180,2,12
	.byte	'can',0
	.word	24463
	.byte	4,2,35,0,12
	.byte	'mcan',0
	.word	24463
	.byte	4,2,35,4,12
	.byte	'canSrcNode',0
	.word	24969
	.byte	12,2,35,8,12
	.byte	'canDstNode',0
	.word	24969
	.byte	12,2,35,20,12
	.byte	'mcanSrcNode',0
	.word	24969
	.byte	12,2,35,32,12
	.byte	'mcanDstNode',0
	.word	24969
	.byte	12,2,35,44,12
	.byte	'mcan_AVN_Node',0
	.word	24969
	.byte	12,2,35,56,12
	.byte	'canDstMsgObj_43F',0
	.word	26939
	.byte	16,2,35,68,12
	.byte	'canDstMsgObj_2B0',0
	.word	26939
	.byte	16,2,35,84,12
	.byte	'canSrcMsgObj',0
	.word	26939
	.byte	16,2,35,100,12
	.byte	'mcanSrcMsgObj',0
	.word	26939
	.byte	16,2,35,116,12
	.byte	'mcanDstMsgObj',0
	.word	26939
	.byte	16,3,35,132,1,12
	.byte	'mcan_13f_Tx_MsgObj',0
	.word	26939
	.byte	16,3,35,148,1,12
	.byte	'mcan_45D_Tx_MsgObj',0
	.word	26939
	.byte	16,3,35,164,1,12
	.byte	'mcan_12f_rx_MsgObj',0
	.word	26939
	.byte	16,3,35,180,1,12
	.byte	'mcan_DF_RX_MsgObj',0
	.word	26939
	.byte	16,3,35,196,1,12
	.byte	'mcan_18B_Rx_MsgObj',0
	.word	26939
	.byte	16,3,35,212,1,12
	.byte	'mcan_173_Rx_MsgObj',0
	.word	26939
	.byte	16,3,35,228,1,12
	.byte	'mcan_169_Rx_MsgObj',0
	.word	26939
	.byte	16,3,35,244,1,12
	.byte	'mcan_440_Rx_MsgObj',0
	.word	26939
	.byte	16,3,35,132,2,12
	.byte	'mcan_455_Rx_MsgObj',0
	.word	26939
	.byte	16,3,35,148,2,12
	.byte	'mcan_102_Tx_MsgObj',0
	.word	26939
	.byte	16,3,35,164,2,0
.L381:
	.byte	20,21,36,9,180,2,12
	.byte	'drivers',0
	.word	92503
	.byte	180,2,2,35,0,0,28
	.byte	'App_MulticanBasic',0,21,65,3
	.word	93052
	.byte	28
	.byte	'MCAN_DVRS_HU_PE_00_Low',0,21,79,2
	.word	28219
	.byte	28
	.byte	'MCAN_DVRS_HU_PE_00_High',0,21,87,2
	.word	28434
	.byte	28
	.byte	'MCAN_HU_DVRS_E_00_Low',0,21,95,2
	.word	28521
	.byte	28
	.byte	'MCAN_NM_DVRS',0,21,104,2
	.word	28596
	.byte	28
	.byte	'MCAN_GW_CHSASSIS_PE_1_Low',0,21,111,2
	.word	28727
	.byte	28
	.byte	'Mcan_msg',0,21,127,2
	.word	28795
	.byte	25
	.word	25234
	.byte	6
	.word	93268
	.byte	20,29,159,1,9,8,12
	.byte	'pin',0
	.word	93273
	.byte	4,2,35,0,12
	.byte	'mode',0
	.word	61684
	.byte	1,2,35,4,12
	.byte	'padDriver',0
	.word	62427
	.byte	1,2,35,5,0,28
	.byte	'IfxPort_Io_ConfigPin',0,29,164,1,3
	.word	93278
	.byte	9
	.byte	'_Ifx_QSPI_ACCEN0_Bits',0,30,45,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_QSPI_ACCEN0_Bits',0,30,79,3
	.word	93361
	.byte	9
	.byte	'_Ifx_QSPI_ACCEN1_Bits',0,30,82,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_QSPI_ACCEN1_Bits',0,30,85,3
	.word	93920
	.byte	9
	.byte	'_Ifx_QSPI_BACON_Bits',0,30,88,16,4,10
	.byte	'LAST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'IPRE',0,1
	.word	305
	.byte	3,4,2,35,0,10
	.byte	'IDLE',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'LPRE',0,2
	.word	856
	.byte	3,6,2,35,0,10
	.byte	'LEAD',0,1
	.word	305
	.byte	3,3,2,35,1,10
	.byte	'TPRE',0,1
	.word	305
	.byte	3,0,2,35,1,10
	.byte	'TRAIL',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'PARTYP',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'UINT',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'MSB',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'BYTE',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'DL',0,2
	.word	856
	.byte	5,4,2,35,2,10
	.byte	'CS',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_QSPI_BACON_Bits',0,30,103,3
	.word	93999
	.byte	9
	.byte	'_Ifx_QSPI_BACONENTRY_Bits',0,30,106,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_QSPI_BACONENTRY_Bits',0,30,109,3
	.word	94260
	.byte	9
	.byte	'_Ifx_QSPI_CAPCON_Bits',0,30,112,16,4,10
	.byte	'CAP',0,2
	.word	856
	.byte	15,1,2,35,0,10
	.byte	'OVF',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EDGECON',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'INS',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'EN',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,2
	.word	856
	.byte	7,4,2,35,2,10
	.byte	'CAPC',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'CAPS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'CAPF',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'CAPSEL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_QSPI_CAPCON_Bits',0,30,124,3
	.word	94338
	.byte	9
	.byte	'_Ifx_QSPI_CLC_Bits',0,30,127,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_QSPI_CLC_Bits',0,30,134,1,3
	.word	94562
	.byte	9
	.byte	'_Ifx_QSPI_DATAENTRY_Bits',0,30,137,1,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_QSPI_DATAENTRY_Bits',0,30,140,1,3
	.word	94706
	.byte	9
	.byte	'_Ifx_QSPI_ECON_Bits',0,30,143,1,16,4,10
	.byte	'Q',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'A',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'B',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'C',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'CPH',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CPOL',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'PAREN',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	15,2,2,35,0,10
	.byte	'BE',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_QSPI_ECON_Bits',0,30,154,1,3
	.word	94784
	.byte	9
	.byte	'_Ifx_QSPI_FLAGSCLEAR_Bits',0,30,157,1,16,4,10
	.byte	'ERRORCLEARS',0,2
	.word	856
	.byte	9,7,2,35,0,10
	.byte	'TXC',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RXC',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PT1C',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PT2C',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'USRC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_QSPI_FLAGSCLEAR_Bits',0,30,167,1,3
	.word	94976
	.byte	9
	.byte	'_Ifx_QSPI_GLOBALCON1_Bits',0,30,170,1,16,4,10
	.byte	'ERRORENS',0,2
	.word	856
	.byte	9,7,2,35,0,10
	.byte	'TXEN',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RXEN',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PT1EN',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PT2EN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'USREN',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TXFIFOINT',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'RXFIFOINT',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'PT1',0,1
	.word	305
	.byte	3,1,2,35,2,10
	.byte	'PT2',0,2
	.word	856
	.byte	3,6,2,35,2,10
	.byte	'TXFM',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'RXFM',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_QSPI_GLOBALCON1_Bits',0,30,186,1,3
	.word	95190
	.byte	9
	.byte	'_Ifx_QSPI_GLOBALCON_Bits',0,30,189,1,16,4,10
	.byte	'TQ',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'SI',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EXPECT',0,1
	.word	305
	.byte	4,2,2,35,1,10
	.byte	'LB',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'DEL0',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'STROBE',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'SRF',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'STIP',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'MS',0,1
	.word	305
	.byte	2,5,2,35,3,10
	.byte	'AREN',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'RESETS',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_QSPI_GLOBALCON_Bits',0,30,205,1,3
	.word	95510
	.byte	9
	.byte	'_Ifx_QSPI_ID_Bits',0,30,208,1,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_QSPI_ID_Bits',0,30,213,1,3
	.word	95807
	.byte	9
	.byte	'_Ifx_QSPI_KRST0_Bits',0,30,216,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_QSPI_KRST0_Bits',0,30,221,1,3
	.word	95916
	.byte	9
	.byte	'_Ifx_QSPI_KRST1_Bits',0,30,224,1,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_QSPI_KRST1_Bits',0,30,228,1,3
	.word	96029
	.byte	9
	.byte	'_Ifx_QSPI_KRSTCLR_Bits',0,30,231,1,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_QSPI_KRSTCLR_Bits',0,30,235,1,3
	.word	96123
	.byte	9
	.byte	'_Ifx_QSPI_MIXENTRY_Bits',0,30,238,1,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_QSPI_MIXENTRY_Bits',0,30,241,1,3
	.word	96221
	.byte	9
	.byte	'_Ifx_QSPI_OCS_Bits',0,30,244,1,16,4,10
	.byte	'reserved_0',0,4
	.word	282
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_QSPI_OCS_Bits',0,30,251,1,3
	.word	96297
	.byte	9
	.byte	'_Ifx_QSPI_PISEL_Bits',0,30,254,1,16,4,10
	.byte	'MRIS',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SRIS',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'SCIS',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'SLSIS',0,1
	.word	305
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_QSPI_PISEL_Bits',0,30,136,2,3
	.word	96445
	.byte	9
	.byte	'_Ifx_QSPI_RXEXIT_Bits',0,30,139,2,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_QSPI_RXEXIT_Bits',0,30,142,2,3
	.word	96657
	.byte	9
	.byte	'_Ifx_QSPI_RXEXITD_Bits',0,30,145,2,16,4,10
	.byte	'E',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_QSPI_RXEXITD_Bits',0,30,148,2,3
	.word	96729
	.byte	9
	.byte	'_Ifx_QSPI_SSOC_Bits',0,30,151,2,16,4,10
	.byte	'AOL',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'OEN',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_QSPI_SSOC_Bits',0,30,155,2,3
	.word	96803
	.byte	9
	.byte	'_Ifx_QSPI_STATUS1_Bits',0,30,158,2,16,4,10
	.byte	'BITCOUNT',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	20,4,2,35,0,10
	.byte	'BRDEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'BRD',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'SPDEN',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'SPD',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_QSPI_STATUS1_Bits',0,30,166,2,3
	.word	96888
	.byte	9
	.byte	'_Ifx_QSPI_STATUS_Bits',0,30,169,2,16,4,10
	.byte	'ERRORFLAGS',0,2
	.word	856
	.byte	9,7,2,35,0,10
	.byte	'TXF',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'RXF',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'PT1F',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PT2F',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'USRF',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TXFIFOLEVEL',0,1
	.word	305
	.byte	3,5,2,35,2,10
	.byte	'RXFIFOLEVEL',0,1
	.word	305
	.byte	3,2,2,35,2,10
	.byte	'SLAVESEL',0,2
	.word	856
	.byte	4,6,2,35,2,10
	.byte	'RPV',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'TPV',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'PHASE',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_QSPI_STATUS_Bits',0,30,184,2,3
	.word	97055
	.byte	9
	.byte	'_Ifx_QSPI_XXLCON_Bits',0,30,187,2,16,4,10
	.byte	'XDL',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'BYTECOUNT',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_QSPI_XXLCON_Bits',0,30,191,2,3
	.word	97350
	.byte	11,30,199,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93361
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_ACCEN0',0,30,204,2,3
	.word	97445
	.byte	11,30,207,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93920
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_ACCEN1',0,30,212,2,3
	.word	97510
	.byte	11,30,215,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93999
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_BACON',0,30,220,2,3
	.word	97575
	.byte	11,30,223,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94260
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_BACONENTRY',0,30,228,2,3
	.word	97639
	.byte	11,30,231,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94338
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_CAPCON',0,30,236,2,3
	.word	97708
	.byte	11,30,239,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94562
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_CLC',0,30,244,2,3
	.word	97773
	.byte	11,30,247,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94706
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_DATAENTRY',0,30,252,2,3
	.word	97835
	.byte	11,30,255,2,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94784
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_ECON',0,30,132,3,3
	.word	97903
	.byte	11,30,135,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94976
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_FLAGSCLEAR',0,30,140,3,3
	.word	97966
	.byte	11,30,143,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95510
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_GLOBALCON',0,30,148,3,3
	.word	98035
	.byte	11,30,151,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95190
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_GLOBALCON1',0,30,156,3,3
	.word	98103
	.byte	11,30,159,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95807
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_ID',0,30,164,3,3
	.word	98172
	.byte	11,30,167,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95916
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_KRST0',0,30,172,3,3
	.word	98233
	.byte	11,30,175,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96029
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_KRST1',0,30,180,3,3
	.word	98297
	.byte	11,30,183,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96123
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_KRSTCLR',0,30,188,3,3
	.word	98361
	.byte	11,30,191,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96221
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_MIXENTRY',0,30,196,3,3
	.word	98427
	.byte	11,30,199,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96297
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_OCS',0,30,204,3,3
	.word	98494
	.byte	11,30,207,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96445
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_PISEL',0,30,212,3,3
	.word	98556
	.byte	11,30,215,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96657
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_RXEXIT',0,30,220,3,3
	.word	98620
	.byte	11,30,223,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96729
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_RXEXITD',0,30,228,3,3
	.word	98685
	.byte	11,30,231,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96803
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_SSOC',0,30,236,3,3
	.word	98751
	.byte	11,30,239,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97055
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_STATUS',0,30,244,3,3
	.word	98814
	.byte	11,30,247,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96888
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_STATUS1',0,30,252,3,3
	.word	98879
	.byte	11,30,255,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97350
	.byte	4,2,35,0,0,28
	.byte	'Ifx_QSPI_XXLCON',0,30,132,4,3
	.word	98945
	.byte	9
	.byte	'_Ifx_VADC_ACCEN0_Bits',0,31,49,16,4,10
	.byte	'EN0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_ACCEN0_Bits',0,31,83,3
	.word	99010
	.byte	9
	.byte	'_Ifx_VADC_ACCPROT0_Bits',0,31,86,16,4,10
	.byte	'APC0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'APC1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'APC2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'APC3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'APEM',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'API0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'API1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'API2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'API3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	11,1,2,35,2,10
	.byte	'APGC',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_ACCPROT0_Bits',0,31,100,3
	.word	99569
	.byte	9
	.byte	'_Ifx_VADC_ACCPROT1_Bits',0,31,103,16,4,10
	.byte	'APS0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'APS1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'APS2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'APS3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	11,1,2,35,0,10
	.byte	'APTF',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'APR0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'APR1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'APR2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'APR3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,28
	.byte	'Ifx_VADC_ACCPROT1_Bits',0,31,116,3
	.word	99835
	.byte	9
	.byte	'_Ifx_VADC_BRSCTRL_Bits',0,31,119,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_VADC_BRSCTRL_Bits',0,31,132,1,3
	.word	100085
	.byte	9
	.byte	'_Ifx_VADC_BRSMR_Bits',0,31,135,1,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SCAN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'LDM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CLRPND',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'LDEV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,28
	.byte	'Ifx_VADC_BRSMR_Bits',0,31,149,1,3
	.word	100352
	.byte	9
	.byte	'_Ifx_VADC_BRSPND_Bits',0,31,152,1,16,4,10
	.byte	'CHPNDGy',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_VADC_BRSPND_Bits',0,31,155,1,3
	.word	100625
	.byte	9
	.byte	'_Ifx_VADC_BRSSEL_Bits',0,31,158,1,16,4,10
	.byte	'CHSELGy',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_VADC_BRSSEL_Bits',0,31,161,1,3
	.word	100703
	.byte	9
	.byte	'_Ifx_VADC_CLC_Bits',0,31,164,1,16,4,10
	.byte	'DISR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_VADC_CLC_Bits',0,31,171,1,3
	.word	100781
	.byte	9
	.byte	'_Ifx_VADC_EMUXSEL_Bits',0,31,174,1,16,4,10
	.byte	'EMUXGRP0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'EMUXGRP1',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_VADC_EMUXSEL_Bits',0,31,179,1,3
	.word	100926
	.byte	9
	.byte	'_Ifx_VADC_G_ALIAS_Bits',0,31,182,1,16,4,10
	.byte	'ALIAS0',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'ALIAS1',0,1
	.word	305
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	282
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_ALIAS_Bits',0,31,188,1,3
	.word	101049
	.byte	9
	.byte	'_Ifx_VADC_G_ARBCFG_Bits',0,31,191,1,16,4,10
	.byte	'ANONC',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'ARBRND',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ARBM',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'ANONS',0,1
	.word	305
	.byte	2,6,2,35,2,10
	.byte	'CSRC',0,1
	.word	305
	.byte	2,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'SYNRUN',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'CAL',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'CALS',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'BUSY',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'SAMPLE',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_ARBCFG_Bits',0,31,208,1,3
	.word	101191
	.byte	9
	.byte	'_Ifx_VADC_G_ARBPR_Bits',0,31,211,1,16,4,10
	.byte	'PRIO0',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CSM0',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'PRIO1',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CSM1',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'PRIO2',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CSM2',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'PRIO3',0,1
	.word	305
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'CSM3',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	305
	.byte	8,0,2,35,2,10
	.byte	'ASEN0',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'ASEN1',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'ASEN2',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'ASEN3',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_ARBPR_Bits',0,31,231,1,3
	.word	101526
	.byte	9
	.byte	'_Ifx_VADC_G_ASCTRL_Bits',0,31,234,1,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'TMEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TMWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_ASCTRL_Bits',0,31,250,1,3
	.word	101923
	.byte	9
	.byte	'_Ifx_VADC_G_ASMR_Bits',0,31,253,1,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'SCAN',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'LDM',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CLRPND',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'LDEV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	6,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_ASMR_Bits',0,31,139,2,3
	.word	102248
	.byte	9
	.byte	'_Ifx_VADC_G_ASPND_Bits',0,31,142,2,16,4,10
	.byte	'CHPND',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_ASPND_Bits',0,31,145,2,3
	.word	102523
	.byte	9
	.byte	'_Ifx_VADC_G_ASSEL_Bits',0,31,148,2,16,4,10
	.byte	'CHSEL',0,4
	.word	282
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_ASSEL_Bits',0,31,151,2,3
	.word	102601
	.byte	9
	.byte	'_Ifx_VADC_G_BFL_Bits',0,31,154,2,16,4,10
	.byte	'BFL0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'BFL1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BFL2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'BFL3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'BFA0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'BFA1',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'BFA2',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'BFA3',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'BFI0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'BFI1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'BFI2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'BFI3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_BFL_Bits',0,31,171,2,3
	.word	102679
	.byte	9
	.byte	'_Ifx_VADC_G_BFLC_Bits',0,31,174,2,16,4,10
	.byte	'BFM0',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BFM1',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'BFM2',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'BFM3',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_BFLC_Bits',0,31,181,2,3
	.word	102996
	.byte	9
	.byte	'_Ifx_VADC_G_BFLNP_Bits',0,31,184,2,16,4,10
	.byte	'BFL0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'BFL1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'BFL2NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'BFL3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_BFLNP_Bits',0,31,191,2,3
	.word	103142
	.byte	9
	.byte	'_Ifx_VADC_G_BFLS_Bits',0,31,194,2,16,4,10
	.byte	'BFC0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'BFC1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'BFC2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'BFC3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'BFS0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'BFS1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'BFS2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'BFS3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_BFLS_Bits',0,31,206,2,3
	.word	103298
	.byte	9
	.byte	'_Ifx_VADC_G_BOUND_Bits',0,31,209,2,16,4,10
	.byte	'BOUNDARY0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'BOUNDARY1',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_BOUND_Bits',0,31,215,2,3
	.word	103530
	.byte	9
	.byte	'_Ifx_VADC_G_CEFCLR_Bits',0,31,218,2,16,4,10
	.byte	'CEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CEV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CEV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CEV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CEV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CEV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CEV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'CEV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'CEV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CEV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CEV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CEV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'CEV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_CEFCLR_Bits',0,31,237,2,3
	.word	103679
	.byte	9
	.byte	'_Ifx_VADC_G_CEFLAG_Bits',0,31,240,2,16,4,10
	.byte	'CEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'CEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'CEV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'CEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'CEV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'CEV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'CEV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'CEV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'CEV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'CEV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'CEV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CEV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CEV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'CEV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'CEV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_CEFLAG_Bits',0,31,131,3,3
	.word	104027
	.byte	9
	.byte	'_Ifx_VADC_G_CEVNP0_Bits',0,31,134,3,16,4,10
	.byte	'CEV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'CEV1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'CEV2NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CEV3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'CEV4NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CEV5NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'CEV6NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'CEV7NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_CEVNP0_Bits',0,31,144,3,3
	.word	104375
	.byte	9
	.byte	'_Ifx_VADC_G_CEVNP1_Bits',0,31,147,3,16,4,10
	.byte	'CEV8NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'CEV9NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'CEV10NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'CEV11NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'CEV12NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CEV13NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'CEV14NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'CEV15NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_CEVNP1_Bits',0,31,157,3,3
	.word	104582
	.byte	9
	.byte	'_Ifx_VADC_G_CHASS_Bits',0,31,160,3,16,4,10
	.byte	'ASSCH0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ASSCH1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ASSCH2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ASSCH3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ASSCH4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ASSCH5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ASSCH6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ASSCH7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ASSCH8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ASSCH9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ASSCH10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'ASSCH11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'ASSCH12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'ASSCH13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'ASSCH14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'ASSCH15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'ASSCH16',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'ASSCH17',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'ASSCH18',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'ASSCH19',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'ASSCH20',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'ASSCH21',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'ASSCH22',0,1
	.word	305
	.byte	1,1,2,35,2,10
	.byte	'ASSCH23',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'ASSCH24',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'ASSCH25',0,1
	.word	305
	.byte	1,6,2,35,3,10
	.byte	'ASSCH26',0,1
	.word	305
	.byte	1,5,2,35,3,10
	.byte	'ASSCH27',0,1
	.word	305
	.byte	1,4,2,35,3,10
	.byte	'ASSCH28',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'ASSCH29',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'ASSCH30',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'ASSCH31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_CHASS_Bits',0,31,194,3,3
	.word	104795
	.byte	9
	.byte	'_Ifx_VADC_G_CHCTR_Bits',0,31,197,3,16,4,10
	.byte	'ICLSEL',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'BNDSELL',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'BNDSELU',0,1
	.word	305
	.byte	2,0,2,35,0,10
	.byte	'CHEVMODE',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'SYNC',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'REFSEL',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'BNDSELX',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RESREG',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'RESTBS',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'RESPOS',0,1
	.word	305
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	856
	.byte	6,4,2,35,2,10
	.byte	'BWDCH',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'BWDEN',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_CHCTR_Bits',0,31,214,3,3
	.word	105454
	.byte	9
	.byte	'_Ifx_VADC_G_EMUXCTR_Bits',0,31,217,3,16,4,10
	.byte	'EMUXSET',0,1
	.word	305
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'EMUXACT',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'EMUXCH',0,2
	.word	856
	.byte	10,6,2,35,2,10
	.byte	'EMUXMODE',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'EMXCOD',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'EMXST',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'EMXCSS',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'EMXWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_EMUXCTR_Bits',0,31,229,3,3
	.word	105800
	.byte	9
	.byte	'_Ifx_VADC_G_Q0R0_Bits',0,31,232,3,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_Q0R0_Bits',0,31,240,3,3
	.word	106056
	.byte	9
	.byte	'_Ifx_VADC_G_Q0R3_Bits',0,31,243,3,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_Q0R3_Bits',0,31,128,4,3
	.word	106215
	.byte	9
	.byte	'_Ifx_VADC_G_QBUR0_Bits',0,31,131,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_QBUR0_Bits',0,31,139,4,3
	.word	106455
	.byte	9
	.byte	'_Ifx_VADC_G_QBUR3_Bits',0,31,142,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'V',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_QBUR3_Bits',0,31,155,4,3
	.word	106616
	.byte	9
	.byte	'_Ifx_VADC_G_QCTRL0_Bits',0,31,158,4,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'TMEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TMWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_QCTRL0_Bits',0,31,174,4,3
	.word	106858
	.byte	9
	.byte	'_Ifx_VADC_G_QCTRL3_Bits',0,31,177,4,16,4,10
	.byte	'SRCRESREG',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'XTSEL',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'XTLVL',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'XTMODE',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'XTWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'GTSEL',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'GTLVL',0,1
	.word	305
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	2,1,2,35,2,10
	.byte	'GTWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'TMEN',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'TMWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_QCTRL3_Bits',0,31,193,4,3
	.word	107183
	.byte	9
	.byte	'_Ifx_VADC_G_QINR0_Bits',0,31,196,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	282
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_QINR0_Bits',0,31,203,4,3
	.word	107508
	.byte	9
	.byte	'_Ifx_VADC_G_QINR3_Bits',0,31,206,4,16,4,10
	.byte	'REQCHNR',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'RF',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ENSI',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'EXTR',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	282
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_QINR3_Bits',0,31,219,4,3
	.word	107656
	.byte	9
	.byte	'_Ifx_VADC_G_QMR0_Bits',0,31,222,4,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'CLRV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TREV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'FLUSH',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_QMR0_Bits',0,31,234,4,3
	.word	107907
	.byte	9
	.byte	'_Ifx_VADC_G_QMR3_Bits',0,31,237,4,16,4,10
	.byte	'ENGT',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'ENTR',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	305
	.byte	5,0,2,35,0,10
	.byte	'CLRV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'TREV',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'FLUSH',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'CEV',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'RPTDIS',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	856
	.byte	15,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_QMR3_Bits',0,31,249,4,3
	.word	108148
	.byte	9
	.byte	'_Ifx_VADC_G_QSR0_Bits',0,31,252,4,16,4,10
	.byte	'FILL',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EMPTY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_QSR0_Bits',0,31,133,5,3
	.word	108389
	.byte	9
	.byte	'_Ifx_VADC_G_QSR3_Bits',0,31,136,5,16,4,10
	.byte	'FILL',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EMPTY',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REQGT',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'EV',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	282
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_QSR3_Bits',0,31,145,5,3
	.word	108578
	.byte	9
	.byte	'_Ifx_VADC_G_RCR_Bits',0,31,148,5,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRCTR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'DMM',0,1
	.word	305
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'WFR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'FEN',0,1
	.word	305
	.byte	2,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	4,1,2,35,3,10
	.byte	'SRGEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_RCR_Bits',0,31,158,5,3
	.word	108767
	.byte	9
	.byte	'_Ifx_VADC_G_REFCLR_Bits',0,31,161,5,16,4,10
	.byte	'REV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'REV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'REV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'REV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'REV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'REV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'REV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'REV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'REV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'REV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'REV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'REV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'REV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'REV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_REFCLR_Bits',0,31,180,5,3
	.word	108971
	.byte	9
	.byte	'_Ifx_VADC_G_REFLAG_Bits',0,31,183,5,16,4,10
	.byte	'REV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'REV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'REV2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'REV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'REV4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'REV5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'REV6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'REV7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'REV8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'REV9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'REV10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'REV11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'REV12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'REV13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'REV14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'REV15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_REFLAG_Bits',0,31,202,5,3
	.word	109319
	.byte	9
	.byte	'_Ifx_VADC_G_RES_Bits',0,31,205,5,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRC',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_RES_Bits',0,31,214,5,3
	.word	109667
	.byte	9
	.byte	'_Ifx_VADC_G_RESD_Bits',0,31,217,5,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRC',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_RESD_Bits',0,31,226,5,3
	.word	109833
	.byte	9
	.byte	'_Ifx_VADC_G_REVNP0_Bits',0,31,229,5,16,4,10
	.byte	'REV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'REV1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'REV2NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'REV3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'REV4NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'REV5NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'REV6NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'REV7NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_REVNP0_Bits',0,31,239,5,3
	.word	110001
	.byte	9
	.byte	'_Ifx_VADC_G_REVNP1_Bits',0,31,242,5,16,4,10
	.byte	'REV8NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'REV9NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'REV10NP',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'REV11NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'REV12NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'REV13NP',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'REV14NP',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'REV15NP',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_REVNP1_Bits',0,31,252,5,3
	.word	110208
	.byte	9
	.byte	'_Ifx_VADC_G_RRASS_Bits',0,31,255,5,16,4,10
	.byte	'ASSRR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'ASSRR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'ASSRR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'ASSRR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'ASSRR4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'ASSRR5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'ASSRR6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'ASSRR7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'ASSRR8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ASSRR9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ASSRR10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'ASSRR11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'ASSRR12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'ASSRR13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'ASSRR14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'ASSRR15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_RRASS_Bits',0,31,146,6,3
	.word	110421
	.byte	9
	.byte	'_Ifx_VADC_G_SEFCLR_Bits',0,31,149,6,16,4,10
	.byte	'SEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_SEFCLR_Bits',0,31,156,6,3
	.word	110799
	.byte	9
	.byte	'_Ifx_VADC_G_SEFLAG_Bits',0,31,159,6,16,4,10
	.byte	'SEV0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'SEV1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'SEV3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_SEFLAG_Bits',0,31,166,6,3
	.word	110954
	.byte	9
	.byte	'_Ifx_VADC_G_SEVNP_Bits',0,31,169,6,16,4,10
	.byte	'SEV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'SEV1NP',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	305
	.byte	4,4,2,35,1,10
	.byte	'SEV3NP',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_SEVNP_Bits',0,31,176,6,3
	.word	111109
	.byte	9
	.byte	'_Ifx_VADC_G_SRACT_Bits',0,31,179,6,16,4,10
	.byte	'AGSR0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'AGSR1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'AGSR2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'AGSR3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'ASSR0',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'ASSR1',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'ASSR2',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'ASSR3',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	282
	.byte	20,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_SRACT_Bits',0,31,191,6,3
	.word	111269
	.byte	9
	.byte	'_Ifx_VADC_G_SYNCTR_Bits',0,31,194,6,16,4,10
	.byte	'STSEL',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	305
	.byte	2,4,2,35,0,10
	.byte	'EVALR1',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'EVALR2',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'EVALR3',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	282
	.byte	25,0,2,35,0,0,28
	.byte	'Ifx_VADC_G_SYNCTR_Bits',0,31,202,6,3
	.word	111511
	.byte	9
	.byte	'_Ifx_VADC_G_TRCTR_Bits',0,31,205,6,16,4,10
	.byte	'TSC',0,1
	.word	305
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	856
	.byte	8,2,2,35,0,10
	.byte	'Q3ACT',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'OV',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'TSCSET',0,1
	.word	305
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	305
	.byte	2,0,2,35,2,10
	.byte	'ITSEL',0,1
	.word	305
	.byte	2,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	305
	.byte	2,4,2,35,3,10
	.byte	'SRDIS',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	305
	.byte	2,1,2,35,3,10
	.byte	'COV',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_G_TRCTR_Bits',0,31,218,6,3
	.word	111689
	.byte	9
	.byte	'_Ifx_VADC_G_VFR_Bits',0,31,221,6,16,4,10
	.byte	'VF0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'VF1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'VF2',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'VF3',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'VF4',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'VF5',0,1
	.word	305
	.byte	1,2,2,35,0,10
	.byte	'VF6',0,1
	.word	305
	.byte	1,1,2,35,0,10
	.byte	'VF7',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'VF8',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'VF9',0,1
	.word	305
	.byte	1,6,2,35,1,10
	.byte	'VF10',0,1
	.word	305
	.byte	1,5,2,35,1,10
	.byte	'VF11',0,1
	.word	305
	.byte	1,4,2,35,1,10
	.byte	'VF12',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'VF13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'VF14',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'VF15',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_G_VFR_Bits',0,31,240,6,3
	.word	111954
	.byte	9
	.byte	'_Ifx_VADC_GLOBBOUND_Bits',0,31,243,6,16,4,10
	.byte	'BOUNDARY0',0,2
	.word	856
	.byte	12,4,2,35,0,10
	.byte	'reserved_12',0,1
	.word	305
	.byte	4,0,2,35,1,10
	.byte	'BOUNDARY1',0,2
	.word	856
	.byte	12,4,2,35,2,10
	.byte	'reserved_28',0,1
	.word	305
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBBOUND_Bits',0,31,249,6,3
	.word	112280
	.byte	9
	.byte	'_Ifx_VADC_GLOBCFG_Bits',0,31,252,6,16,4,10
	.byte	'DIVA',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	2,1,2,35,0,10
	.byte	'DCMSB',0,1
	.word	305
	.byte	1,0,2,35,0,10
	.byte	'DIVD',0,1
	.word	305
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	305
	.byte	2,4,2,35,1,10
	.byte	'REFPC',0,1
	.word	305
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	305
	.byte	1,2,2,35,1,10
	.byte	'LOSUP',0,1
	.word	305
	.byte	1,1,2,35,1,10
	.byte	'DIVWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'DPCAL0',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'DPCAL1',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'DPCAL2',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'DPCAL3',0,1
	.word	305
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	11,1,2,35,2,10
	.byte	'SUCAL',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBCFG_Bits',0,31,141,7,3
	.word	112433
	.byte	9
	.byte	'_Ifx_VADC_GLOBEFLAG_Bits',0,31,144,7,16,4,10
	.byte	'SEVGLB',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	305
	.byte	7,0,2,35,0,10
	.byte	'REVGLB',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	305
	.byte	7,0,2,35,1,10
	.byte	'SEVGLBCLR',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	305
	.byte	7,0,2,35,2,10
	.byte	'REVGLBCLR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBEFLAG_Bits',0,31,154,7,3
	.word	112774
	.byte	9
	.byte	'_Ifx_VADC_GLOBEVNP_Bits',0,31,157,7,16,4,10
	.byte	'SEV0NP',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	856
	.byte	12,0,2,35,0,10
	.byte	'REV0NP',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	856
	.byte	12,0,2,35,2,0,28
	.byte	'Ifx_VADC_GLOBEVNP_Bits',0,31,163,7,3
	.word	113007
	.byte	9
	.byte	'_Ifx_VADC_GLOBRCR_Bits',0,31,166,7,16,4,10
	.byte	'reserved_0',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'DRCTR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,1
	.word	305
	.byte	4,0,2,35,2,10
	.byte	'WFR',0,1
	.word	305
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	305
	.byte	6,1,2,35,3,10
	.byte	'SRGEN',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBRCR_Bits',0,31,174,7,3
	.word	113151
	.byte	9
	.byte	'_Ifx_VADC_GLOBRES_Bits',0,31,177,7,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'GNR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBRES_Bits',0,31,186,7,3
	.word	113329
	.byte	9
	.byte	'_Ifx_VADC_GLOBRESD_Bits',0,31,189,7,16,4,10
	.byte	'RESULT',0,2
	.word	856
	.byte	16,0,2,35,0,10
	.byte	'GNR',0,1
	.word	305
	.byte	4,4,2,35,2,10
	.byte	'CHNR',0,2
	.word	856
	.byte	5,7,2,35,2,10
	.byte	'EMUX',0,1
	.word	305
	.byte	3,4,2,35,3,10
	.byte	'CRS',0,1
	.word	305
	.byte	2,2,2,35,3,10
	.byte	'FCR',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'VF',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBRESD_Bits',0,31,198,7,3
	.word	113499
	.byte	9
	.byte	'_Ifx_VADC_GLOBTE_Bits',0,31,201,7,16,4,10
	.byte	'TFEG0',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'TFEG1',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBTE_Bits',0,31,206,7,3
	.word	113671
	.byte	9
	.byte	'_Ifx_VADC_GLOBTF_Bits',0,31,209,7,16,4,10
	.byte	'CDCH',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'CDGR',0,1
	.word	305
	.byte	4,0,2,35,0,10
	.byte	'CDEN',0,1
	.word	305
	.byte	1,7,2,35,1,10
	.byte	'CDSEL',0,1
	.word	305
	.byte	2,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	4,1,2,35,1,10
	.byte	'CDWC',0,1
	.word	305
	.byte	1,0,2,35,1,10
	.byte	'PDD',0,1
	.word	305
	.byte	1,7,2,35,2,10
	.byte	'MDPD',0,1
	.word	305
	.byte	1,6,2,35,2,10
	.byte	'MDPU',0,1
	.word	305
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	305
	.byte	4,1,2,35,2,10
	.byte	'MDWC',0,1
	.word	305
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	305
	.byte	6,2,2,35,3,10
	.byte	'RCEN',0,1
	.word	305
	.byte	1,1,2,35,3,10
	.byte	'RCWC',0,1
	.word	305
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_VADC_GLOBTF_Bits',0,31,225,7,3
	.word	113786
	.byte	9
	.byte	'_Ifx_VADC_ICLASS_Bits',0,31,228,7,16,4,10
	.byte	'STCS',0,1
	.word	305
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	305
	.byte	3,0,2,35,0,10
	.byte	'CMS',0,1
	.word	305
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	305
	.byte	5,0,2,35,1,10
	.byte	'STCE',0,1
	.word	305
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	305
	.byte	3,0,2,35,2,10
	.byte	'CME',0,1
	.word	305
	.byte	3,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	305
	.byte	5,0,2,35,3,0,28
	.byte	'Ifx_VADC_ICLASS_Bits',0,31,238,7,3
	.word	114090
	.byte	9
	.byte	'_Ifx_VADC_ID_Bits',0,31,241,7,16,4,10
	.byte	'MODREV',0,1
	.word	305
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	305
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	856
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_VADC_ID_Bits',0,31,246,7,3
	.word	114302
	.byte	9
	.byte	'_Ifx_VADC_KRST0_Bits',0,31,249,7,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	282
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_VADC_KRST0_Bits',0,31,254,7,3
	.word	114411
	.byte	9
	.byte	'_Ifx_VADC_KRST1_Bits',0,31,129,8,16,4,10
	.byte	'RST',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_VADC_KRST1_Bits',0,31,133,8,3
	.word	114524
	.byte	9
	.byte	'_Ifx_VADC_KRSTCLR_Bits',0,31,136,8,16,4,10
	.byte	'CLR',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	282
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_VADC_KRSTCLR_Bits',0,31,140,8,3
	.word	114618
	.byte	9
	.byte	'_Ifx_VADC_OCS_Bits',0,31,143,8,16,4,10
	.byte	'TGS',0,1
	.word	305
	.byte	2,6,2,35,0,10
	.byte	'TGB',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'TG_P',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	282
	.byte	20,8,2,35,0,10
	.byte	'SUS',0,1
	.word	305
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	305
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	305
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	305
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_VADC_OCS_Bits',0,31,153,8,3
	.word	114716
	.byte	11,31,161,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	99010
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_ACCEN0',0,31,166,8,3
	.word	114910
	.byte	11,31,169,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	99569
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_ACCPROT0',0,31,174,8,3
	.word	114975
	.byte	11,31,177,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	99835
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_ACCPROT1',0,31,182,8,3
	.word	115042
	.byte	11,31,185,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100085
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_BRSCTRL',0,31,190,8,3
	.word	115109
	.byte	11,31,193,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100352
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_BRSMR',0,31,198,8,3
	.word	115175
	.byte	11,31,201,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100625
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_BRSPND',0,31,206,8,3
	.word	115239
	.byte	11,31,209,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100703
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_BRSSEL',0,31,214,8,3
	.word	115304
	.byte	11,31,217,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100781
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_CLC',0,31,222,8,3
	.word	115369
	.byte	11,31,225,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100926
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_EMUXSEL',0,31,230,8,3
	.word	115431
	.byte	11,31,233,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101049
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ALIAS',0,31,238,8,3
	.word	115497
	.byte	11,31,241,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101191
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ARBCFG',0,31,246,8,3
	.word	115563
	.byte	11,31,249,8,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101526
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ARBPR',0,31,254,8,3
	.word	115630
	.byte	11,31,129,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101923
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ASCTRL',0,31,134,9,3
	.word	115696
	.byte	11,31,137,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102248
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ASMR',0,31,142,9,3
	.word	115763
	.byte	11,31,145,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102523
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ASPND',0,31,150,9,3
	.word	115828
	.byte	11,31,153,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102601
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_ASSEL',0,31,158,9,3
	.word	115894
	.byte	11,31,161,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102679
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_BFL',0,31,166,9,3
	.word	115960
	.byte	11,31,169,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102996
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_BFLC',0,31,174,9,3
	.word	116024
	.byte	11,31,177,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103142
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_BFLNP',0,31,182,9,3
	.word	116089
	.byte	11,31,185,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103298
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_BFLS',0,31,190,9,3
	.word	116155
	.byte	11,31,193,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103530
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_BOUND',0,31,198,9,3
	.word	116220
	.byte	11,31,201,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103679
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_CEFCLR',0,31,206,9,3
	.word	116286
	.byte	11,31,209,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104027
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_CEFLAG',0,31,214,9,3
	.word	116353
	.byte	11,31,217,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104375
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_CEVNP0',0,31,222,9,3
	.word	116420
	.byte	11,31,225,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104582
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_CEVNP1',0,31,230,9,3
	.word	116487
	.byte	11,31,233,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104795
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_CHASS',0,31,238,9,3
	.word	116554
	.byte	11,31,241,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105454
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_CHCTR',0,31,246,9,3
	.word	116620
	.byte	11,31,249,9,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105800
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_EMUXCTR',0,31,254,9,3
	.word	116686
	.byte	11,31,129,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106056
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_Q0R0',0,31,134,10,3
	.word	116754
	.byte	11,31,137,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106215
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_Q0R3',0,31,142,10,3
	.word	116819
	.byte	11,31,145,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106455
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QBUR0',0,31,150,10,3
	.word	116884
	.byte	11,31,153,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106616
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QBUR3',0,31,158,10,3
	.word	116950
	.byte	11,31,161,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106858
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QCTRL0',0,31,166,10,3
	.word	117016
	.byte	11,31,169,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107183
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QCTRL3',0,31,174,10,3
	.word	117083
	.byte	11,31,177,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107508
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QINR0',0,31,182,10,3
	.word	117150
	.byte	11,31,185,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107656
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QINR3',0,31,190,10,3
	.word	117216
	.byte	11,31,193,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107907
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QMR0',0,31,198,10,3
	.word	117282
	.byte	11,31,201,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108148
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QMR3',0,31,206,10,3
	.word	117347
	.byte	11,31,209,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108389
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QSR0',0,31,214,10,3
	.word	117412
	.byte	11,31,217,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108578
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_QSR3',0,31,222,10,3
	.word	117477
	.byte	11,31,225,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108767
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_RCR',0,31,230,10,3
	.word	117542
	.byte	11,31,233,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108971
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_REFCLR',0,31,238,10,3
	.word	117606
	.byte	11,31,241,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109319
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_REFLAG',0,31,246,10,3
	.word	117673
	.byte	11,31,249,10,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109667
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_RES',0,31,254,10,3
	.word	117740
	.byte	11,31,129,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109833
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_RESD',0,31,134,11,3
	.word	117804
	.byte	11,31,137,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110001
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_REVNP0',0,31,142,11,3
	.word	117869
	.byte	11,31,145,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110208
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_REVNP1',0,31,150,11,3
	.word	117936
	.byte	11,31,153,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110421
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_RRASS',0,31,158,11,3
	.word	118003
	.byte	11,31,161,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110799
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_SEFCLR',0,31,166,11,3
	.word	118069
	.byte	11,31,169,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110954
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_SEFLAG',0,31,174,11,3
	.word	118136
	.byte	11,31,177,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111109
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_SEVNP',0,31,182,11,3
	.word	118203
	.byte	11,31,185,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111269
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_SRACT',0,31,190,11,3
	.word	118269
	.byte	11,31,193,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111511
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_SYNCTR',0,31,198,11,3
	.word	118335
	.byte	11,31,201,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111689
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_TRCTR',0,31,206,11,3
	.word	118402
	.byte	11,31,209,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111954
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_G_VFR',0,31,214,11,3
	.word	118468
	.byte	11,31,217,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	112280
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBBOUND',0,31,222,11,3
	.word	118532
	.byte	11,31,225,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	112433
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBCFG',0,31,230,11,3
	.word	118600
	.byte	11,31,233,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	112774
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBEFLAG',0,31,238,11,3
	.word	118666
	.byte	11,31,241,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113007
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBEVNP',0,31,246,11,3
	.word	118734
	.byte	11,31,249,11,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113151
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBRCR',0,31,254,11,3
	.word	118801
	.byte	11,31,129,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113329
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBRES',0,31,134,12,3
	.word	118867
	.byte	11,31,137,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113499
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBRESD',0,31,142,12,3
	.word	118933
	.byte	11,31,145,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113671
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBTE',0,31,150,12,3
	.word	119000
	.byte	11,31,153,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113786
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_GLOBTF',0,31,158,12,3
	.word	119065
	.byte	11,31,161,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114090
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_ICLASS',0,31,166,12,3
	.word	119130
	.byte	11,31,169,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114302
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_ID',0,31,174,12,3
	.word	119195
	.byte	11,31,177,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114411
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_KRST0',0,31,182,12,3
	.word	119256
	.byte	11,31,185,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114524
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_KRST1',0,31,190,12,3
	.word	119320
	.byte	11,31,193,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114618
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_KRSTCLR',0,31,198,12,3
	.word	119384
	.byte	11,31,201,12,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114716
	.byte	4,2,35,0,0,28
	.byte	'Ifx_VADC_OCS',0,31,206,12,3
	.word	119450
	.byte	14,8
	.word	119130
	.byte	15,1,0,11,31,241,12,5,4,12
	.byte	'QBUR0',0
	.word	116884
	.byte	4,2,35,0,12
	.byte	'QINR0',0
	.word	117150
	.byte	4,2,35,0,0,11,31,129,13,5,4,12
	.byte	'QBUR3',0
	.word	116950
	.byte	4,2,35,0,12
	.byte	'QINR3',0
	.word	117216
	.byte	4,2,35,0,0,14,48
	.word	116620
	.byte	15,11,0,14,64
	.word	117542
	.byte	15,15,0,14,64
	.word	305
	.byte	15,63,0,14,64
	.word	117740
	.byte	15,15,0,14,64
	.word	117804
	.byte	15,15,0,9
	.byte	'_Ifx_VADC_G',0,31,217,12,25,128,8,12
	.byte	'ARBCFG',0
	.word	115563
	.byte	4,2,35,0,12
	.byte	'ARBPR',0
	.word	115630
	.byte	4,2,35,4,12
	.byte	'CHASS',0
	.word	116554
	.byte	4,2,35,8,12
	.byte	'RRASS',0
	.word	118003
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	59682
	.byte	16,2,35,16,12
	.byte	'ICLASS',0
	.word	119512
	.byte	8,2,35,32,12
	.byte	'reserved_28',0
	.word	4476
	.byte	8,2,35,40,12
	.byte	'ALIAS',0
	.word	115497
	.byte	4,2,35,48,12
	.byte	'reserved_34',0
	.word	2657
	.byte	4,2,35,52,12
	.byte	'BOUND',0
	.word	116220
	.byte	4,2,35,56,12
	.byte	'reserved_3C',0
	.word	2657
	.byte	4,2,35,60,12
	.byte	'SYNCTR',0
	.word	118335
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	2657
	.byte	4,2,35,68,12
	.byte	'BFL',0
	.word	115960
	.byte	4,2,35,72,12
	.byte	'BFLS',0
	.word	116155
	.byte	4,2,35,76,12
	.byte	'BFLC',0
	.word	116024
	.byte	4,2,35,80,12
	.byte	'BFLNP',0
	.word	116089
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	14717
	.byte	40,2,35,88,12
	.byte	'QCTRL0',0
	.word	117016
	.byte	4,3,35,128,1,12
	.byte	'QMR0',0
	.word	117282
	.byte	4,3,35,132,1,12
	.byte	'QSR0',0
	.word	117412
	.byte	4,3,35,136,1,12
	.byte	'Q0R0',0
	.word	116754
	.byte	4,3,35,140,1,19
	.word	119521
	.byte	4,3,35,144,1,12
	.byte	'reserved_94',0
	.word	4816
	.byte	12,3,35,148,1,12
	.byte	'ASCTRL',0
	.word	115696
	.byte	4,3,35,160,1,12
	.byte	'ASMR',0
	.word	115763
	.byte	4,3,35,164,1,12
	.byte	'ASSEL',0
	.word	115894
	.byte	4,3,35,168,1,12
	.byte	'ASPND',0
	.word	115828
	.byte	4,3,35,172,1,12
	.byte	'reserved_B0',0
	.word	59682
	.byte	16,3,35,176,1,12
	.byte	'QCTRL3',0
	.word	117083
	.byte	4,3,35,192,1,12
	.byte	'QMR3',0
	.word	117347
	.byte	4,3,35,196,1,12
	.byte	'QSR3',0
	.word	117477
	.byte	4,3,35,200,1,12
	.byte	'Q0R3',0
	.word	116819
	.byte	4,3,35,204,1,19
	.word	119558
	.byte	4,3,35,208,1,12
	.byte	'TRCTR',0
	.word	118402
	.byte	4,3,35,212,1,12
	.byte	'reserved_D8',0
	.word	14717
	.byte	40,3,35,216,1,12
	.byte	'CEFLAG',0
	.word	116353
	.byte	4,3,35,128,2,12
	.byte	'REFLAG',0
	.word	117673
	.byte	4,3,35,132,2,12
	.byte	'SEFLAG',0
	.word	118136
	.byte	4,3,35,136,2,12
	.byte	'reserved_10C',0
	.word	2657
	.byte	4,3,35,140,2,12
	.byte	'CEFCLR',0
	.word	116286
	.byte	4,3,35,144,2,12
	.byte	'REFCLR',0
	.word	117606
	.byte	4,3,35,148,2,12
	.byte	'SEFCLR',0
	.word	118069
	.byte	4,3,35,152,2,12
	.byte	'reserved_11C',0
	.word	2657
	.byte	4,3,35,156,2,12
	.byte	'CEVNP0',0
	.word	116420
	.byte	4,3,35,160,2,12
	.byte	'CEVNP1',0
	.word	116487
	.byte	4,3,35,164,2,12
	.byte	'reserved_128',0
	.word	4476
	.byte	8,3,35,168,2,12
	.byte	'REVNP0',0
	.word	117869
	.byte	4,3,35,176,2,12
	.byte	'REVNP1',0
	.word	117936
	.byte	4,3,35,180,2,12
	.byte	'reserved_138',0
	.word	4476
	.byte	8,3,35,184,2,12
	.byte	'SEVNP',0
	.word	118203
	.byte	4,3,35,192,2,12
	.byte	'reserved_144',0
	.word	2657
	.byte	4,3,35,196,2,12
	.byte	'SRACT',0
	.word	118269
	.byte	4,3,35,200,2,12
	.byte	'reserved_14C',0
	.word	91091
	.byte	36,3,35,204,2,12
	.byte	'EMUXCTR',0
	.word	116686
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	2657
	.byte	4,3,35,244,2,12
	.byte	'VFR',0
	.word	118468
	.byte	4,3,35,248,2,12
	.byte	'reserved_17C',0
	.word	2657
	.byte	4,3,35,252,2,12
	.byte	'CHCTR',0
	.word	119595
	.byte	48,3,35,128,3,12
	.byte	'reserved_1B0',0
	.word	91324
	.byte	80,3,35,176,3,12
	.byte	'RCR',0
	.word	119604
	.byte	64,3,35,128,4,12
	.byte	'reserved_240',0
	.word	119613
	.byte	64,3,35,192,4,12
	.byte	'RES',0
	.word	119622
	.byte	64,3,35,128,5,12
	.byte	'reserved_2C0',0
	.word	119613
	.byte	64,3,35,192,5,12
	.byte	'RESD',0
	.word	119631
	.byte	64,3,35,128,6,12
	.byte	'reserved_340',0
	.word	11406
	.byte	192,1,3,35,192,6,0,13
	.word	119640
	.byte	28
	.byte	'Ifx_VADC_G',0,31,167,13,3
	.word	120825
	.byte	17,15,131,1,9,1,18
	.byte	'IfxStm_Comparator_0',0,0,18
	.byte	'IfxStm_Comparator_1',0,1,0,28
	.byte	'IfxStm_Comparator',0,15,135,1,3
	.word	120850
	.byte	17,15,139,1,9,1,18
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,18
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,28
	.byte	'IfxStm_ComparatorInterrupt',0,15,143,1,3
	.word	120928
	.byte	17,15,147,1,9,1,18
	.byte	'IfxStm_ComparatorOffset_0',0,0,18
	.byte	'IfxStm_ComparatorOffset_1',0,1,18
	.byte	'IfxStm_ComparatorOffset_2',0,2,18
	.byte	'IfxStm_ComparatorOffset_3',0,3,18
	.byte	'IfxStm_ComparatorOffset_4',0,4,18
	.byte	'IfxStm_ComparatorOffset_5',0,5,18
	.byte	'IfxStm_ComparatorOffset_6',0,6,18
	.byte	'IfxStm_ComparatorOffset_7',0,7,18
	.byte	'IfxStm_ComparatorOffset_8',0,8,18
	.byte	'IfxStm_ComparatorOffset_9',0,9,18
	.byte	'IfxStm_ComparatorOffset_10',0,10,18
	.byte	'IfxStm_ComparatorOffset_11',0,11,18
	.byte	'IfxStm_ComparatorOffset_12',0,12,18
	.byte	'IfxStm_ComparatorOffset_13',0,13,18
	.byte	'IfxStm_ComparatorOffset_14',0,14,18
	.byte	'IfxStm_ComparatorOffset_15',0,15,18
	.byte	'IfxStm_ComparatorOffset_16',0,16,18
	.byte	'IfxStm_ComparatorOffset_17',0,17,18
	.byte	'IfxStm_ComparatorOffset_18',0,18,18
	.byte	'IfxStm_ComparatorOffset_19',0,19,18
	.byte	'IfxStm_ComparatorOffset_20',0,20,18
	.byte	'IfxStm_ComparatorOffset_21',0,21,18
	.byte	'IfxStm_ComparatorOffset_22',0,22,18
	.byte	'IfxStm_ComparatorOffset_23',0,23,18
	.byte	'IfxStm_ComparatorOffset_24',0,24,18
	.byte	'IfxStm_ComparatorOffset_25',0,25,18
	.byte	'IfxStm_ComparatorOffset_26',0,26,18
	.byte	'IfxStm_ComparatorOffset_27',0,27,18
	.byte	'IfxStm_ComparatorOffset_28',0,28,18
	.byte	'IfxStm_ComparatorOffset_29',0,29,18
	.byte	'IfxStm_ComparatorOffset_30',0,30,18
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,28
	.byte	'IfxStm_ComparatorOffset',0,15,181,1,3
	.word	121037
	.byte	17,15,185,1,9,1,18
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,18
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,18
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,18
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,18
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,18
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,18
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,18
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,18
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,18
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,18
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,18
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,18
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,18
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,18
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,18
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,18
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,18
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,18
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,18
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,18
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,18
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,18
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,18
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,18
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,18
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,18
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,18
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,18
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,18
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,18
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,18
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,28
	.byte	'IfxStm_ComparatorSize',0,15,219,1,3
	.word	121995
	.byte	17,15,224,1,9,1,18
	.byte	'IfxStm_SleepMode_enable',0,0,18
	.byte	'IfxStm_SleepMode_disable',0,1,0,28
	.byte	'IfxStm_SleepMode',0,15,228,1,3
	.word	123015
	.byte	20,15,240,1,9,12,12
	.byte	'comparator',0
	.word	120850
	.byte	1,2,35,0,12
	.byte	'comparatorInterrupt',0
	.word	120928
	.byte	1,2,35,1,12
	.byte	'compareOffset',0
	.word	121037
	.byte	1,2,35,2,12
	.byte	'compareSize',0
	.word	121995
	.byte	1,2,35,3,12
	.byte	'ticks',0
	.word	18819
	.byte	4,2,35,4,12
	.byte	'triggerPriority',0
	.word	856
	.byte	2,2,35,8,12
	.byte	'typeOfService',0
	.word	24627
	.byte	1,2,35,10,0,28
	.byte	'IfxStm_CompareConfig',0,15,249,1,3
	.word	123101
	.byte	14,16
	.word	305
	.byte	15,15,0,14,32
	.word	305
	.byte	15,31,0,20,32,25,9,80,12
	.byte	'spi_data_tx',0
	.word	123294
	.byte	16,2,35,0,12
	.byte	'spi_data_rx',0
	.word	123294
	.byte	16,2,35,16,12
	.byte	'spi_data_field_tx',0
	.word	123294
	.byte	16,2,35,32,12
	.byte	'spi_data_rx_2',0
	.word	123303
	.byte	32,2,35,48,0,28
	.byte	'App_spi_msg',0,32,35,2
	.word	123312
	.byte	20,32,37,9,1,10
	.byte	'Mcu_ver',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'Wakup_src',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'CurVehicleState',0,1
	.word	305
	.byte	2,0,2,35,0,0,28
	.byte	'DATA0_STRUCT',0,32,42,2
	.word	123430
	.byte	20,32,44,9,1,10
	.byte	'Veh_ACC',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'Veh_bat_out',0,1
	.word	305
	.byte	1,6,2,35,0,10
	.byte	'Emg_mode',0,1
	.word	305
	.byte	1,5,2,35,0,10
	.byte	'Impact_rec',0,1
	.word	305
	.byte	1,4,2,35,0,10
	.byte	'Soc_off_req',0,1
	.word	305
	.byte	1,3,2,35,0,10
	.byte	'Rear_Cam_input',0,1
	.word	305
	.byte	2,1,2,35,0,0,28
	.byte	'DATA4_STRUCT',0,32,53,2
	.word	123524
	.byte	20,32,55,9,1,10
	.byte	'SoC_OFF_Flag',0,1
	.word	305
	.byte	1,7,2,35,0,10
	.byte	'PRK_AX_SENS',0,1
	.word	305
	.byte	3,4,2,35,0,10
	.byte	'DRV_AX_SENS',0,1
	.word	305
	.byte	3,1,2,35,0,10
	.byte	'Reserved',0,1
	.word	305
	.byte	1,0,2,35,0,0,28
	.byte	'RX_DATA0',0,32,62,2
	.word	123684
	.byte	20,32,74,9,1,10
	.byte	'VEH_GEAR',0,1
	.word	305
	.byte	4,4,2,35,0,10
	.byte	'VEH_BRAKE',0,1
	.word	305
	.byte	2,2,2,35,0,10
	.byte	'RESERVED',0,1
	.word	305
	.byte	2,0,2,35,0,0,28
	.byte	'DATA5_STRUCT',0,32,80,2
	.word	123797
	.byte	30
	.byte	'g_spi_msg',0,32,95,20
	.word	123312
	.byte	1,1,9
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,33,45,16,4,10
	.byte	'EN0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'EN1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'EN2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'EN3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'EN4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'EN5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'EN6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'EN7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'EN8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'EN9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'EN10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'EN11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'EN12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'EN13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'EN14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'EN15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'EN16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'EN17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'EN18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'EN19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'EN20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'EN21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'EN22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'EN23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'EN24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'EN25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'EN26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'EN27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'EN28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'EN29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'EN30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'EN31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_ACCEN0_Bits',0,33,79,3
	.word	123905
	.byte	9
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,33,82,16,4,10
	.byte	'reserved_0',0,4
	.word	704
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SMU_ACCEN1_Bits',0,33,85,3
	.word	124462
	.byte	9
	.byte	'_Ifx_SMU_AD_Bits',0,33,88,16,4,10
	.byte	'DF0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DF1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'DF2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'DF3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'DF4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'DF5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'DF6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'DF7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'DF8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'DF9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'DF10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'DF11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'DF12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'DF13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'DF14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'DF15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'DF16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'DF17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'DF18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'DF19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'DF20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'DF21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'DF22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'DF23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'DF24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'DF25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'DF26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'DF27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'DF28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'DF29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'DF30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'DF31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_AD_Bits',0,33,122,3
	.word	124539
	.byte	9
	.byte	'_Ifx_SMU_AFCNT_Bits',0,33,125,16,4,10
	.byte	'FCNT',0,4
	.word	704
	.byte	4,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	704
	.byte	4,24,2,35,0,10
	.byte	'ACNT',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	14,2,2,35,0,10
	.byte	'FCO',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'ACO',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_AFCNT_Bits',0,33,133,1,3
	.word	125088
	.byte	9
	.byte	'_Ifx_SMU_AG_Bits',0,33,136,1,16,4,10
	.byte	'SF0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'SF1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'SF2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'SF3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'SF4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'SF5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'SF6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'SF7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'SF8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'SF9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'SF10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'SF11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'SF12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'SF13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'SF14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'SF15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'SF16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'SF17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'SF18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'SF19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'SF20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'SF21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'SF22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'SF23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'SF24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'SF25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'SF26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'SF27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'SF28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'SF29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'SF30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'SF31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_AG_Bits',0,33,170,1,3
	.word	125249
	.byte	9
	.byte	'_Ifx_SMU_AGC_Bits',0,33,173,1,16,4,10
	.byte	'IGCS0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'IGCS1',0,4
	.word	704
	.byte	3,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'IGCS2',0,4
	.word	704
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	704
	.byte	5,16,2,35,0,10
	.byte	'ICS',0,4
	.word	704
	.byte	3,13,2,35,0,10
	.byte	'reserved_19',0,4
	.word	704
	.byte	5,8,2,35,0,10
	.byte	'PES',0,4
	.word	704
	.byte	5,3,2,35,0,10
	.byte	'EFRST',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'reserved_30',0,4
	.word	704
	.byte	2,0,2,35,0,0,28
	.byte	'Ifx_SMU_AGC_Bits',0,33,186,1,3
	.word	125800
	.byte	9
	.byte	'_Ifx_SMU_AGCF_Bits',0,33,189,1,16,4,10
	.byte	'CF0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'CF1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'CF2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'CF3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'CF4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'CF5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'CF6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'CF7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'CF8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'CF9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'CF10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'CF11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'CF12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'CF13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'CF14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'CF15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'CF16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'CF17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'CF18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'CF19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'CF20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'CF21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'CF22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'CF23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'CF24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'CF25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'CF26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'CF27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'CF28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'CF29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'CF30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'CF31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_AGCF_Bits',0,33,223,1,3
	.word	126062
	.byte	9
	.byte	'_Ifx_SMU_AGFSP_Bits',0,33,226,1,16,4,10
	.byte	'FE0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'FE1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'FE2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'FE3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'FE4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'FE5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'FE6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'FE7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'FE8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'FE9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'FE10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'FE11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'FE12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'FE13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'FE14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'FE15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'FE16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'FE17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'FE18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'FE19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'FE20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'FE21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'FE22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'FE23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'FE24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'FE25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'FE26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'FE27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'FE28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'FE29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'FE30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'FE31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_AGFSP_Bits',0,33,132,2,3
	.word	126617
	.byte	9
	.byte	'_Ifx_SMU_CLC_Bits',0,33,135,2,16,4,10
	.byte	'DISR',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'DISS',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'FDIS',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'EDIS',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	704
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SMU_CLC_Bits',0,33,142,2,3
	.word	127174
	.byte	9
	.byte	'_Ifx_SMU_CMD_Bits',0,33,145,2,16,4,10
	.byte	'CMD',0,4
	.word	704
	.byte	4,28,2,35,0,10
	.byte	'ARG',0,4
	.word	704
	.byte	4,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SMU_CMD_Bits',0,33,150,2,3
	.word	127311
	.byte	9
	.byte	'_Ifx_SMU_DBG_Bits',0,33,153,2,16,4,10
	.byte	'SSM',0,4
	.word	704
	.byte	2,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SMU_DBG_Bits',0,33,157,2,3
	.word	127414
	.byte	9
	.byte	'_Ifx_SMU_FSP_Bits',0,33,160,2,16,4,10
	.byte	'PRE1',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'PRE2',0,4
	.word	704
	.byte	2,27,2,35,0,10
	.byte	'MODE',0,4
	.word	704
	.byte	2,25,2,35,0,10
	.byte	'PES',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'TFSP_LOW',0,4
	.word	704
	.byte	14,10,2,35,0,10
	.byte	'TFSP_HIGH',0,4
	.word	704
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_SMU_FSP_Bits',0,33,168,2,3
	.word	127502
	.byte	9
	.byte	'_Ifx_SMU_ID_Bits',0,33,171,2,16,4,10
	.byte	'MODREV',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'MODTYPE',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'MODNUMBER',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SMU_ID_Bits',0,33,176,2,3
	.word	127657
	.byte	9
	.byte	'_Ifx_SMU_KEYS_Bits',0,33,179,2,16,4,10
	.byte	'CFGLCK',0,4
	.word	704
	.byte	8,24,2,35,0,10
	.byte	'PERLCK',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SMU_KEYS_Bits',0,33,184,2,3
	.word	127764
	.byte	9
	.byte	'_Ifx_SMU_KRST0_Bits',0,33,187,2,16,4,10
	.byte	'RST',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'RSTSTAT',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SMU_KRST0_Bits',0,33,192,2,3
	.word	127876
	.byte	9
	.byte	'_Ifx_SMU_KRST1_Bits',0,33,195,2,16,4,10
	.byte	'RST',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SMU_KRST1_Bits',0,33,199,2,3
	.word	127987
	.byte	9
	.byte	'_Ifx_SMU_KRSTCLR_Bits',0,33,202,2,16,4,10
	.byte	'CLR',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SMU_KRSTCLR_Bits',0,33,206,2,3
	.word	128079
	.byte	9
	.byte	'_Ifx_SMU_OCS_Bits',0,33,209,2,16,4,10
	.byte	'TGS',0,4
	.word	704
	.byte	2,30,2,35,0,10
	.byte	'TGB',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'TG_P',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	704
	.byte	20,8,2,35,0,10
	.byte	'SUS',0,4
	.word	704
	.byte	4,4,2,35,0,10
	.byte	'SUS_P',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'SUSSTA',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'reserved_30',0,4
	.word	704
	.byte	2,0,2,35,0,0,28
	.byte	'Ifx_SMU_OCS_Bits',0,33,219,2,3
	.word	128175
	.byte	9
	.byte	'_Ifx_SMU_PCTL_Bits',0,33,222,2,16,4,10
	.byte	'HWDIR',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'HWEN',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	5,25,2,35,0,10
	.byte	'PCS',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	704
	.byte	8,16,2,35,0,10
	.byte	'PCFG',0,4
	.word	704
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SMU_PCTL_Bits',0,33,230,2,3
	.word	128367
	.byte	9
	.byte	'_Ifx_SMU_RMCTL_Bits',0,33,233,2,16,4,10
	.byte	'TE',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	704
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SMU_RMCTL_Bits',0,33,237,2,3
	.word	128528
	.byte	9
	.byte	'_Ifx_SMU_RMEF_Bits',0,33,240,2,16,4,10
	.byte	'EF0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'EF1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'EF2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'EF3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'EF4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'EF5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'EF6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'EF7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'EF8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'EF9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'EF10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'EF11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'EF12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'EF13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'EF14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'EF15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'EF16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'EF17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'EF18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'EF19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'EF20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'EF21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'EF22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'EF23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'EF24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'EF25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'EF26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'EF27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'EF28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'EF29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'EF30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'EF31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_RMEF_Bits',0,33,146,3,3
	.word	128619
	.byte	9
	.byte	'_Ifx_SMU_RMSTS_Bits',0,33,149,3,16,4,10
	.byte	'STS0',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'STS1',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'STS2',0,4
	.word	704
	.byte	1,29,2,35,0,10
	.byte	'STS3',0,4
	.word	704
	.byte	1,28,2,35,0,10
	.byte	'STS4',0,4
	.word	704
	.byte	1,27,2,35,0,10
	.byte	'STS5',0,4
	.word	704
	.byte	1,26,2,35,0,10
	.byte	'STS6',0,4
	.word	704
	.byte	1,25,2,35,0,10
	.byte	'STS7',0,4
	.word	704
	.byte	1,24,2,35,0,10
	.byte	'STS8',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'STS9',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'STS10',0,4
	.word	704
	.byte	1,21,2,35,0,10
	.byte	'STS11',0,4
	.word	704
	.byte	1,20,2,35,0,10
	.byte	'STS12',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'STS13',0,4
	.word	704
	.byte	1,18,2,35,0,10
	.byte	'STS14',0,4
	.word	704
	.byte	1,17,2,35,0,10
	.byte	'STS15',0,4
	.word	704
	.byte	1,16,2,35,0,10
	.byte	'STS16',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'STS17',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'STS18',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'STS19',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'STS20',0,4
	.word	704
	.byte	1,11,2,35,0,10
	.byte	'STS21',0,4
	.word	704
	.byte	1,10,2,35,0,10
	.byte	'STS22',0,4
	.word	704
	.byte	1,9,2,35,0,10
	.byte	'STS23',0,4
	.word	704
	.byte	1,8,2,35,0,10
	.byte	'STS24',0,4
	.word	704
	.byte	1,7,2,35,0,10
	.byte	'STS25',0,4
	.word	704
	.byte	1,6,2,35,0,10
	.byte	'STS26',0,4
	.word	704
	.byte	1,5,2,35,0,10
	.byte	'STS27',0,4
	.word	704
	.byte	1,4,2,35,0,10
	.byte	'STS28',0,4
	.word	704
	.byte	1,3,2,35,0,10
	.byte	'STS29',0,4
	.word	704
	.byte	1,2,2,35,0,10
	.byte	'STS30',0,4
	.word	704
	.byte	1,1,2,35,0,10
	.byte	'STS31',0,4
	.word	704
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_SMU_RMSTS_Bits',0,33,183,3,3
	.word	129174
	.byte	9
	.byte	'_Ifx_SMU_RTAC0_Bits',0,33,186,3,16,4,10
	.byte	'GID0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'ALID0',0,4
	.word	704
	.byte	5,24,2,35,0,10
	.byte	'GID1',0,4
	.word	704
	.byte	3,21,2,35,0,10
	.byte	'ALID1',0,4
	.word	704
	.byte	5,16,2,35,0,10
	.byte	'GID2',0,4
	.word	704
	.byte	3,13,2,35,0,10
	.byte	'ALID2',0,4
	.word	704
	.byte	5,8,2,35,0,10
	.byte	'GID3',0,4
	.word	704
	.byte	3,5,2,35,0,10
	.byte	'ALID3',0,4
	.word	704
	.byte	5,0,2,35,0,0,28
	.byte	'Ifx_SMU_RTAC0_Bits',0,33,196,3,3
	.word	129763
	.byte	9
	.byte	'_Ifx_SMU_RTAC1_Bits',0,33,199,3,16,4,10
	.byte	'GID0',0,4
	.word	704
	.byte	3,29,2,35,0,10
	.byte	'ALID0',0,4
	.word	704
	.byte	5,24,2,35,0,10
	.byte	'GID1',0,4
	.word	704
	.byte	3,21,2,35,0,10
	.byte	'ALID1',0,4
	.word	704
	.byte	5,16,2,35,0,10
	.byte	'GID2',0,4
	.word	704
	.byte	3,13,2,35,0,10
	.byte	'ALID2',0,4
	.word	704
	.byte	5,8,2,35,0,10
	.byte	'GID3',0,4
	.word	704
	.byte	3,5,2,35,0,10
	.byte	'ALID3',0,4
	.word	704
	.byte	5,0,2,35,0,0,28
	.byte	'Ifx_SMU_RTAC1_Bits',0,33,209,3,3
	.word	129950
	.byte	9
	.byte	'_Ifx_SMU_RTC_Bits',0,33,212,3,16,4,10
	.byte	'RT0E',0,4
	.word	704
	.byte	1,31,2,35,0,10
	.byte	'RT1E',0,4
	.word	704
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	704
	.byte	6,24,2,35,0,10
	.byte	'RTD',0,4
	.word	704
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SMU_RTC_Bits',0,33,218,3,3
	.word	130137
	.byte	9
	.byte	'_Ifx_SMU_STS_Bits',0,33,221,3,16,4,10
	.byte	'CMD',0,4
	.word	704
	.byte	4,28,2,35,0,10
	.byte	'ARG',0,4
	.word	704
	.byte	4,24,2,35,0,10
	.byte	'RES',0,4
	.word	704
	.byte	1,23,2,35,0,10
	.byte	'ASCE',0,4
	.word	704
	.byte	1,22,2,35,0,10
	.byte	'FSP',0,4
	.word	704
	.byte	2,20,2,35,0,10
	.byte	'FSTS',0,4
	.word	704
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	704
	.byte	3,16,2,35,0,10
	.byte	'RTS0',0,4
	.word	704
	.byte	1,15,2,35,0,10
	.byte	'RTME0',0,4
	.word	704
	.byte	1,14,2,35,0,10
	.byte	'RTS1',0,4
	.word	704
	.byte	1,13,2,35,0,10
	.byte	'RTME1',0,4
	.word	704
	.byte	1,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	704
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_SMU_STS_Bits',0,33,235,3,3
	.word	130257
	.byte	11,33,243,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123905
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_ACCEN0',0,33,248,3,3
	.word	130512
	.byte	11,33,251,3,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124462
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_ACCEN1',0,33,128,4,3
	.word	130576
	.byte	11,33,131,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124539
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_AD',0,33,136,4,3
	.word	130640
	.byte	11,33,139,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	125088
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_AFCNT',0,33,144,4,3
	.word	130700
	.byte	11,33,147,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	125249
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_AG',0,33,152,4,3
	.word	130763
	.byte	11,33,155,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	125800
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_AGC',0,33,160,4,3
	.word	130823
	.byte	11,33,163,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	126062
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_AGCF',0,33,168,4,3
	.word	130884
	.byte	11,33,171,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	126617
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_AGFSP',0,33,176,4,3
	.word	130946
	.byte	11,33,179,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127174
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_CLC',0,33,184,4,3
	.word	131009
	.byte	11,33,187,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127311
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_CMD',0,33,192,4,3
	.word	131070
	.byte	11,33,195,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127414
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_DBG',0,33,200,4,3
	.word	131131
	.byte	11,33,203,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127502
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_FSP',0,33,208,4,3
	.word	131192
	.byte	11,33,211,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127657
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_ID',0,33,216,4,3
	.word	131253
	.byte	11,33,219,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127764
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_KEYS',0,33,224,4,3
	.word	131313
	.byte	11,33,227,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127876
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_KRST0',0,33,232,4,3
	.word	131375
	.byte	11,33,235,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127987
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_KRST1',0,33,240,4,3
	.word	131438
	.byte	11,33,243,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128079
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_KRSTCLR',0,33,248,4,3
	.word	131501
	.byte	11,33,251,4,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128175
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_OCS',0,33,128,5,3
	.word	131566
	.byte	11,33,131,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128367
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_PCTL',0,33,136,5,3
	.word	131627
	.byte	11,33,139,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128528
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_RMCTL',0,33,144,5,3
	.word	131689
	.byte	11,33,147,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128619
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_RMEF',0,33,152,5,3
	.word	131752
	.byte	11,33,155,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	129174
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_RMSTS',0,33,160,5,3
	.word	131814
	.byte	11,33,163,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	129763
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_RTAC0',0,33,168,5,3
	.word	131877
	.byte	11,33,171,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	129950
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_RTAC1',0,33,176,5,3
	.word	131940
	.byte	11,33,179,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	130137
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_RTC',0,33,184,5,3
	.word	132003
	.byte	11,33,187,5,9,4,12
	.byte	'U',0
	.word	282
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	298
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	130257
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SMU_STS',0,33,192,5,3
	.word	132064
	.byte	14,152,1
	.word	305
	.byte	15,151,1,0,14,12
	.word	130884
	.byte	15,2,0,14,84
	.word	132136
	.byte	15,6,0,14,44
	.word	305
	.byte	15,43,0,14,28
	.word	130946
	.byte	15,6,0,14,28
	.word	130763
	.byte	15,6,0,14,28
	.word	130640
	.byte	15,6,0,14,228,1
	.word	305
	.byte	15,227,1,0,14,220,9
	.word	305
	.byte	15,219,9,0,9
	.byte	'_Ifx_SMU',0,33,203,5,25,128,16,12
	.byte	'CLC',0
	.word	131009
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2657
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	131253
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	59691
	.byte	20,2,35,12,12
	.byte	'CMD',0
	.word	131070
	.byte	4,2,35,32,12
	.byte	'STS',0
	.word	132064
	.byte	4,2,35,36,12
	.byte	'FSP',0
	.word	131192
	.byte	4,2,35,40,12
	.byte	'AGC',0
	.word	130823
	.byte	4,2,35,44,12
	.byte	'RTC',0
	.word	132003
	.byte	4,2,35,48,12
	.byte	'KEYS',0
	.word	131313
	.byte	4,2,35,52,12
	.byte	'DBG',0
	.word	131131
	.byte	4,2,35,56,12
	.byte	'PCTL',0
	.word	131627
	.byte	4,2,35,60,12
	.byte	'AFCNT',0
	.word	130700
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	29956
	.byte	28,2,35,68,12
	.byte	'RTAC0',0
	.word	131877
	.byte	4,2,35,96,12
	.byte	'RTAC1',0
	.word	131940
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	132125
	.byte	152,1,2,35,104,12
	.byte	'AGCF',0
	.word	132145
	.byte	84,3,35,128,2,12
	.byte	'reserved_154',0
	.word	132154
	.byte	44,3,35,212,2,12
	.byte	'AGFSP',0
	.word	132163
	.byte	28,3,35,128,3,12
	.byte	'reserved_19C',0
	.word	91091
	.byte	36,3,35,156,3,12
	.byte	'AG',0
	.word	132172
	.byte	28,3,35,192,3,12
	.byte	'reserved_1DC',0
	.word	91091
	.byte	36,3,35,220,3,12
	.byte	'AD',0
	.word	132181
	.byte	28,3,35,128,4,12
	.byte	'reserved_21C',0
	.word	132190
	.byte	228,1,3,35,156,4,12
	.byte	'RMCTL',0
	.word	131689
	.byte	4,3,35,128,6,12
	.byte	'RMEF',0
	.word	131752
	.byte	4,3,35,132,6,12
	.byte	'RMSTS',0
	.word	131814
	.byte	4,3,35,136,6,12
	.byte	'reserved_30C',0
	.word	132201
	.byte	220,9,3,35,140,6,12
	.byte	'OCS',0
	.word	131566
	.byte	4,3,35,232,15,12
	.byte	'KRSTCLR',0
	.word	131501
	.byte	4,3,35,236,15,12
	.byte	'KRST1',0
	.word	131438
	.byte	4,3,35,240,15,12
	.byte	'KRST0',0
	.word	131375
	.byte	4,3,35,244,15,12
	.byte	'ACCEN1',0
	.word	130576
	.byte	4,3,35,248,15,12
	.byte	'ACCEN0',0
	.word	130512
	.byte	4,3,35,252,15,0,13
	.word	132212
	.byte	28
	.byte	'Ifx_SMU',0,33,240,5,3
	.word	132807
	.byte	13
	.word	59740
.L383:
	.byte	6
	.word	132829
	.byte	13
	.word	132212
.L384:
	.byte	6
	.word	132839
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L72:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,11,1,0,0,17,4,1,58,15,59,15,57,15
	.byte	11,15,0,0,18,40,0,3,8,28,13,0,0,19,13,0,73,19,11,15,56,9,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,46
	.byte	1,49,19,0,0,22,5,0,49,19,0,0,23,29,1,49,19,0,0,24,11,0,49,19,0,0,25,38,0,73,19,0,0,26,46,1,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,29,21,0,54,15,0,0,30,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12
	.byte	0,0,31,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L73:
	.word	.L403-.L402
.L402:
	.half	3
	.word	.L405-.L404
.L404:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Reg',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\APP\\inc',0
	.byte	'C:\\TASKING\\TriCore v6.2r2\\ctc\\include\\',0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Src\\Std\\IfxSrc.h',0
	.byte	0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuWdt.h',0
	.byte	0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0
	.byte	'IfxCan_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxMultican_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\IfxCpu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxCpu_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Scu\\Std\\IfxScuCcu.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Stm\\Std\\IfxStm.h',0
	.byte	0,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Can\\IfxMultican_Can.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxSrc_cfg.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_PinMap\\IfxMultican_PinMap.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Ifx_Types.h',0
	.byte	0,0,0
	.byte	'Mcan.h',0,2,0,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'stdint.h',0,3,0,0
	.byte	'stdio.h',0,3,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Cpu\\Std\\Platform_Types.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\_Impl\\IfxScu_cfg.h',0
	.byte	0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Io\\IfxPort_Io.h',0
	.byte	0,0,0
	.byte	'IfxQspi_regdef.h',0,1,0,0
	.byte	'IfxVadc_regdef.h',0,1,0,0
	.byte	'Spisoc.h',0,2,0,0
	.byte	'IfxSmu_regdef.h',0,1,0,0,0
.L405:
.L403:
	.sdecl	'.debug_info',debug,cluster('init_Mcan_Port')
	.sect	'.debug_info'
.L74:
	.word	391
	.half	3
	.word	.L75
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L77,.L76
	.byte	2
	.word	.L70
	.byte	3
	.byte	'init_Mcan_Port',0,1,58,6,1,1,1
	.word	.L32,.L230,.L31
	.byte	4
	.word	.L32,.L230
	.byte	5
	.word	.L231,.L32,.L232
	.byte	6
	.word	.L233,.L234
	.byte	6
	.word	.L235,.L236
	.byte	7
	.word	.L237,.L32,.L232
	.byte	5
	.word	.L238,.L32,.L232
	.byte	6
	.word	.L239,.L240
	.byte	6
	.word	.L241,.L242
	.byte	6
	.word	.L243,.L244
	.byte	8
	.word	.L245,.L32,.L232
	.byte	0,0,0,5
	.word	.L231,.L232,.L246
	.byte	6
	.word	.L233,.L234
	.byte	6
	.word	.L235,.L236
	.byte	7
	.word	.L237,.L232,.L246
	.byte	5
	.word	.L238,.L232,.L246
	.byte	6
	.word	.L239,.L240
	.byte	6
	.word	.L241,.L242
	.byte	6
	.word	.L243,.L244
	.byte	8
	.word	.L245,.L232,.L246
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_Mcan_Port')
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_Mcan_Port')
	.sect	'.debug_line'
.L76:
	.word	.L407-.L406
.L406:
	.half	3
	.word	.L409-.L408
.L408:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L409:
	.byte	4,2,5,26,7,0,5,2
	.word	.L32
	.byte	3,144,4,1,5,17,1,5,26,9
	.half	.L232-.L32
	.byte	1,5,17,9
	.half	.L410-.L232
	.byte	1,4,1,5,1,9
	.half	.L246-.L410
	.byte	3,178,124,1,7,9
	.half	.L78-.L246
	.byte	0,1,1
.L407:
	.sdecl	'.debug_ranges',debug,cluster('init_Mcan_Port')
	.sect	'.debug_ranges'
.L77:
	.word	-1,.L32,0,.L78-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('init_Mcan')
	.sect	'.debug_info'
.L79:
	.word	555
	.half	3
	.word	.L80
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L82,.L81
	.byte	2
	.word	.L70
	.byte	3
	.byte	'init_Mcan',0,1,80,6,1,1,1
	.word	.L36,.L247,.L35
	.byte	4
	.word	.L36,.L247
	.byte	5
	.byte	'canConfig',0,1,83,29
	.word	.L248,.L249
	.byte	4
	.word	.L250,.L247
	.byte	5
	.byte	'canNodeConfig',0,1,90,33
	.word	.L251,.L252
	.byte	4
	.word	.L253,.L254
	.byte	5
	.byte	'canMsgObjConfig',0,1,113,39
	.word	.L255,.L256
	.byte	0,4
	.word	.L254,.L257
	.byte	5
	.byte	'canMsgObjConfig',0,1,130,1,39
	.word	.L255,.L258
	.byte	0,4
	.word	.L257,.L259
	.byte	5
	.byte	'canMsgObjConfig',0,1,169,1,39
	.word	.L255,.L260
	.byte	0,4
	.word	.L259,.L261
	.byte	5
	.byte	'canMsgObjConfig',0,1,187,1,39
	.word	.L255,.L262
	.byte	0,4
	.word	.L261,.L263
	.byte	5
	.byte	'canMsgObjConfig',0,1,204,1,39
	.word	.L255,.L264
	.byte	0,4
	.word	.L263,.L265
	.byte	5
	.byte	'canMsgObjConfig',0,1,221,1,39
	.word	.L255,.L266
	.byte	0,4
	.word	.L265,.L267
	.byte	5
	.byte	'canMsgObjConfig',0,1,238,1,39
	.word	.L255,.L268
	.byte	0,4
	.word	.L267,.L247
	.byte	5
	.byte	'canMsgObjConfig',0,1,255,1,39
	.word	.L255,.L269
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_Mcan')
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_Mcan')
	.sect	'.debug_line'
.L81:
	.word	.L412-.L411
.L411:
	.half	3
	.word	.L414-.L413
.L413:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L414:
	.byte	5,52,7,0,5,2
	.word	.L36
	.byte	3,211,0,1,5,6,9
	.half	.L415-.L36
	.byte	3,124,1,5,52,9
	.half	.L386-.L415
	.byte	3,4,1,5,40,9
	.half	.L416-.L386
	.byte	1,5,52,9
	.half	.L417-.L416
	.byte	1,5,34,9
	.half	.L418-.L417
	.byte	3,3,1,5,57,9
	.half	.L419-.L418
	.byte	1,5,65,9
	.half	.L420-.L419
	.byte	1,5,39,9
	.half	.L250-.L420
	.byte	3,4,1,5,78,9
	.half	.L421-.L250
	.byte	1,5,31,9
	.half	.L422-.L421
	.byte	3,3,1,5,29,9
	.half	.L423-.L422
	.byte	1,5,36,9
	.half	.L424-.L423
	.byte	3,4,1,5,34,1,5,37,9
	.half	.L425-.L424
	.byte	3,1,1,5,34,9
	.half	.L426-.L425
	.byte	1,5,36,9
	.half	.L427-.L426
	.byte	3,1,1,5,34,1,5,37,9
	.half	.L428-.L427
	.byte	3,1,1,5,34,9
	.half	.L429-.L428
	.byte	1,5,36,9
	.half	.L430-.L429
	.byte	3,1,1,5,34,1,5,60,9
	.half	.L431-.L430
	.byte	3,2,1,5,75,9
	.half	.L432-.L431
	.byte	1,5,45,9
	.half	.L253-.L432
	.byte	3,10,1,5,86,9
	.half	.L433-.L253
	.byte	1,5,50,9
	.half	.L434-.L433
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L435-.L434
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L436-.L435
	.byte	3,2,1,3,127,1,5,48,9
	.half	.L437-.L436
	.byte	1,9
	.half	.L438-.L437
	.byte	3,1,1,5,50,9
	.half	.L439-.L438
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L440-.L439
	.byte	3,5,1,5,25,9
	.half	.L441-.L440
	.byte	3,124,1,5,84,9
	.half	.L442-.L441
	.byte	3,4,1,5,48,9
	.half	.L443-.L442
	.byte	3,124,1,5,84,9
	.half	.L444-.L443
	.byte	3,4,1,5,45,9
	.half	.L254-.L444
	.byte	3,6,1,5,86,9
	.half	.L445-.L254
	.byte	1,5,50,9
	.half	.L446-.L445
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L447-.L446
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L448-.L447
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L449-.L448
	.byte	3,1,1,5,50,9
	.half	.L450-.L449
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L451-.L450
	.byte	3,5,1,5,25,9
	.half	.L452-.L451
	.byte	3,124,1,5,84,9
	.half	.L453-.L452
	.byte	3,4,1,5,48,9
	.half	.L454-.L453
	.byte	3,124,1,5,84,9
	.half	.L455-.L454
	.byte	3,4,1,5,45,9
	.half	.L257-.L455
	.byte	3,28,1,5,86,9
	.half	.L456-.L257
	.byte	1,5,50,9
	.half	.L457-.L456
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L458-.L457
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L459-.L458
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L460-.L459
	.byte	3,1,1,5,50,9
	.half	.L461-.L460
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L462-.L461
	.byte	3,5,1,5,25,9
	.half	.L463-.L462
	.byte	3,124,1,5,83,9
	.half	.L464-.L463
	.byte	3,4,1,5,48,9
	.half	.L465-.L464
	.byte	3,124,1,5,83,9
	.half	.L466-.L465
	.byte	3,4,1,5,45,9
	.half	.L259-.L466
	.byte	3,7,1,5,86,9
	.half	.L467-.L259
	.byte	1,5,50,9
	.half	.L468-.L467
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L469-.L468
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L470-.L469
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L471-.L470
	.byte	3,1,1,5,50,9
	.half	.L472-.L471
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L473-.L472
	.byte	3,5,1,5,25,9
	.half	.L474-.L473
	.byte	3,124,1,5,84,9
	.half	.L475-.L474
	.byte	3,4,1,5,48,9
	.half	.L476-.L475
	.byte	3,124,1,5,84,9
	.half	.L477-.L476
	.byte	3,4,1,5,45,9
	.half	.L261-.L477
	.byte	3,6,1,5,86,9
	.half	.L478-.L261
	.byte	1,5,50,9
	.half	.L479-.L478
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L480-.L479
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L481-.L480
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L482-.L481
	.byte	3,1,1,5,50,9
	.half	.L483-.L482
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L484-.L483
	.byte	3,5,1,5,25,9
	.half	.L485-.L484
	.byte	3,124,1,5,84,9
	.half	.L486-.L485
	.byte	3,4,1,5,48,9
	.half	.L487-.L486
	.byte	3,124,1,5,84,9
	.half	.L488-.L487
	.byte	3,4,1,5,45,9
	.half	.L263-.L488
	.byte	3,6,1,5,86,9
	.half	.L489-.L263
	.byte	1,5,50,9
	.half	.L490-.L489
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L491-.L490
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L492-.L491
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L493-.L492
	.byte	3,1,1,5,50,9
	.half	.L494-.L493
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L495-.L494
	.byte	3,5,1,5,25,9
	.half	.L496-.L495
	.byte	3,124,1,5,84,9
	.half	.L497-.L496
	.byte	3,4,1,5,48,9
	.half	.L498-.L497
	.byte	3,124,1,5,84,9
	.half	.L499-.L498
	.byte	3,4,1,5,45,9
	.half	.L265-.L499
	.byte	3,6,1,5,86,9
	.half	.L500-.L265
	.byte	1,5,50,9
	.half	.L501-.L500
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L502-.L501
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L503-.L502
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L504-.L503
	.byte	3,1,1,5,50,9
	.half	.L505-.L504
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L506-.L505
	.byte	3,5,1,5,25,9
	.half	.L507-.L506
	.byte	3,124,1,5,84,9
	.half	.L508-.L507
	.byte	3,4,1,5,48,9
	.half	.L509-.L508
	.byte	3,124,1,5,84,9
	.half	.L510-.L509
	.byte	3,4,1,5,45,9
	.half	.L267-.L510
	.byte	3,6,1,5,86,9
	.half	.L511-.L267
	.byte	1,5,50,9
	.half	.L512-.L511
	.byte	3,2,1,5,48,1,5,50,9
	.half	.L513-.L512
	.byte	3,1,1,5,48,1,5,50,9
	.half	.L514-.L513
	.byte	3,2,1,5,48,3,127,1,9
	.half	.L515-.L514
	.byte	3,1,1,5,50,9
	.half	.L516-.L515
	.byte	3,1,1,5,48,1,5,62,9
	.half	.L517-.L516
	.byte	3,5,1,5,25,9
	.half	.L518-.L517
	.byte	3,124,1,5,84,9
	.half	.L519-.L518
	.byte	3,4,1,5,48,9
	.half	.L520-.L519
	.byte	3,124,1,5,84,9
	.half	.L521-.L520
	.byte	3,4,1,5,1,7,9
	.half	.L83-.L521
	.byte	3,6,0,1,1
.L412:
	.sdecl	'.debug_ranges',debug,cluster('init_Mcan')
	.sect	'.debug_ranges'
.L82:
	.word	-1,.L36,0,.L83-.L36,0,0
	.sdecl	'.debug_info',debug,cluster('Transmit_Mcan')
	.sect	'.debug_info'
.L84:
	.word	290
	.half	3
	.word	.L85
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L87,.L86
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Transmit_Mcan',0,1,147,2,6,1,1,1
	.word	.L38,.L270,.L37
	.byte	4
	.word	.L38,.L270
	.byte	4
	.word	.L38,.L270
	.byte	5
	.byte	'msg',0,1,151,2,29
	.word	.L271,.L272
	.byte	6
	.word	.L273,.L38,.L274
	.byte	7
	.word	.L275,.L276
	.byte	7
	.word	.L277,.L278
	.byte	7
	.word	.L279,.L280
	.byte	7
	.word	.L281,.L282
	.byte	7
	.word	.L283,.L284
	.byte	8
	.word	.L285,.L38,.L274
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Transmit_Mcan')
	.sect	'.debug_abbrev'
.L85:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Transmit_Mcan')
	.sect	'.debug_line'
.L86:
	.word	.L523-.L522
.L522:
	.half	3
	.word	.L525-.L524
.L524:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0,0
.L525:
	.byte	4,2,5,24,7,0,5,2
	.word	.L38
	.byte	3,165,8,1,4,1,5,6,3,237,121,1,4,2,5,22,9
	.half	.L387-.L38
	.byte	3,147,6,1,5,24,9
	.half	.L526-.L387
	.byte	3,1,1,5,22,1,5,24,9
	.half	.L527-.L526
	.byte	3,1,1,5,22,1,5,24,9
	.half	.L528-.L527
	.byte	3,1,1,5,22,1,4,1,5,100,9
	.half	.L274-.L528
	.byte	3,241,121,1,4,2,5,22,3,145,6,1,4,1,5,52,9
	.half	.L529-.L274
	.byte	3,239,121,1,5,75,9
	.half	.L530-.L529
	.byte	1,5,92,9
	.half	.L2-.L530
	.byte	1,5,130,1,9
	.half	.L531-.L2
	.byte	1,5,85,7,9
	.half	.L532-.L531
	.byte	3,2,1,5,1,9
	.half	.L88-.L532
	.byte	3,2,0,1,1
.L523:
	.sdecl	'.debug_ranges',debug,cluster('Transmit_Mcan')
	.sect	'.debug_ranges'
.L87:
	.word	-1,.L38,0,.L88-.L38,0,0
	.sdecl	'.debug_info',debug,cluster('Trans_Mcan_13F')
	.sect	'.debug_info'
.L89:
	.word	891
	.half	3
	.word	.L90
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L92,.L91
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Trans_Mcan_13F',0,1,161,2,6,1,1,1
	.word	.L40,.L286,.L39
	.byte	4
	.word	.L40,.L286
	.byte	5
	.byte	'msg',0,1,163,2,11
	.word	.L287,.L288
	.byte	5
	.byte	'i',0,1,167,2,6
	.word	.L289,.L290
	.byte	5
	.byte	'msg_13f',0,1,170,2,25
	.word	.L271,.L291
	.byte	6
	.word	.L273,.L40,.L292
	.byte	7
	.word	.L275,.L293
	.byte	7
	.word	.L277,.L294
	.byte	7
	.word	.L279,.L295
	.byte	7
	.word	.L281,.L296
	.byte	7
	.word	.L283,.L297
	.byte	8
	.word	.L285,.L40,.L292
	.byte	0,4
	.word	.L292,.L286
	.byte	5
	.byte	'msg_12f',0,1,173,2,25
	.word	.L271,.L298
	.byte	6
	.word	.L273,.L292,.L299
	.byte	7
	.word	.L275,.L293
	.byte	7
	.word	.L277,.L294
	.byte	7
	.word	.L279,.L295
	.byte	7
	.word	.L281,.L296
	.byte	7
	.word	.L283,.L297
	.byte	8
	.word	.L285,.L292,.L299
	.byte	0,9
	.word	.L300
	.byte	5
	.byte	'msg_45d',0,1,176,2,25
	.word	.L271,.L301
	.byte	6
	.word	.L273,.L299,.L302
	.byte	7
	.word	.L275,.L293
	.byte	7
	.word	.L277,.L294
	.byte	7
	.word	.L279,.L295
	.byte	7
	.word	.L281,.L296
	.byte	7
	.word	.L283,.L297
	.byte	8
	.word	.L285,.L299,.L302
	.byte	0,6
	.word	.L303,.L302,.L304
	.byte	7
	.word	.L305,.L306
	.byte	10
	.word	.L307,.L308
	.byte	0,6
	.word	.L303,.L309,.L310
	.byte	7
	.word	.L305,.L306
	.byte	0,4
	.word	.L5,.L286
	.byte	5
	.byte	'msg1',0,1,196,2,25
	.word	.L271,.L311
	.byte	6
	.word	.L273,.L5,.L312
	.byte	7
	.word	.L275,.L293
	.byte	7
	.word	.L277,.L294
	.byte	7
	.word	.L279,.L295
	.byte	7
	.word	.L281,.L296
	.byte	7
	.word	.L283,.L297
	.byte	8
	.word	.L285,.L5,.L312
	.byte	0,4
	.word	.L312,.L286
	.byte	6
	.word	.L303,.L6,.L313
	.byte	7
	.word	.L305,.L306
	.byte	10
	.word	.L307,.L314
	.byte	0,6
	.word	.L303,.L315,.L316
	.byte	7
	.word	.L305,.L306
	.byte	0,9
	.word	.L317
	.byte	6
	.word	.L303,.L318,.L319
	.byte	7
	.word	.L305,.L306
	.byte	10
	.word	.L307,.L320
	.byte	0,6
	.word	.L303,.L321,.L322
	.byte	7
	.word	.L305,.L306
	.byte	0,6
	.word	.L303,.L323,.L324
	.byte	7
	.word	.L305,.L306
	.byte	10
	.word	.L307,.L325
	.byte	0,6
	.word	.L303,.L326,.L327
	.byte	7
	.word	.L305,.L306
	.byte	0,6
	.word	.L303,.L328,.L329
	.byte	7
	.word	.L305,.L306
	.byte	8
	.word	.L307,.L328,.L329
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Trans_Mcan_13F')
	.sect	'.debug_abbrev'
.L90:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,85,6,0,0,10,11,0,49,16,85,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Trans_Mcan_13F')
	.sect	'.debug_line'
.L91:
	.word	.L534-.L533
.L533:
	.half	3
	.word	.L536-.L535
.L535:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Stm\\Std\\IfxStm.h',0
	.byte	0,0,0,0
.L536:
	.byte	4,2,5,24,7,0,5,2
	.word	.L40
	.byte	3,165,8,1,4,1,5,6,3,251,121,1,4,2,5,22,9
	.half	.L388-.L40
	.byte	3,133,6,1,5,24,9
	.half	.L537-.L388
	.byte	3,1,1,5,22,1,5,24,9
	.half	.L538-.L537
	.byte	3,2,1,5,22,3,127,1,5,24,9
	.half	.L539-.L538
	.byte	3,3,1,5,22,3,126,1,5,24,9
	.half	.L292-.L539
	.byte	3,125,1,5,22,3,5,1,9
	.half	.L540-.L292
	.byte	3,123,1,9
	.half	.L541-.L540
	.byte	3,1,1,9
	.half	.L542-.L541
	.byte	3,1,1,9
	.half	.L543-.L542
	.byte	3,1,1,5,24,9
	.half	.L299-.L543
	.byte	3,125,1,5,22,3,5,1,9
	.half	.L544-.L299
	.byte	3,123,1,9
	.half	.L545-.L544
	.byte	3,1,1,9
	.half	.L546-.L545
	.byte	3,1,1,9
	.half	.L547-.L546
	.byte	3,1,1,9
	.half	.L548-.L547
	.byte	3,2,1,4,1,5,32,9
	.half	.L302-.L548
	.byte	3,137,122,1,5,49,9
	.half	.L304-.L302
	.byte	3,4,1,4,3,5,21,9
	.half	.L309-.L304
	.byte	3,175,1,1,4,1,5,72,9
	.half	.L310-.L309
	.byte	3,209,126,1,5,91,9
	.half	.L549-.L310
	.byte	1,5,37,9
	.half	.L4-.L549
	.byte	3,3,1,5,3,9
	.half	.L389-.L4
	.byte	3,1,1,5,72,7,9
	.half	.L3-.L389
	.byte	3,124,1,5,13,9
	.half	.L550-.L3
	.byte	1,4,2,5,24,7,9
	.half	.L5-.L550
	.byte	3,238,5,1,5,22,1,5,24,9
	.half	.L551-.L5
	.byte	3,1,1,5,22,9
	.half	.L552-.L551
	.byte	1,9
	.half	.L553-.L552
	.byte	3,1,1,5,24,9
	.half	.L554-.L553
	.byte	3,1,1,5,22,1,5,24,9
	.half	.L555-.L554
	.byte	3,2,1,5,22,1,4,1,5,118,9
	.half	.L312-.L555
	.byte	3,156,122,1,5,26,9
	.half	.L556-.L312
	.byte	3,3,1,5,50,9
	.half	.L557-.L556
	.byte	3,2,1,5,5,1,5,31,9
	.half	.L558-.L557
	.byte	1,5,5,9
	.half	.L559-.L558
	.byte	3,2,1,5,30,7,9
	.half	.L560-.L559
	.byte	3,2,1,5,33,9
	.half	.L561-.L560
	.byte	3,1,1,5,22,3,1,1,5,35,9
	.half	.L6-.L561
	.byte	3,4,1,5,76,9
	.half	.L313-.L6
	.byte	3,3,1,4,3,5,21,9
	.half	.L315-.L313
	.byte	3,142,1,1,4,1,5,96,9
	.half	.L316-.L315
	.byte	3,242,126,1,5,41,9
	.half	.L8-.L316
	.byte	3,3,1,5,7,9
	.half	.L562-.L8
	.byte	3,1,1,5,76,7,9
	.half	.L7-.L562
	.byte	3,124,1,5,17,9
	.half	.L563-.L7
	.byte	1,5,127,7,9
	.half	.L9-.L563
	.byte	3,14,1,5,14,9
	.half	.L564-.L9
	.byte	3,2,1,5,31,3,2,1,5,22,9
	.half	.L391-.L564
	.byte	3,126,1,5,49,9
	.half	.L10-.L391
	.byte	3,2,1,5,53,9
	.half	.L565-.L10
	.byte	1,5,22,9
	.half	.L390-.L565
	.byte	3,126,1,5,14,7,9
	.half	.L392-.L390
	.byte	3,4,1,5,31,3,2,1,5,22,9
	.half	.L566-.L392
	.byte	3,126,1,5,49,9
	.half	.L11-.L566
	.byte	3,2,1,5,53,9
	.half	.L567-.L11
	.byte	1,5,22,9
	.half	.L568-.L567
	.byte	3,126,1,5,32,7,9
	.half	.L318-.L568
	.byte	3,12,1,5,75,9
	.half	.L319-.L318
	.byte	3,3,1,4,3,5,21,9
	.half	.L321-.L319
	.byte	3,235,0,1,4,1,5,139,1,9
	.half	.L322-.L321
	.byte	3,149,127,1,5,41,9
	.half	.L13-.L322
	.byte	3,2,1,5,7,9
	.half	.L393-.L13
	.byte	3,1,1,5,97,7,9
	.half	.L12-.L393
	.byte	3,125,1,5,109,9
	.half	.L569-.L12
	.byte	1,5,139,1,9
	.half	.L570-.L569
	.byte	1,5,33,7,9
	.half	.L14-.L570
	.byte	3,16,1,5,35,9
	.half	.L323-.L14
	.byte	3,125,1,5,20,9
	.half	.L324-.L323
	.byte	3,4,1,5,75,3,4,1,5,40,9
	.half	.L571-.L324
	.byte	3,125,1,4,3,5,21,9
	.half	.L326-.L571
	.byte	3,217,0,1,4,1,5,40,9
	.half	.L327-.L326
	.byte	3,166,127,1,5,38,9
	.half	.L572-.L327
	.byte	3,1,1,5,25,3,1,1,5,139,1,9
	.half	.L573-.L572
	.byte	3,2,1,5,41,9
	.half	.L16-.L573
	.byte	3,2,1,9
	.half	.L574-.L16
	.byte	3,1,1,4,3,5,21,9
	.half	.L328-.L574
	.byte	3,211,0,1,4,1,5,24,9
	.half	.L329-.L328
	.byte	3,173,127,1,5,7,9
	.half	.L575-.L329
	.byte	1,5,97,7,9
	.half	.L15-.L575
	.byte	3,125,1,5,109,9
	.half	.L576-.L15
	.byte	1,5,139,1,9
	.half	.L577-.L576
	.byte	1,5,1,7,9
	.half	.L17-.L577
	.byte	3,10,1,7,9
	.half	.L93-.L17
	.byte	0,1,1
.L534:
	.sdecl	'.debug_ranges',debug,cluster('Trans_Mcan_13F')
	.sect	'.debug_ranges'
.L92:
	.word	-1,.L40,0,.L93-.L40,0,0
.L300:
	.word	-1,.L40,.L299-.L40,.L286-.L40,-1,.L44,0,.L158-.L44,0,0
.L308:
	.word	-1,.L40,.L302-.L40,.L304-.L40,.L309-.L40,.L310-.L40,0,0
.L314:
	.word	-1,.L40,.L6-.L40,.L313-.L40,.L315-.L40,.L316-.L40,0,0
.L317:
	.word	-1,.L40,.L9-.L40,.L286-.L40,-1,.L42,0,.L163-.L42,0,0
.L320:
	.word	-1,.L40,.L318-.L40,.L319-.L40,.L321-.L40,.L322-.L40,0,0
.L325:
	.word	-1,.L40,.L323-.L40,.L324-.L40,.L326-.L40,.L327-.L40,0,0
	.sdecl	'.debug_info',debug,cluster('init_Mcan_Msg')
	.sect	'.debug_info'
.L94:
	.word	691
	.half	3
	.word	.L95
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L97,.L96
	.byte	2
	.word	.L70
	.byte	3
	.byte	'init_Mcan_Msg',0,1,157,3,6,1,1,1
	.word	.L46,.L330,.L45
	.byte	4
	.word	.L46,.L330
	.byte	5
	.word	.L273,.L46,.L331
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	7
	.word	.L285,.L46,.L331
	.byte	0,5
	.word	.L273,.L331,.L337
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	8
	.word	.L285,.L338
	.byte	0,5
	.word	.L273,.L337,.L339
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	7
	.word	.L285,.L337,.L339
	.byte	0,5
	.word	.L273,.L339,.L340
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	7
	.word	.L285,.L339,.L340
	.byte	0,5
	.word	.L273,.L340,.L341
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	7
	.word	.L285,.L340,.L341
	.byte	0,5
	.word	.L273,.L341,.L342
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	7
	.word	.L285,.L341,.L342
	.byte	0,5
	.word	.L273,.L342,.L343
	.byte	6
	.word	.L275,.L332
	.byte	6
	.word	.L277,.L333
	.byte	6
	.word	.L279,.L334
	.byte	6
	.word	.L281,.L335
	.byte	6
	.word	.L283,.L336
	.byte	7
	.word	.L285,.L342,.L343
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_Mcan_Msg')
	.sect	'.debug_abbrev'
.L95:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_Mcan_Msg')
	.sect	'.debug_line'
.L96:
	.word	.L579-.L578
.L578:
	.half	3
	.word	.L581-.L580
.L580:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0,0
.L581:
	.byte	5,31,7,0,5,2
	.word	.L46
	.byte	3,158,3,1,4,2,5,24,9
	.half	.L582-.L46
	.byte	3,135,5,1,5,22,1,5,24,9
	.half	.L583-.L582
	.byte	3,1,1,5,22,1,9
	.half	.L584-.L583
	.byte	3,1,1,5,24,9
	.half	.L585-.L584
	.byte	3,1,1,5,22,1,5,24,9
	.half	.L586-.L585
	.byte	3,2,1,5,22,1,4,1,5,31,9
	.half	.L331-.L586
	.byte	3,245,122,1,4,2,5,24,9
	.half	.L587-.L331
	.byte	3,134,5,1,5,22,1,4,1,5,31,9
	.half	.L337-.L587
	.byte	3,251,122,1,4,2,5,24,9
	.half	.L588-.L337
	.byte	3,133,5,1,5,22,1,4,1,5,31,9
	.half	.L339-.L588
	.byte	3,252,122,1,4,2,5,24,9
	.half	.L589-.L339
	.byte	3,132,5,1,5,22,1,9
	.half	.L590-.L589
	.byte	3,1,1,9
	.half	.L591-.L590
	.byte	3,1,1,9
	.half	.L592-.L591
	.byte	3,1,1,9
	.half	.L593-.L592
	.byte	3,2,1,4,1,5,31,9
	.half	.L340-.L593
	.byte	3,248,122,1,4,2,5,24,9
	.half	.L594-.L340
	.byte	3,131,5,1,5,22,1,4,1,5,31,9
	.half	.L341-.L594
	.byte	3,254,122,1,4,2,5,24,9
	.half	.L595-.L341
	.byte	3,130,5,1,5,22,1,4,1,5,31,9
	.half	.L342-.L595
	.byte	3,128,123,1,4,2,5,24,9
	.half	.L596-.L342
	.byte	3,128,5,1,5,22,1,4,1,5,1,9
	.half	.L343-.L596
	.byte	3,129,123,1,7,9
	.half	.L98-.L343
	.byte	0,1,1
.L579:
	.sdecl	'.debug_ranges',debug,cluster('init_Mcan_Msg')
	.sect	'.debug_ranges'
.L97:
	.word	-1,.L46,0,.L98-.L46,0,0
.L338:
	.word	-1,.L46,.L331-.L46,.L337-.L46,-1,.L48,0,.L153-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('Receive_Mcan_10ms')
	.sect	'.debug_info'
.L99:
	.word	247
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L102,.L101
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Receive_Mcan_10ms',0,1,169,3,6,1,1,1
	.word	.L50,.L344,.L49
	.byte	4
	.word	.L50,.L344
	.byte	5
	.byte	'mcan_msg',0,1,171,3,11
	.word	.L287,.L345
	.byte	5
	.byte	'err_cnt',0,1,173,3,9
	.word	.L346,.L347
	.byte	6
	.word	.L21,.L344
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Receive_Mcan_10ms')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,0
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Receive_Mcan_10ms')
	.sect	'.debug_line'
.L101:
	.word	.L598-.L597
.L597:
	.half	3
	.word	.L600-.L599
.L599:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L600:
	.byte	5,17,7,0,5,2
	.word	.L50
	.byte	3,172,3,1,5,49,3,4,1,5,72,9
	.half	.L394-.L50
	.byte	1,5,91,9
	.half	.L601-.L394
	.byte	1,5,13,9
	.half	.L19-.L601
	.byte	3,2,1,5,18,9
	.half	.L396-.L19
	.byte	3,1,1,5,6,9
	.half	.L602-.L396
	.byte	1,5,7,7,9
	.half	.L603-.L602
	.byte	3,3,1,5,22,9
	.half	.L397-.L603
	.byte	1,5,7,9
	.half	.L604-.L397
	.byte	3,1,1,5,72,9
	.half	.L18-.L604
	.byte	3,121,1,5,13,9
	.half	.L605-.L18
	.byte	1,5,118,7,9
	.half	.L21-.L605
	.byte	3,10,1,5,38,9
	.half	.L606-.L21
	.byte	3,4,1,5,5,9
	.half	.L607-.L606
	.byte	3,1,1,5,55,9
	.half	.L608-.L607
	.byte	1,5,31,1,5,20,9
	.half	.L609-.L608
	.byte	3,1,1,5,1,9
	.half	.L610-.L609
	.byte	3,9,1,7,9
	.half	.L103-.L610
	.byte	0,1,1
.L598:
	.sdecl	'.debug_ranges',debug,cluster('Receive_Mcan_10ms')
	.sect	'.debug_ranges'
.L102:
	.word	-1,.L50,0,.L103-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('Receive_Mcan_1000ms')
	.sect	'.debug_info'
.L104:
	.word	233
	.half	3
	.word	.L105
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L107,.L106
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Receive_Mcan_1000ms',0,1,241,3,6,1,1,1
	.word	.L56,.L348,.L55
	.byte	4
	.word	.L56,.L348
	.byte	5
	.byte	'i',0,1,243,3,6
	.word	.L289,.L349
	.byte	6
	.word	.L350
	.byte	4
	.word	.L351,.L348
	.byte	7
	.word	.L352
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Receive_Mcan_1000ms')
	.sect	'.debug_abbrev'
.L105:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,1
	.byte	85,6,0,0,7,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Receive_Mcan_1000ms')
	.sect	'.debug_line'
.L106:
	.word	.L612-.L611
.L611:
	.half	3
	.word	.L614-.L613
.L613:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L614:
	.byte	5,123,7,0,5,2
	.word	.L56
	.byte	3,247,3,1,5,78,9
	.half	.L615-.L56
	.byte	1,5,101,9
	.half	.L616-.L615
	.byte	1,5,123,9
	.half	.L617-.L616
	.byte	1,5,10,9
	.half	.L618-.L617
	.byte	3,2,1,5,6,3,2,1,5,27,9
	.half	.L619-.L618
	.byte	1,5,18,9
	.half	.L620-.L619
	.byte	3,126,1,5,74,9
	.half	.L27-.L620
	.byte	3,2,1,5,54,9
	.half	.L621-.L27
	.byte	1,5,59,9
	.half	.L622-.L621
	.byte	1,5,20,9
	.half	.L399-.L622
	.byte	3,126,1,5,34,3,2,1,5,18,3,126,1,5,10,7,9
	.half	.L400-.L399
	.byte	3,4,1,5,27,3,2,1,5,18,9
	.half	.L623-.L400
	.byte	3,126,1,5,74,9
	.half	.L28-.L623
	.byte	3,2,1,5,54,9
	.half	.L624-.L28
	.byte	1,5,59,9
	.half	.L625-.L624
	.byte	1,5,20,9
	.half	.L626-.L625
	.byte	3,126,1,5,34,3,2,1,5,18,3,126,1,5,123,7,9
	.half	.L351-.L626
	.byte	3,5,1,5,101,9
	.half	.L627-.L351
	.byte	1,5,123,9
	.half	.L628-.L627
	.byte	1,5,47,9
	.half	.L401-.L628
	.byte	3,1,1,5,123,9
	.half	.L353-.L401
	.byte	3,2,1,5,51,9
	.half	.L354-.L353
	.byte	3,126,1,5,123,3,2,1,5,20,9
	.half	.L629-.L354
	.byte	3,126,1,5,101,9
	.half	.L355-.L629
	.byte	3,2,1,5,123,9
	.half	.L630-.L355
	.byte	1,5,48,9
	.half	.L631-.L630
	.byte	3,1,1,5,61,9
	.half	.L632-.L631
	.byte	1,5,52,9
	.half	.L633-.L632
	.byte	1,5,20,1,5,1,9
	.half	.L634-.L633
	.byte	3,3,1,7,9
	.half	.L108-.L634
	.byte	0,1,1
.L612:
	.sdecl	'.debug_ranges',debug,cluster('Receive_Mcan_1000ms')
	.sect	'.debug_ranges'
.L107:
	.word	-1,.L56,0,.L108-.L56,0,0
.L350:
	.word	-1,.L56,0,.L348-.L56,-1,.L58,0,.L173-.L58,0,0
.L352:
	.word	-1,.L56,.L353-.L56,.L354-.L56,.L355-.L56,.L348-.L56,0,0
	.sdecl	'.debug_info',debug,cluster('Transmit_Mcan_10ms')
	.sect	'.debug_info'
.L109:
	.word	191
	.half	3
	.word	.L110
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L112,.L111
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Transmit_Mcan_10ms',0,1,143,4,6,1,1,1
	.word	.L29,.L356,.L59
	.byte	4
	.word	.L357
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Transmit_Mcan_10ms')
	.sect	'.debug_abbrev'
.L110:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Transmit_Mcan_10ms')
	.sect	'.debug_line'
.L111:
	.word	.L636-.L635
.L635:
	.half	3
	.word	.L638-.L637
.L637:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L638:
	.byte	5,48,7,0,5,2
	.word	.L29
	.byte	3,152,4,1,5,93,9
	.half	.L639-.L29
	.byte	1,5,110,9
	.half	.L640-.L639
	.byte	1,5,140,1,9
	.half	.L641-.L640
	.byte	1,5,1,7,9
	.half	.L642-.L641
	.byte	3,5,1,7,9
	.half	.L113-.L642
	.byte	0,1,1
.L636:
	.sdecl	'.debug_ranges',debug,cluster('Transmit_Mcan_10ms')
	.sect	'.debug_ranges'
.L112:
	.word	-1,.L29,0,.L113-.L29,0,0
.L357:
	.word	-1,.L29,0,.L356-.L29,-1,.L61,0,.L168-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('Transmit_Mcan_200ms')
	.sect	'.debug_info'
.L114:
	.word	219
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L117,.L116
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Transmit_Mcan_200ms',0,1,159,4,6,1,1,1
	.word	.L63,.L358,.L62
	.byte	4
	.word	.L63,.L358
	.byte	5
	.byte	'mcan_msg',0,1,165,4,11
	.word	.L287,.L359
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Transmit_Mcan_200ms')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Transmit_Mcan_200ms')
	.sect	'.debug_line'
.L116:
	.word	.L644-.L643
.L643:
	.half	3
	.word	.L646-.L645
.L645:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L646:
	.byte	5,117,7,0,5,2
	.word	.L63
	.byte	3,179,4,1,5,2,9
	.half	.L647-.L63
	.byte	1,5,117,9
	.half	.L648-.L647
	.byte	1,5,2,9
	.half	.L649-.L648
	.byte	1,5,14,9
	.half	.L650-.L649
	.byte	1,5,138,1,9
	.half	.L651-.L650
	.byte	1,5,23,9
	.half	.L652-.L651
	.byte	1,5,46,9
	.half	.L653-.L652
	.byte	3,1,1,5,23,9
	.half	.L654-.L653
	.byte	1,5,38,9
	.half	.L655-.L654
	.byte	3,9,1,5,36,9
	.half	.L656-.L655
	.byte	3,121,1,5,61,9
	.half	.L657-.L656
	.byte	3,7,1,5,44,9
	.half	.L658-.L657
	.byte	3,122,1,5,19,1,5,83,9
	.half	.L659-.L658
	.byte	3,6,1,5,1,7,9
	.half	.L118-.L659
	.byte	3,1,0,1,1
.L644:
	.sdecl	'.debug_ranges',debug,cluster('Transmit_Mcan_200ms')
	.sect	'.debug_ranges'
.L117:
	.word	-1,.L63,0,.L118-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('Recieve_Mcan_200ms')
	.sect	'.debug_info'
.L119:
	.word	218
	.half	3
	.word	.L120
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L122,.L121
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Recieve_Mcan_200ms',0,1,204,3,6,1,1,1
	.word	.L52,.L360,.L51
	.byte	4
	.word	.L52,.L360
	.byte	5
	.byte	'mcan_msg',0,1,206,3,11
	.word	.L287,.L361
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Recieve_Mcan_200ms')
	.sect	'.debug_abbrev'
.L120:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Recieve_Mcan_200ms')
	.sect	'.debug_line'
.L121:
	.word	.L661-.L660
.L660:
	.half	3
	.word	.L663-.L662
.L662:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L663:
	.byte	5,120,7,0,5,2
	.word	.L52
	.byte	3,206,3,1,5,75,9
	.half	.L664-.L52
	.byte	1,5,98,9
	.half	.L665-.L664
	.byte	1,5,120,9
	.half	.L666-.L665
	.byte	1,5,36,9
	.half	.L667-.L666
	.byte	3,1,1,5,43,9
	.half	.L668-.L667
	.byte	3,1,1,5,15,1,5,1,9
	.half	.L669-.L668
	.byte	3,2,1,7,9
	.half	.L123-.L669
	.byte	0,1,1
.L661:
	.sdecl	'.debug_ranges',debug,cluster('Recieve_Mcan_200ms')
	.sect	'.debug_ranges'
.L122:
	.word	-1,.L52,0,.L123-.L52,0,0
	.sdecl	'.debug_info',debug,cluster('Recieve_Mcan_NM')
	.sect	'.debug_info'
.L124:
	.word	192
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L127,.L126
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Recieve_Mcan_NM',0,1,213,3,6,1,1,1
	.word	.L54,.L362,.L53
	.byte	4
	.word	.L54,.L362
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Recieve_Mcan_NM')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Recieve_Mcan_NM')
	.sect	'.debug_line'
.L126:
	.word	.L671-.L670
.L670:
	.half	3
	.word	.L673-.L672
.L672:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L673:
	.byte	5,46,7,0,5,2
	.word	.L54
	.byte	3,216,3,1,5,69,9
	.half	.L674-.L54
	.byte	1,5,10,9
	.half	.L675-.L674
	.byte	1,5,100,7,9
	.half	.L676-.L675
	.byte	3,4,1,5,23,9
	.half	.L677-.L676
	.byte	3,3,1,5,17,3,125,1,5,3,9
	.half	.L678-.L677
	.byte	3,5,1,5,4,9
	.half	.L679-.L678
	.byte	3,4,1,5,2,9
	.half	.L680-.L679
	.byte	3,122,1,5,20,7,9
	.half	.L681-.L680
	.byte	3,2,1,5,27,9
	.half	.L682-.L681
	.byte	3,1,1,5,3,9
	.half	.L683-.L682
	.byte	1,5,21,7,9
	.half	.L684-.L683
	.byte	3,2,1,5,23,9
	.half	.L685-.L684
	.byte	3,1,1,5,3,3,125,1,5,29,9
	.half	.L23-.L685
	.byte	3,6,1,5,7,9
	.half	.L686-.L23
	.byte	1,5,21,7,9
	.half	.L687-.L686
	.byte	3,2,1,5,22,9
	.half	.L688-.L687
	.byte	3,1,1,5,1,9
	.half	.L24-.L688
	.byte	3,3,1,9
	.half	.L128-.L24
	.byte	0,1,1
.L671:
	.sdecl	'.debug_ranges',debug,cluster('Recieve_Mcan_NM')
	.sect	'.debug_ranges'
.L127:
	.word	-1,.L54,0,.L128-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('check_NM_CGW')
	.sect	'.debug_info'
.L129:
	.word	212
	.half	3
	.word	.L130
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L132,.L131
	.byte	2
	.word	.L70
	.byte	3
	.byte	'check_NM_CGW',0,1,203,4,6,1,1,1
	.word	.L67,.L363,.L66
	.byte	4
	.word	.L67,.L363
	.byte	5
	.byte	'mcan_msg',0,1,205,4,11
	.word	.L287,.L364
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('check_NM_CGW')
	.sect	'.debug_abbrev'
.L130:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('check_NM_CGW')
	.sect	'.debug_line'
.L131:
	.word	.L690-.L689
.L689:
	.half	3
	.word	.L692-.L691
.L691:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L692:
	.byte	5,119,7,0,5,2
	.word	.L67
	.byte	3,209,4,1,5,74,9
	.half	.L693-.L67
	.byte	1,5,97,9
	.half	.L694-.L693
	.byte	1,5,119,9
	.half	.L695-.L694
	.byte	1,5,36,9
	.half	.L696-.L695
	.byte	3,2,1,5,18,9
	.half	.L697-.L696
	.byte	3,2,1,5,42,9
	.half	.L698-.L697
	.byte	3,127,1,5,24,1,5,1,9
	.half	.L699-.L698
	.byte	3,4,1,7,9
	.half	.L133-.L699
	.byte	0,1,1
.L690:
	.sdecl	'.debug_ranges',debug,cluster('check_NM_CGW')
	.sect	'.debug_ranges'
.L132:
	.word	-1,.L67,0,.L133-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('Transmit_NM_DVRS')
	.sect	'.debug_info'
.L134:
	.word	193
	.half	3
	.word	.L135
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L137,.L136
	.byte	2
	.word	.L70
	.byte	3
	.byte	'Transmit_NM_DVRS',0,1,218,4,6,1,1,1
	.word	.L69,.L365,.L68
	.byte	4
	.word	.L69,.L365
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Transmit_NM_DVRS')
	.sect	'.debug_abbrev'
.L135:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Transmit_NM_DVRS')
	.sect	'.debug_line'
.L136:
	.word	.L701-.L700
.L700:
	.half	3
	.word	.L703-.L702
.L702:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L703:
	.byte	5,5,7,0,5,2
	.word	.L69
	.byte	3,222,4,1,5,2,9
	.half	.L704-.L69
	.byte	1,5,39,7,9
	.half	.L705-.L704
	.byte	3,2,1,5,84,9
	.half	.L706-.L705
	.byte	1,5,1,7,9
	.half	.L30-.L706
	.byte	3,2,1,7,9
	.half	.L138-.L30
	.byte	0,1,1
.L701:
	.sdecl	'.debug_ranges',debug,cluster('Transmit_NM_DVRS')
	.sect	'.debug_ranges'
.L137:
	.word	-1,.L69,0,.L138-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('sleep_Mcan_Trans')
	.sect	'.debug_info'
.L139:
	.word	393
	.half	3
	.word	.L140
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L142,.L141
	.byte	2
	.word	.L70
	.byte	3
	.byte	'sleep_Mcan_Trans',0,1,69,6,1,1,1
	.word	.L34,.L366,.L33
	.byte	4
	.word	.L34,.L366
	.byte	5
	.word	.L367,.L34,.L368
	.byte	6
	.word	.L369,.L370
	.byte	6
	.word	.L371,.L372
	.byte	7
	.word	.L373,.L34,.L368
	.byte	5
	.word	.L238,.L34,.L368
	.byte	6
	.word	.L239,.L374
	.byte	6
	.word	.L241,.L375
	.byte	6
	.word	.L243,.L376
	.byte	8
	.word	.L245,.L34,.L368
	.byte	0,0,0,5
	.word	.L367,.L368,.L377
	.byte	6
	.word	.L369,.L370
	.byte	6
	.word	.L371,.L372
	.byte	7
	.word	.L373,.L368,.L377
	.byte	5
	.word	.L238,.L368,.L377
	.byte	6
	.word	.L239,.L374
	.byte	6
	.word	.L241,.L375
	.byte	6
	.word	.L243,.L376
	.byte	8
	.word	.L245,.L368,.L377
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('sleep_Mcan_Trans')
	.sect	'.debug_abbrev'
.L140:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('sleep_Mcan_Trans')
	.sect	'.debug_line'
.L141:
	.word	.L708-.L707
.L707:
	.half	3
	.word	.L710-.L709
.L709:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Port\\Std\\IfxPort.h',0
	.byte	0,0,0,0
.L710:
	.byte	4,2,5,26,7,0,5,2
	.word	.L34
	.byte	3,144,4,1,5,17,1,5,26,9
	.half	.L368-.L34
	.byte	1,5,17,9
	.half	.L711-.L368
	.byte	1,4,1,5,1,9
	.half	.L377-.L711
	.byte	3,189,124,1,7,9
	.half	.L143-.L377
	.byte	0,1,1
.L708:
	.sdecl	'.debug_ranges',debug,cluster('sleep_Mcan_Trans')
	.sect	'.debug_ranges'
.L142:
	.word	-1,.L34,0,.L143-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('init_NM_DVRS')
	.sect	'.debug_info'
.L144:
	.word	189
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L147,.L146
	.byte	2
	.word	.L70
	.byte	3
	.byte	'init_NM_DVRS',0,1,193,4,6,1,1,1
	.word	.L65,.L378,.L64
	.byte	4
	.word	.L65,.L378
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_NM_DVRS')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_NM_DVRS')
	.sect	'.debug_line'
.L146:
	.word	.L713-.L712
.L712:
	.half	3
	.word	.L715-.L714
.L714:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L715:
	.byte	5,2,7,0,5,2
	.word	.L65
	.byte	3,195,4,1,5,22,9
	.half	.L716-.L65
	.byte	1,5,42,9
	.half	.L717-.L716
	.byte	1,9
	.half	.L718-.L717
	.byte	3,1,1,5,40,1,5,2,9
	.half	.L719-.L718
	.byte	3,2,1,5,38,9
	.half	.L720-.L719
	.byte	1,5,24,9
	.half	.L721-.L720
	.byte	1,5,1,9
	.half	.L722-.L721
	.byte	3,2,1,7,9
	.half	.L148-.L722
	.byte	0,1,1
.L713:
	.sdecl	'.debug_ranges',debug,cluster('init_NM_DVRS')
	.sect	'.debug_ranges'
.L147:
	.word	-1,.L65,0,.L148-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L149:
	.word	175
	.half	3
	.word	.L150
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L152,.L151
	.byte	2
	.word	.L70
	.byte	3
	.byte	'.cocofun_9',0,1,157,3,6,1
	.word	.L48,.L153,.L47
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L150:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L151:
	.word	.L724-.L723
.L723:
	.half	3
	.word	.L726-.L725
.L725:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Multican\\Std\\IfxMultican.h',0
	.byte	0,0,0,0
.L726:
	.byte	4,2,5,22,7,0,5,2
	.word	.L48
	.byte	3,165,8,1,9
	.half	.L727-.L48
	.byte	3,1,1,9
	.half	.L728-.L727
	.byte	3,1,1,9
	.half	.L729-.L728
	.byte	3,1,1,9
	.half	.L730-.L729
	.byte	3,2,1,9
	.half	.L153-.L730
	.byte	0,1,1,4,2,5,22,0,5,2
	.word	.L48
	.byte	3,165,8,1,9
	.half	.L727-.L48
	.byte	3,1,1,9
	.half	.L728-.L727
	.byte	3,1,1,9
	.half	.L729-.L728
	.byte	3,1,1,9
	.half	.L730-.L729
	.byte	3,2,1,9
	.half	.L153-.L730
	.byte	0,1,1,4,2,5,22,0,5,2
	.word	.L48
	.byte	3,165,8,1,9
	.half	.L727-.L48
	.byte	3,1,1,9
	.half	.L728-.L727
	.byte	3,1,1,9
	.half	.L729-.L728
	.byte	3,1,1,9
	.half	.L730-.L729
	.byte	3,2,1,9
	.half	.L153-.L730
	.byte	0,1,1,4,2,5,22,0,5,2
	.word	.L48
	.byte	3,165,8,1,9
	.half	.L727-.L48
	.byte	3,1,1,9
	.half	.L728-.L727
	.byte	3,1,1,9
	.half	.L729-.L728
	.byte	3,1,1,9
	.half	.L730-.L729
	.byte	3,2,1,9
	.half	.L153-.L730
	.byte	0,1,1,4,2,5,22,0,5,2
	.word	.L48
	.byte	3,165,8,1,9
	.half	.L727-.L48
	.byte	3,1,1,9
	.half	.L728-.L727
	.byte	3,1,1,9
	.half	.L729-.L728
	.byte	3,1,1,9
	.half	.L730-.L729
	.byte	3,2,1,9
	.half	.L153-.L730
	.byte	0,1,1
.L724:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L152:
	.word	-1,.L48,0,.L153-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L154:
	.word	176
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L157,.L156
	.byte	2
	.word	.L70
	.byte	3
	.byte	'.cocofun_10',0,1,161,2,6,1
	.word	.L44,.L158,.L43
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L156:
	.word	.L732-.L731
.L731:
	.half	3
	.word	.L734-.L733
.L733:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\SoftwarePlatform\\illd_tc23x\\src\\ifx\\TC23x\\Stm\\Std\\IfxStm.h',0
	.byte	0,0,0,0
.L734:
	.byte	5,37,7,0,5,2
	.word	.L44
	.byte	3,186,2,1,9
	.half	.L735-.L44
	.byte	3,1,1,4,2,5,21,9
	.half	.L736-.L735
	.byte	3,171,1,1,4,1,5,20,9
	.half	.L737-.L736
	.byte	3,213,126,1,5,37,1,7,9
	.half	.L158-.L737
	.byte	0,1,1,5,41,0,5,2
	.word	.L44
	.byte	3,219,2,1,9
	.half	.L735-.L44
	.byte	3,1,1,4,2,5,21,9
	.half	.L736-.L735
	.byte	3,138,1,1,4,1,5,24,9
	.half	.L737-.L736
	.byte	3,246,126,1,5,37,3,95,1,7,9
	.half	.L158-.L737
	.byte	0,1,1,5,41,0,5,2
	.word	.L44
	.byte	3,253,2,1,9
	.half	.L735-.L44
	.byte	3,1,1,4,2,5,21,9
	.half	.L736-.L735
	.byte	3,232,0,1,4,1,5,24,9
	.half	.L737-.L736
	.byte	3,152,127,1,5,37,3,189,127,1,7,9
	.half	.L158-.L737
	.byte	0,1,1
.L732:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L157:
	.word	-1,.L44,0,.L158-.L44,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L159:
	.word	176
	.half	3
	.word	.L160
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L162,.L161
	.byte	2
	.word	.L70
	.byte	3
	.byte	'.cocofun_11',0,1,161,2,6,1
	.word	.L42,.L163,.L41
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L161:
	.word	.L739-.L738
.L738:
	.half	3
	.word	.L741-.L740
.L740:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L741:
	.byte	5,53,7,0,5,2
	.word	.L42
	.byte	3,234,2,1,5,60,9
	.half	.L742-.L42
	.byte	1,5,57,9
	.half	.L743-.L742
	.byte	1,5,38,9
	.half	.L744-.L743
	.byte	1,5,24,9
	.half	.L745-.L744
	.byte	3,126,1,9
	.half	.L163-.L745
	.byte	0,1,1,5,53,0,5,2
	.word	.L42
	.byte	3,238,2,1,5,60,9
	.half	.L742-.L42
	.byte	1,5,57,9
	.half	.L743-.L742
	.byte	1,5,38,9
	.half	.L744-.L743
	.byte	1,5,24,9
	.half	.L745-.L744
	.byte	3,126,1,3,124,1,7,9
	.half	.L163-.L745
	.byte	0,1,1
.L739:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L162:
	.word	-1,.L42,0,.L163-.L42,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L164:
	.word	176
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L70
	.byte	3
	.byte	'.cocofun_12',0,1,143,4,6,1
	.word	.L61,.L168,.L60
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L166:
	.word	.L747-.L746
.L746:
	.half	3
	.word	.L749-.L748
.L748:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L749:
	.byte	5,48,7,0,5,2
	.word	.L61
	.byte	3,152,4,1,5,71,9
	.half	.L750-.L61
	.byte	1,5,93,9
	.half	.L751-.L750
	.byte	1,9
	.half	.L168-.L751
	.byte	0,1,1,5,39,0,5,2
	.word	.L61
	.byte	3,224,4,1,5,62,9
	.half	.L750-.L61
	.byte	1,5,84,9
	.half	.L751-.L750
	.byte	1,5,93,9
	.half	.L752-.L751
	.byte	3,184,127,1,7,9
	.half	.L168-.L752
	.byte	0,1,1
.L747:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L61,0,.L168-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L169:
	.word	176
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L70
	.byte	3
	.byte	'.cocofun_13',0,1,241,3,6,1
	.word	.L58,.L173,.L57
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L171:
	.word	.L754-.L753
.L753:
	.half	3
	.word	.L756-.L755
.L755:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\APP\\src\\Mcan.c',0,0,0,0,0
.L756:
	.byte	5,59,7,0,5,2
	.word	.L58
	.byte	3,251,3,1,5,63,9
	.half	.L757-.L58
	.byte	1,5,57,9
	.half	.L758-.L757
	.byte	1,5,72,9
	.half	.L759-.L758
	.byte	1,9
	.half	.L173-.L759
	.byte	0,1,1,5,59,0,5,2
	.word	.L58
	.byte	3,255,3,1,5,63,9
	.half	.L757-.L58
	.byte	1,5,57,9
	.half	.L758-.L757
	.byte	1,5,72,9
	.half	.L759-.L758
	.byte	1,9
	.half	.L760-.L759
	.byte	3,124,1,7,9
	.half	.L173-.L760
	.byte	0,1,1
.L754:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L58,0,.L173-.L58,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_HU_Display')
	.sect	'.debug_info'
.L174:
	.word	168
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_HU_Display',0,22,19,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_HU_Display
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_HU_Display')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_DVRS_Display')
	.sect	'.debug_info'
.L176:
	.word	170
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_DVRS_Display',0,22,20,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_DVRS_Display
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_DVRS_Display')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_GW_Profile')
	.sect	'.debug_info'
.L178:
	.word	168
	.half	3
	.word	.L179
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_GW_Profile',0,22,21,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_GW_Profile
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_GW_Profile')
	.sect	'.debug_abbrev'
.L179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_HU_Profile')
	.sect	'.debug_info'
.L180:
	.word	168
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_HU_Profile',0,22,22,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_HU_Profile
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_HU_Profile')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_ENG_STAT')
	.sect	'.debug_info'
.L182:
	.word	166
	.half	3
	.word	.L183
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_ENG_STAT',0,22,23,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_ENG_STAT
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_ENG_STAT')
	.sect	'.debug_abbrev'
.L183:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_NM_DVRS_go_flag')
	.sect	'.debug_info'
.L184:
	.word	173
	.half	3
	.word	.L185
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_NM_DVRS_go_flag',0,22,52,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_NM_DVRS_go_flag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_NM_DVRS_go_flag')
	.sect	'.debug_abbrev'
.L185:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_NM_CGW_Dest')
	.sect	'.debug_info'
.L186:
	.word	169
	.half	3
	.word	.L187
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_NM_CGW_Dest',0,22,50,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_NM_CGW_Dest
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_NM_CGW_Dest')
	.sect	'.debug_abbrev'
.L187:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('gu8_NM_CGW_Sleep_flag')
	.sect	'.debug_info'
.L188:
	.word	175
	.half	3
	.word	.L189
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'gu8_NM_CGW_Sleep_flag',0,22,49,7
	.word	.L379
	.byte	1,5,3
	.word	gu8_NM_CGW_Sleep_flag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('gu8_NM_CGW_Sleep_flag')
	.sect	'.debug_abbrev'
.L189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('stmSfr2')
	.sect	'.debug_info'
.L190:
	.word	161
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'stmSfr2',0,22,26,10
	.word	.L380
	.byte	1,5,3
	.word	stmSfr2
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('stmSfr2')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('g_MulticanBasic')
	.sect	'.debug_info'
.L192:
	.word	169
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'g_MulticanBasic',0,22,16,19
	.word	.L381
	.byte	1,5,3
	.word	g_MulticanBasic
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_MulticanBasic')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('can_sleep_count')
	.sect	'.debug_info'
.L194:
	.word	169
	.half	3
	.word	.L195
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'can_sleep_count',0,22,18,8
	.word	.L382
	.byte	1,5,3
	.word	can_sleep_count
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('can_sleep_count')
	.sect	'.debug_abbrev'
.L195:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_DF')
	.sect	'.debug_info'
.L196:
	.word	165
	.half	3
	.word	.L197
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_DF',0,22,28,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_DF
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_DF')
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_12F')
	.sect	'.debug_info'
.L198:
	.word	166
	.half	3
	.word	.L199
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_12F',0,22,29,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_12F
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_12F')
	.sect	'.debug_abbrev'
.L199:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_45D')
	.sect	'.debug_info'
.L200:
	.word	166
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_45D',0,22,31,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_45D
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_45D')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('mcan_NM_DVRS')
	.sect	'.debug_info'
.L202:
	.word	166
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'mcan_NM_DVRS',0,22,47,10
	.word	.L287
	.byte	1,5,3
	.word	mcan_NM_DVRS
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('mcan_NM_DVRS')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_NM_sleep_cnt')
	.sect	'.debug_info'
.L204:
	.word	171
	.half	3
	.word	.L205
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_NM_sleep_cnt',0,22,45,7
	.word	.L379
	.byte	1,5,3
	.word	Mcan_NM_sleep_cnt
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_NM_sleep_cnt')
	.sect	'.debug_abbrev'
.L205:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_NM_sleep_flag')
	.sect	'.debug_info'
.L206:
	.word	172
	.half	3
	.word	.L207
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_NM_sleep_flag',0,22,46,7
	.word	.L379
	.byte	1,5,3
	.word	Mcan_NM_sleep_flag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_NM_sleep_flag')
	.sect	'.debug_abbrev'
.L207:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_13F')
	.sect	'.debug_info'
.L208:
	.word	166
	.half	3
	.word	.L209
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_13F',0,22,30,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_13F
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_13F')
	.sect	'.debug_abbrev'
.L209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_18B')
	.sect	'.debug_info'
.L210:
	.word	166
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_18B',0,22,32,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_18B
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_18B')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_173')
	.sect	'.debug_info'
.L212:
	.word	166
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_173',0,22,33,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_173
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_173')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_169')
	.sect	'.debug_info'
.L214:
	.word	166
	.half	3
	.word	.L215
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_169',0,22,34,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_169
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_169')
	.sect	'.debug_abbrev'
.L215:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_440')
	.sect	'.debug_info'
.L216:
	.word	166
	.half	3
	.word	.L217
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_440',0,22,35,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_440
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_440')
	.sect	'.debug_abbrev'
.L217:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_455')
	.sect	'.debug_info'
.L218:
	.word	166
	.half	3
	.word	.L219
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_455',0,22,36,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_455
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_455')
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcan_msg_102')
	.sect	'.debug_info'
.L220:
	.word	166
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'Mcan_msg_102',0,22,37,21
	.word	.L271
	.byte	1,5,3
	.word	Mcan_msg_102
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcan_msg_102')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('scu2')
	.sect	'.debug_info'
.L222:
	.word	158
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'scu2',0,22,39,10
	.word	.L383
	.byte	1,5,3
	.word	scu2
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('scu2')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('smu2')
	.sect	'.debug_info'
.L224:
	.word	158
	.half	3
	.word	.L225
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'smu2',0,22,41,10
	.word	.L384
	.byte	1,5,3
	.word	smu2
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('smu2')
	.sect	'.debug_abbrev'
.L225:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('readStatus_440')
	.sect	'.debug_info'
.L226:
	.word	168
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'readStatus_440',0,22,43,21
	.word	.L385
	.byte	1,5,3
	.word	readStatus_440
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('readStatus_440')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('stat_temp')
	.sect	'.debug_info'
.L228:
	.word	164
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'..\\APP\\src\\Mcan.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\00.Tasking_workspace\\DVRS_INTEL\\RGB_IR_INTEL_REV05\\Debug\\',0,12,1,2
	.word	.L70
	.byte	3
	.byte	'stat_temp',0,22,141,4,7
	.word	.L379
	.byte	1,5,3
	.word	stat_temp
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('stat_temp')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L43:
	.word	-1,.L44,0,.L158-.L44
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L41:
	.word	-1,.L42,0,.L163-.L42
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L168-.L61
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L57:
	.word	-1,.L58,0,.L173-.L58
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L153-.L48
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Receive_Mcan_1000ms')
	.sect	'.debug_loc'
.L55:
	.word	-1,.L56,0,.L348-.L56
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L56,.L398-.L56,.L399-.L56
	.half	5
	.byte	144,32,157,32,0
	.word	.L58-.L56,.L173-.L56
	.half	5
	.byte	144,32,157,32,0
	.word	.L400-.L56,.L401-.L56
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Receive_Mcan_10ms')
	.sect	'.debug_loc'
.L49:
	.word	-1,.L50,0,.L344-.L50
	.half	2
	.byte	138,0
	.word	0,0
.L347:
	.word	-1,.L50,.L394-.L50,.L395-.L50
	.half	1
	.byte	95
	.word	.L396-.L50,.L397-.L50
	.half	1
	.byte	95
	.word	.L18-.L50,.L21-.L50
	.half	1
	.byte	95
	.word	0,0
.L345:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Recieve_Mcan_200ms')
	.sect	'.debug_loc'
.L51:
	.word	-1,.L52,0,.L360-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L361:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Recieve_Mcan_NM')
	.sect	'.debug_loc'
.L53:
	.word	-1,.L54,0,.L362-.L54
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Trans_Mcan_13F')
	.sect	'.debug_loc'
.L39:
	.word	-1,.L40,0,.L388-.L40
	.half	2
	.byte	138,0
	.word	.L388-.L40,.L286-.L40
	.half	3
	.byte	138,192,0
	.word	.L286-.L40,.L286-.L40
	.half	2
	.byte	138,0
	.word	0,0
.L296:
	.word	0,0
.L295:
	.word	0,0
.L290:
	.word	-1,.L40,.L391-.L40,.L390-.L40
	.half	5
	.byte	144,32,157,32,0
	.word	.L42-.L40,.L163-.L40
	.half	5
	.byte	144,32,157,32,0
	.word	.L392-.L40,.L393-.L40
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L294:
	.word	0,0
.L297:
	.word	0,0
.L288:
	.word	0,0
.L293:
	.word	0,0
.L311:
	.word	-1,.L40,0,.L389-.L40
	.half	2
	.byte	145,112
	.word	.L44-.L40,.L158-.L40
	.half	2
	.byte	145,112
	.word	.L3-.L40,.L390-.L40
	.half	2
	.byte	145,112
	.word	.L42-.L40,.L163-.L40
	.half	2
	.byte	145,112
	.word	.L392-.L40,.L286-.L40
	.half	2
	.byte	145,112
	.word	0,0
.L298:
	.word	-1,.L40,0,.L389-.L40
	.half	2
	.byte	145,80
	.word	.L44-.L40,.L158-.L40
	.half	2
	.byte	145,80
	.word	.L3-.L40,.L390-.L40
	.half	2
	.byte	145,80
	.word	.L42-.L40,.L163-.L40
	.half	2
	.byte	145,80
	.word	.L392-.L40,.L286-.L40
	.half	2
	.byte	145,80
	.word	0,0
.L291:
	.word	-1,.L40,0,.L389-.L40
	.half	2
	.byte	145,64
	.word	.L44-.L40,.L158-.L40
	.half	2
	.byte	145,64
	.word	.L3-.L40,.L390-.L40
	.half	2
	.byte	145,64
	.word	.L42-.L40,.L163-.L40
	.half	2
	.byte	145,64
	.word	.L392-.L40,.L286-.L40
	.half	2
	.byte	145,64
	.word	0,0
.L301:
	.word	-1,.L40,0,.L389-.L40
	.half	2
	.byte	145,96
	.word	.L44-.L40,.L158-.L40
	.half	2
	.byte	145,96
	.word	.L3-.L40,.L390-.L40
	.half	2
	.byte	145,96
	.word	.L42-.L40,.L163-.L40
	.half	2
	.byte	145,96
	.word	.L392-.L40,.L286-.L40
	.half	2
	.byte	145,96
	.word	0,0
.L306:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Transmit_Mcan')
	.sect	'.debug_loc'
.L37:
	.word	-1,.L38,0,.L387-.L38
	.half	2
	.byte	138,0
	.word	.L387-.L38,.L270-.L38
	.half	2
	.byte	138,16
	.word	.L270-.L38,.L270-.L38
	.half	2
	.byte	138,0
	.word	0,0
.L282:
	.word	0,0
.L280:
	.word	0,0
.L278:
	.word	0,0
.L284:
	.word	0,0
.L272:
	.word	-1,.L38,0,.L270-.L38
	.half	2
	.byte	145,112
	.word	0,0
.L276:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Transmit_Mcan_10ms')
	.sect	'.debug_loc'
.L59:
	.word	-1,.L29,0,.L356-.L29
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Transmit_Mcan_200ms')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L358-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L359:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Transmit_NM_DVRS')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L365-.L69
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('check_NM_CGW')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L363-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L364:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_Mcan')
	.sect	'.debug_loc'
.L249:
	.word	-1,.L36,0,.L247-.L36
	.half	3
	.byte	145,184,126
	.word	0,0
.L256:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L258:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L260:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L262:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L264:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L266:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L268:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L269:
	.word	-1,.L36,0,.L247-.L36
	.half	2
	.byte	145,68
	.word	0,0
.L252:
	.word	-1,.L36,0,.L247-.L36
	.half	3
	.byte	145,132,127
	.word	0,0
.L35:
	.word	-1,.L36,0,.L386-.L36
	.half	2
	.byte	138,0
	.word	.L386-.L36,.L247-.L36
	.half	3
	.byte	138,200,1
	.word	.L247-.L36,.L247-.L36
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_Mcan_Msg')
	.sect	'.debug_loc'
.L335:
	.word	0,0
.L334:
	.word	0,0
.L333:
	.word	0,0
.L45:
	.word	-1,.L46,0,.L330-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L336:
	.word	0,0
.L332:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_Mcan_Port')
	.sect	'.debug_loc'
.L244:
	.word	0,0
.L31:
	.word	-1,.L32,0,.L230-.L32
	.half	2
	.byte	138,0
	.word	0,0
.L236:
	.word	0,0
.L242:
	.word	0,0
.L234:
	.word	0,0
.L240:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_NM_DVRS')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L378-.L65
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('sleep_Mcan_Trans')
	.sect	'.debug_loc'
.L376:
	.word	0,0
.L372:
	.word	0,0
.L375:
	.word	0,0
.L370:
	.word	0,0
.L374:
	.word	0,0
.L33:
	.word	-1,.L34,0,.L366-.L34
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L761:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('init_Mcan_Port')
	.sect	'.debug_frame'
	.word	24
	.word	.L761,.L32,.L230-.L32
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('sleep_Mcan_Trans')
	.sect	'.debug_frame'
	.word	24
	.word	.L761,.L34,.L366-.L34
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('init_Mcan')
	.sect	'.debug_frame'
	.word	36
	.word	.L761,.L36,.L247-.L36
	.byte	4
	.word	(.L386-.L36)/2
	.byte	19,200,1,22,26,4,19,138,200,1,4
	.word	(.L247-.L386)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Transmit_Mcan')
	.sect	'.debug_frame'
	.word	36
	.word	.L761,.L38,.L270-.L38
	.byte	4
	.word	(.L387-.L38)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L270-.L387)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Trans_Mcan_13F')
	.sect	'.debug_frame'
	.word	36
	.word	.L761,.L40,.L286-.L40
	.byte	4
	.word	(.L388-.L40)/2
	.byte	19,192,0,22,26,4,19,138,192,0,4
	.word	(.L286-.L388)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('init_Mcan_Msg')
	.sect	'.debug_frame'
	.word	24
	.word	.L761,.L46,.L330-.L46
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Receive_Mcan_10ms')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L50,.L344-.L50
	.sdecl	'.debug_frame',debug,cluster('Recieve_Mcan_200ms')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L52,.L360-.L52
	.sdecl	'.debug_frame',debug,cluster('Recieve_Mcan_NM')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L54,.L362-.L54
	.sdecl	'.debug_frame',debug,cluster('Receive_Mcan_1000ms')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L56,.L348-.L56
	.sdecl	'.debug_frame',debug,cluster('Transmit_Mcan_10ms')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L29,.L356-.L29
	.sdecl	'.debug_frame',debug,cluster('Transmit_Mcan_200ms')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L63,.L358-.L63
	.sdecl	'.debug_frame',debug,cluster('init_NM_DVRS')
	.sect	'.debug_frame'
	.word	24
	.word	.L761,.L65,.L378-.L65
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('check_NM_CGW')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L67,.L363-.L67
	.sdecl	'.debug_frame',debug,cluster('Transmit_NM_DVRS')
	.sect	'.debug_frame'
	.word	12
	.word	.L761,.L69,.L365-.L69
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L762:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L762,.L42,.L163-.L42
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L762,.L44,.L158-.L44
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L762,.L48,.L153-.L48
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L762,.L58,.L173-.L58
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L762,.L61,.L168-.L61
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
